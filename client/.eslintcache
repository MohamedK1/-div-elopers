[{"C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\index.js":"1","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\reportWebVitals.js":"2","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\App.js":"3","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\ResetPasswordForm.js":"4","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\hr.js":"5","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\hod.js":"6","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\ci.js":"7","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\cc\\cc.js":"8","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\ac.js":"9","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\Login.js":"10","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\ViewMissingDaysForm.js":"11","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\Navigation_Bar.js":"12","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\Material_UI_Copyright.js":"13","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\annualLeaveRequest.js":"14","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\accidentalLeaveRequest.js":"15","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\viewStaffProfiles.js":"16","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\compensationLeaveRequest.js":"17","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\sickLeaveRequest.js":"18","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\maternityLeaveRequest.js":"19","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\departmentCourses.js":"20","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\changeDayOffRequest.js":"21","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\manageCourseStaff.js":"22","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\CIViewStaffProfiles.js":"23","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\Alert_Message.js":"24","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\ac_helper.js":"25","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\ManageCourseInstructors.js":"26","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\Attendance.js":"27","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\CICourses.js":"28","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\actions\\setAuthToken.js":"29","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\Profile.js":"30","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Course_Handler\\Course_Card.js":"31","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Faculty_Handler\\Faculty_Card.js":"32","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Department_Handler\\Department_Card.js":"33","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\StaffMember_Handler\\StaffMember_Card.js":"34","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Location_Handler\\Location_Card.js":"35","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Schedule_Handler\\Schedule.js":"36","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\actions\\authAction.js":"37","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\requestForm.js":"38","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\updateInstructorForm.js":"39","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\All_Course_Schedule\\Course_Schedule.js":"40","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Annual_Leave\\Annual_Leave_List.js":"41","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Change_Day_Off\\Change_Day_Off_List.js":"42","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Accidental_Leave\\Accidental_Leave_List.js":"43","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Compensation_Leave\\Compensation_Leave_List.js":"44","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Maternity_leave\\Maternity_Leave_List.js":"45","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\assignCourseCoordinatorForm.js":"46","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Sick_Leave\\Sick_Leave_List.js":"47","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\deleteInstructorForm.js":"48","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\assignInstructorForm.js":"49","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\slideBars\\AC_SlideBar.js":"50","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\DropdownList_Attendance.js":"51","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Schedule_Handler\\Schedule_Slot_Card.js":"52","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Accidental_Leave\\Accidental_Leave_Request_Card.js":"53","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Sick_Leave\\Sick_Leave_Request_Card.js":"54","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Maternity_leave\\Maternity_Leave_Request_Card.js":"55","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\CI_List.js":"56","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Schedule_Handler\\Replacement_Request_Card.js":"57","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\ac_List.js":"58","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Compensation_Leave\\Compensation_Leave_Request_Card.js":"59","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Change_Day_Off\\Change_Day_Off_Request_Card.js":"60","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Annual_Leave\\Annual_Leave_Request_Card.js":"61","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\All_Course_Schedule\\Course_Schedule_Card.js":"62","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\departmentCoursesCard.js":"63","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Location_Handler\\Edit_Location_Form.js":"64","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Location_Handler\\Add_Location_Form.js":"65","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\StaffMember_Handler\\Add_Missing_SignIn_Out_Form.js":"66","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\StaffMember_Handler\\AttendanceRecord_Form.js":"67","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\StaffMember_Handler\\Add_StaffMember_Form.js":"68","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\StaffMember_Handler\\Edit_StaffMember_Form.js":"69","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Department_Handler\\Edit_Department_Form.js":"70","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Department_Handler\\Add_Department_Form.js":"71","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Faculty_Handler\\Edit_Faculty_Form.js":"72","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Course_Handler\\Edit_Course_Form.js":"73","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Faculty_Handler\\Add_Faculty_Form.js":"74","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\addExtraInfoForm.js":"75","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Course_Handler\\Add_Course_Form.js":"76","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\editProfileForm.js":"77","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\updateAcademicMemberForm.js":"78","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\CICoursesCard.js":"79","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\assignAcademicMemberForm.js":"80","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\cc\\Slot_Linking_Request\\Schedule_Requests_Card.js":"81","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\cc\\Slot_Handler\\Slot_Card.js":"82","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\slideBars\\HR_SlideBar.js":"83","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\slideBars\\Hod_SlideBar.js":"84","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\slideBars\\CI_SlideBar.js":"85","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\DropdownList_NavBar.js":"86","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\slideBars\\CC_SlideBar.js":"87","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\DropdownList_Notifications.js":"88","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\cc\\Slot_Handler\\Schedule_SLot_Card.js":"89","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\cc\\Slot_Handler\\Add_Slot_Form.js":"90","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\cc\\Slot_Linking_Request\\Schedule_Slot_Card.js":"91","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\cc\\Slot_Handler\\Edit_Slot_Form.js":"92"},{"size":472,"mtime":1610487573684,"results":"93","hashOfConfig":"94"},{"size":375,"mtime":1609084896175,"results":"95","hashOfConfig":"94"},{"size":1596,"mtime":1610134061966,"results":"96","hashOfConfig":"94"},{"size":6530,"mtime":1610560571787,"results":"97","hashOfConfig":"94"},{"size":12810,"mtime":1610548287725,"results":"98","hashOfConfig":"94"},{"size":21377,"mtime":1610278792765,"results":"99","hashOfConfig":"94"},{"size":19393,"mtime":1610278792745,"results":"100","hashOfConfig":"94"},{"size":16212,"mtime":1610568866964,"results":"101","hashOfConfig":"94"},{"size":11242,"mtime":1610278792731,"results":"102","hashOfConfig":"94"},{"size":10110,"mtime":1610558388515,"results":"103","hashOfConfig":"94"},{"size":8888,"mtime":1610015962276,"results":"104","hashOfConfig":"94"},{"size":9604,"mtime":1610278792711,"results":"105","hashOfConfig":"94"},{"size":611,"mtime":1609442329540,"results":"106","hashOfConfig":"94"},{"size":11930,"mtime":1610568866985,"results":"107","hashOfConfig":"94"},{"size":10068,"mtime":1610568866984,"results":"108","hashOfConfig":"94"},{"size":7477,"mtime":1610134062104,"results":"109","hashOfConfig":"94"},{"size":10222,"mtime":1610568867024,"results":"110","hashOfConfig":"94"},{"size":10163,"mtime":1610568867058,"results":"111","hashOfConfig":"94"},{"size":10310,"mtime":1610568867044,"results":"112","hashOfConfig":"94"},{"size":8575,"mtime":1610190108040,"results":"113","hashOfConfig":"94"},{"size":10306,"mtime":1610568867012,"results":"114","hashOfConfig":"94"},{"size":11726,"mtime":1610190107890,"results":"115","hashOfConfig":"94"},{"size":7286,"mtime":1610134062079,"results":"116","hashOfConfig":"94"},{"size":1376,"mtime":1610278792704,"results":"117","hashOfConfig":"94"},{"size":1215,"mtime":1610015962290,"results":"118","hashOfConfig":"94"},{"size":9809,"mtime":1610558388529,"results":"119","hashOfConfig":"94"},{"size":9920,"mtime":1609936725791,"results":"120","hashOfConfig":"94"},{"size":15100,"mtime":1610190107829,"results":"121","hashOfConfig":"94"},{"size":247,"mtime":1609442329519,"results":"122","hashOfConfig":"94"},{"size":8885,"mtime":1610560850949,"results":"123","hashOfConfig":"94"},{"size":9154,"mtime":1610186996214,"results":"124","hashOfConfig":"94"},{"size":7991,"mtime":1610547217550,"results":"125","hashOfConfig":"94"},{"size":8285,"mtime":1610550865258,"results":"126","hashOfConfig":"94"},{"size":17556,"mtime":1610188124499,"results":"127","hashOfConfig":"94"},{"size":7636,"mtime":1610187620548,"results":"128","hashOfConfig":"94"},{"size":11984,"mtime":1610568866953,"results":"129","hashOfConfig":"94"},{"size":750,"mtime":1610021584281,"results":"130","hashOfConfig":"94"},{"size":1661,"mtime":1610015962357,"results":"131","hashOfConfig":"94"},{"size":3954,"mtime":1610568867067,"results":"132","hashOfConfig":"94"},{"size":8730,"mtime":1610199648500,"results":"133","hashOfConfig":"94"},{"size":8918,"mtime":1610278792717,"results":"134","hashOfConfig":"94"},{"size":9009,"mtime":1610192125737,"results":"135","hashOfConfig":"94"},{"size":8976,"mtime":1610191909649,"results":"136","hashOfConfig":"94"},{"size":9182,"mtime":1610192327049,"results":"137","hashOfConfig":"94"},{"size":9216,"mtime":1610192546695,"results":"138","hashOfConfig":"94"},{"size":3620,"mtime":1610190107868,"results":"139","hashOfConfig":"94"},{"size":9000,"mtime":1610192611322,"results":"140","hashOfConfig":"94"},{"size":3230,"mtime":1610568867034,"results":"141","hashOfConfig":"94"},{"size":3119,"mtime":1610568866998,"results":"142","hashOfConfig":"94"},{"size":2495,"mtime":1610109690435,"results":"143","hashOfConfig":"94"},{"size":2157,"mtime":1609442329520,"results":"144","hashOfConfig":"94"},{"size":9783,"mtime":1610192815713,"results":"145","hashOfConfig":"94"},{"size":3062,"mtime":1610568866865,"results":"146","hashOfConfig":"94"},{"size":3990,"mtime":1610568866934,"results":"147","hashOfConfig":"94"},{"size":4478,"mtime":1610568866922,"results":"148","hashOfConfig":"94"},{"size":3849,"mtime":1610278792738,"results":"149","hashOfConfig":"94"},{"size":4856,"mtime":1610192879371,"results":"150","hashOfConfig":"94"},{"size":7034,"mtime":1610487552593,"results":"151","hashOfConfig":"94"},{"size":5780,"mtime":1610568866920,"results":"152","hashOfConfig":"94"},{"size":3661,"mtime":1610568866910,"results":"153","hashOfConfig":"94"},{"size":3279,"mtime":1610568866893,"results":"154","hashOfConfig":"94"},{"size":6464,"mtime":1610191706424,"results":"155","hashOfConfig":"94"},{"size":1788,"mtime":1609845667209,"results":"156","hashOfConfig":"94"},{"size":3874,"mtime":1610187789981,"results":"157","hashOfConfig":"94"},{"size":3898,"mtime":1610570304000,"results":"158","hashOfConfig":"94"},{"size":7459,"mtime":1610188192537,"results":"159","hashOfConfig":"94"},{"size":1467,"mtime":1609935276662,"results":"160","hashOfConfig":"94"},{"size":10415,"mtime":1610188033862,"results":"161","hashOfConfig":"94"},{"size":9710,"mtime":1610552844572,"results":"162","hashOfConfig":"94"},{"size":5136,"mtime":1610552078965,"results":"163","hashOfConfig":"94"},{"size":4770,"mtime":1610548612903,"results":"164","hashOfConfig":"94"},{"size":3290,"mtime":1610552216903,"results":"165","hashOfConfig":"94"},{"size":4867,"mtime":1610187045941,"results":"166","hashOfConfig":"94"},{"size":3286,"mtime":1610548570704,"results":"167","hashOfConfig":"94"},{"size":2098,"mtime":1610132465314,"results":"168","hashOfConfig":"94"},{"size":4284,"mtime":1610186983862,"results":"169","hashOfConfig":"94"},{"size":2039,"mtime":1610185425139,"results":"170","hashOfConfig":"94"},{"size":5230,"mtime":1610190107902,"results":"171","hashOfConfig":"94"},{"size":5423,"mtime":1610190107839,"results":"172","hashOfConfig":"94"},{"size":4032,"mtime":1610190107858,"results":"173","hashOfConfig":"94"},{"size":6857,"mtime":1610189683368,"results":"174","hashOfConfig":"94"},{"size":7881,"mtime":1610189263184,"results":"175","hashOfConfig":"94"},{"size":5007,"mtime":1610134062189,"results":"176","hashOfConfig":"94"},{"size":8102,"mtime":1610279659296,"results":"177","hashOfConfig":"94"},{"size":2961,"mtime":1610278792771,"results":"178","hashOfConfig":"94"},{"size":2995,"mtime":1610293417419,"results":"179","hashOfConfig":"94"},{"size":3622,"mtime":1610134062181,"results":"180","hashOfConfig":"94"},{"size":2505,"mtime":1610558388508,"results":"181","hashOfConfig":"94"},{"size":5504,"mtime":1610565940248,"results":"182","hashOfConfig":"94"},{"size":6008,"mtime":1610189526104,"results":"183","hashOfConfig":"94"},{"size":5948,"mtime":1610190006044,"results":"184","hashOfConfig":"94"},{"size":6090,"mtime":1610189584481,"results":"185","hashOfConfig":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},"18qt9z1",{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"188"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"188"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"188"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"188"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"188"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"188"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"188"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"188"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"188"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"188"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"188"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"188"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"188"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"188"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"188"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"188"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"188"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"188"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"188"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"188"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"188"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"188"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"188"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"188"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"188"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"188"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"188"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"188"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"188"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"188"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"188"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"188"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"188"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"188"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"188"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"188"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"188"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"188"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"188"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"188"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"188"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"188"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"188"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"188"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"188"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"188"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"188"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"188"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"188"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"188"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"188"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"188"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"188"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"188"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"188"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"188"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"188"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"188"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"188"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"188"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"188"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"188"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"188"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"188"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"188"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"188"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"188"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"188"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"188"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"188"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"188"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"188"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"188"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"188"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"188"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"188"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"188"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"188"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"188"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"188"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"188"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"188"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"188"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"188"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"188"},"C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\index.js",[],["456","457"],"C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\reportWebVitals.js",[],"C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\App.js",["458","459","460","461"],"import React from 'react';\r\nimport { BrowserRouter, Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Login from \"./components/Login\";\r\nimport ResetPassword from './components/ResetPasswordForm.js';\r\nimport HOD from \"./components/routes/hod/hod.js\";\r\nimport HR from './components/routes/hr/hr.js';\r\nimport CI from \"./components/routes/ci/ci.js\";\r\nimport CC from \"./components/routes/cc/cc.js\";\r\nimport AC from \"./components/routes/ac/ac.js\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n//Test pickers\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <BrowserRouter>\r\n          <div className=\"App\">\r\n            <Route exact path=\"/resetPassword\" component={ResetPassword} />\r\n            <Route exact path=\"/\" component={Login} />\r\n            <Route exact path=\"/hod\" component={HOD} />\r\n            <Route exact path=\"/hr\" component={HR} />\r\n            <Route exact path=\"/ci\" component={CI} />\r\n            <Route exact path=\"/cc\" component={CC} />\r\n            <Route exact path=\"/ac\" component={AC} />\r\n            {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleToggle}>\r\n              Show backdrop\r\n            </Button> */}\r\n          </div>\r\n        </BrowserRouter>\r\n      </MuiPickersUtilsProvider>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\ResetPasswordForm.js",["462","463","464","465","466","467","468","469"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport CopyRight from './Material_UI_Copyright.js';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function ResetPassword(props) {\r\n  const classes = useStyles();\r\n  const [oldPassword , setOldPassword] = React.useState(null);\r\n  const [newPassword , setNewPassword] = React.useState(null);\r\n  const [newPasswordConfirm , setNewPasswordConfirm] = React.useState(null);\r\n  const [passFlag , setPassFlag] = React.useState(false);\r\n  const [msg , setMsg] = React.useState();\r\n  const [clicked , setClicked] = React.useState(false);\r\n  const [shouldLogin , setShouldLogin] = React.useState(false);\r\n  const [newequalOld , setNewequalOld] = React.useState(false);\r\n  const [errorMsg , setErrorMsg] = React.useState(null);\r\n\r\n  const handleSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        setClicked(true);\r\n        setPassFlag(true);\r\n        setMsg((newPassword.localeCompare(newPasswordConfirm)) == 0 ? true : false);\r\n        try{\r\n            const req = {\r\n              oldPassword : oldPassword,\r\n              newPassword : newPassword,\r\n            }\r\n            if (props.location.state != null) req.firstLogin = props.location.state.firstLogin;\r\n            const res = await axios.post('/resetPassword',req);\r\n            setShouldLogin(true);\r\n        }\r\n        catch(err){\r\n           // console.log(err);\r\n           setErrorMsg(err.response.data);\r\n        }\r\n        setClicked(false);\r\n  }\r\n  if (shouldLogin) {\r\n    if (parseInt(localStorage.getItem(\"type\")) == 1) {\r\n        return <Redirect to='/hr' />;\r\n    } else {\r\n        switch (parseInt(localStorage.getItem(\"academicMemberType\"))) {\r\n            case 0: return <Redirect to='/hod' />;\r\n            case 1: return <Redirect to='/ci' />;\r\n            case 2: return <Redirect to='/cc' />;\r\n            case 3: return <Redirect to='/ac' />;\r\n            default: ;\r\n        }\r\n    }\r\n    }\r\n    return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Reset Password\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"oldPassword\"\r\n            label=\"Old Password\"\r\n            name=\"oldPassword\"\r\n            type =\"password\"\r\n            autoFocus\r\n            onChange = {(event) => {setOldPassword(event.target.value)}}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"New password\"\r\n            label=\"New Password\"\r\n            type=\"password\"\r\n            id=\"newPassword\"\r\n            autoFocus\r\n            onChange = {async (event) => {\r\n              await setNewPassword(event.target.value);\r\n              setNewequalOld(oldPassword.localeCompare(event.target.value) == 0)\r\n            }}\r\n          />\r\n          <Collapse in={newequalOld}>\r\n                <Alert\r\n                severity= \"error\"\r\n                id=\"passwordError\"\r\n                className={classes.alert}\r\n                > New Password can not be equal to the Old Password </Alert>\r\n            </Collapse>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"Confirm New password\"\r\n            label=\"Confirm New Password\"\r\n            type=\"password\"\r\n            id=\"newPasswordConfirm\"\r\n            autoFocus\r\n            onChange = {(event) => {setNewPasswordConfirm(event.target.value)}}\r\n          />\r\n          {\r\n              \r\n          }\r\n          <Collapse in={passFlag}>\r\n                <Alert\r\n                severity={msg ?\"success\" : \"error\"}\r\n                id=\"passwordError\"\r\n                className={classes.alert}\r\n                > {msg ? \"New Password Confirmed\" : \"Passwords don't Match\"}</Alert>\r\n            </Collapse>\r\n            { (clicked) ?\r\n            (\r\n                <CircularProgress\r\n                style={{\r\n                  marginTop: \"6px\",\r\n                  marginRight: \"240px\",\r\n                  display: \"block\",\r\n                  margin: \"0 auto\"\r\n                }}\r\n              />\r\n            ) :\r\n          <Button\r\n            disabled = {oldPassword == null || newPassword == null || newPasswordConfirm == null}\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick = {handleSubmit}\r\n            className={classes.submit}\r\n          >\r\n            SUBMIT\r\n          </Button>\r\n        }\r\n         <Collapse in={errorMsg != null}>\r\n                <Alert\r\n                severity= \"error\"\r\n                id=\"passwordError\"\r\n                className={classes.alert}\r\n                > {errorMsg}</Alert>\r\n            </Collapse>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <CopyRight />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\hr.js",["470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495"],"import { Container } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport setAuthToken from \"../../../actions/setAuthToken\";\r\nimport Attendance from \"../../Attendance\";\r\nimport Navigation_Bar from \"../../Navigation_Bar.js\";\r\nimport Profile from \"../../Profile\";\r\nimport Course_Card from \"./Course_Handler/Course_Card\";\r\nimport Department_Card from \"./Department_Handler/Department_Card\";\r\nimport Faculty_Card from \"./Faculty_Handler/Faculty_Card\";\r\nimport Location_Card from \"./Location_Handler/Location_Card\";\r\nimport StaffMember_Card from \"./StaffMember_Handler/StaffMember_Card\";\r\nimport ViewMissingDaysForm from '../../ViewMissingDaysForm.js';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AlertMessage from '../../Alert_Message.js';\r\n\r\nconst requestUserProfile = async () => {\r\n  const userProfile = await axios.get(\"/viewProfile\");\r\n  return userProfile.data;\r\n};\r\n\r\nconst requestAttendanceRecods = async () => {\r\n  const attendanceRecords = await axios.get(\"/viewAttendance\");\r\n  return attendanceRecords.data;\r\n};\r\n\r\nconst requestAllLocations = async () => {\r\n  const locations = await axios.get(\"/hr/viewAllLocations\");\r\n  return locations.data;\r\n};\r\n\r\nconst requestAllFacutlies = async () => {\r\n  let faculties = (await axios.get(\"/hr/viewAllFaculties\")).data;\r\n  faculties = faculties.sort((a, b) =>\r\n    a.name.toLowerCase().localeCompare(b.name.toLowerCase())\r\n  );\r\n  return faculties;\r\n};\r\n\r\nconst requestAllDepartments = async () => {\r\n  const departments = await axios.get(\"/hr/viewAllDepartments\");\r\n  return departments.data;\r\n};\r\n\r\nconst requestAllAcademicMembers = async () => {\r\n  const members = await axios.get(\"/hr/viewAllStaffMembers\");\r\n  return members.data.filter((elm) => elm.type == 0);\r\n};\r\n\r\nconst requestAllCourses = async () => {\r\n  let courses = await axios.get(\"/hr/viewAllCourses\");\r\n  courses = courses.data.sort((a, b) => a.ID - b.ID);\r\n  return courses;\r\n};\r\n\r\nconst viewAllMembersProfiles = async () => {\r\n  return (await axios.get(\"/hr/viewAllMembersProfiles\")).data;\r\n};\r\n\r\nconst requestAllOffices = async () => {\r\n  let locations = await axios.get(\"/hr/viewAllLocations\");\r\n  console.log(locations);\r\n  locations = locations.data.filter((elm) => elm.type == 2);\r\n  return locations;\r\n};\r\n\r\nconst requestStaffMembersWithMissingDays = async () => {\r\n  return (await axios.get(\"/hr/viewStaffMembersWithMissingDays\")).data;\r\n}\r\n\r\nconst requestStaffMembersWithMissingHours = async () => {\r\n  return (await axios.get(\"/hr/viewStaffMembersWithMissingHours\")).data;\r\n}\r\n\r\nconst requestMissingDays = async () => {\r\n  const res = await axios.get('/viewMissingDays');\r\n  const dates = res.data;\r\n  const mappedDates = [];\r\n  for (const date of dates) {\r\n    mappedDates.push({ date: (new Date(date)).toLocaleString() + \"\" })\r\n  }\r\n  console.log(mappedDates);\r\n  return mappedDates;\r\n}\r\n\r\nconst drawerWidth = 240;\r\nconst styles = (theme) => ({\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n});\r\nclass HR extends Component {\r\n  state = {\r\n    isLoggedIn: 0,\r\n    locations: [],\r\n    faculties: [],\r\n    departments: [],\r\n    courses: [],\r\n    staffMembers: [],\r\n    firstTimeLocations: true,\r\n    firstTimeFaculties: true,\r\n    firstTimeDepartments: true,\r\n    firstTimeCourses: true,\r\n    firstTimeStaffMembers: true,\r\n    componentInMain: <div />,\r\n    isAppBarShift: false,\r\n    showAlert: false,\r\n    alertMessage: \"\",\r\n    errorType : \"\",\r\n    backdropIsOpen: true,\r\n  };\r\n\r\n  handleAppBarShift = (event) => {\r\n    this.setState({ isAppBarShift: event });\r\n    console.log(this.state.isAppBarShift);\r\n  };\r\n\r\n  // decision => 0 for add , 1 for update, 2 for delete\r\n  handleLocations = async (obj, decision) => {\r\n    if (this.state.firstTimeLocations) {\r\n      console.log(\"first time location\", obj, decision);\r\n      this.setState({ firstTimeLocations: false });\r\n      const locations = await requestAllLocations();\r\n      locations.sort((a, b) => a.ID - b.ID);\r\n      this.setState({ locations: locations });\r\n      return locations;\r\n    }\r\n    else if (decision == 0) {\r\n      const locations = this.state.locations;\r\n      locations.push(obj);\r\n      locations.sort((a, b) => a.ID - b.ID);\r\n      this.setState({ locations: locations });\r\n    }\r\n    else if (decision == 1) {\r\n      const newLocations = this.state.locations.filter(elm => elm.ID != obj.ID);\r\n      newLocations.push(obj);\r\n      newLocations.sort((a, b) => a.ID - b.ID);\r\n      this.setState({ locations: newLocations });\r\n    }\r\n    else if (decision == 2) {\r\n      const newLocations = this.state.locations.filter(elm => elm.ID != obj.ID);\r\n      this.setState({ locations: newLocations });\r\n    }\r\n  };\r\n\r\n  handleFaculties = async (obj, decision) => {\r\n    if (this.state.firstTimeFaculties) {\r\n      console.log(\"first time faculty\", obj, decision);\r\n      this.setState({ firstTimeFaculties: false });\r\n      const faculties = await requestAllFacutlies();\r\n      faculties.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\r\n      this.setState({ faculties: faculties });\r\n      return faculties;\r\n    }\r\n    else if (decision == 0) {\r\n      const faculties = this.state.faculties;\r\n      faculties.push(obj);\r\n      faculties.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\r\n      this.setState({ faculties: faculties });\r\n    }\r\n    else if (decision == 1) {\r\n      const newFaculties = this.state.faculties.filter(elm => elm.name != obj.oldName);\r\n      delete obj.oldName;\r\n      newFaculties.push(obj);\r\n      newFaculties.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\r\n      this.setState({ faculties: newFaculties });\r\n    }\r\n    else if (decision == 2) {\r\n      const newFaculties = this.state.faculties.filter(elm => elm.name != obj.name);\r\n      this.setState({ faculties: newFaculties });\r\n    }\r\n  }\r\n\r\n  // handleDepartments = async (obj, decision) => {\r\n  //   if (this.state.firstTimeDepartments) {\r\n  //     console.log(\"first time department\", obj, decision);\r\n  //     this.setState({ firstTimeDepartments: false });\r\n  //     const departments = await requestAllDepartments();\r\n  //     departments.sort((a, b) => a.ID - b.ID);\r\n  //     this.setState({ departments: departments });\r\n  //     return departments;\r\n  //   }\r\n  //   else if (decision == 0) {\r\n  //     const departments = this.state.departments;\r\n  //     departments.push(obj);\r\n  //     departments.sort((a, b) => a.ID - b.ID);\r\n  //     this.setState({ departments: departments });\r\n  //   }\r\n  //   else if (decision == 1) {\r\n  //     const newDepartments = this.state.departments.filter(elm => elm.ID != obj.ID);\r\n  //     newDepartments.push(obj);\r\n  //     newDepartments.sort((a, b) => a.ID - b.ID);\r\n  //     this.setState({ departments: newDepartments });\r\n  //   }\r\n  //   else if (decision == 2) {\r\n  //     const newDepartments = this.state.departments.filter(elm => elm.ID != obj.ID);\r\n  //     this.setState({ departments: newDepartments });\r\n  //   }\r\n  // }\r\n\r\n    openAlert = (message , type = \"error\") => {\r\n      this.setState({ showAlert: true, alertMessage: message, errorType : type });\r\n  }\r\n\r\n\r\n  setComponentInMain = async (event) => {\r\n    console.log(\"aman\");\r\n    console.log(event);\r\n    this.setState({ backdropIsOpen: true });\r\n\r\n    await this.handleLocations();\r\n\r\n    if (event == \"viewMissingDays\") {\r\n      await this.setState({\r\n        componentInMain: (\r\n          <ViewMissingDaysForm\r\n            missedDays={await requestMissingDays()}\r\n          />\r\n        )\r\n      })\r\n    }\r\n    else if (event == \"profile\") {\r\n      await this.setState({\r\n        componentInMain: (\r\n          <Profile\r\n            profile={await requestUserProfile()}\r\n            setComponentInMain={this.setComponentInMain}\r\n            openAlert = {this.openAlert}\r\n          />\r\n        ),\r\n      });\r\n    } else if (event == \"location\") {\r\n      await this.setState({\r\n        componentInMain: (\r\n          <Location_Card\r\n            locations={this.state.locations}\r\n            handleLocations={this.handleLocations}\r\n            setComponentInMain={this.setComponentInMain}\r\n            openAlert = {this.openAlert}\r\n          />\r\n        ),\r\n      });\r\n    } else if (event == \"attendance\") {\r\n      await this.setState({\r\n        componentInMain: (\r\n          <Attendance\r\n            attendanceRecords={await requestAttendanceRecods()}\r\n            setComponentInMain={this.setComponentInMain}\r\n            openAlert = {this.openAlert}\r\n          />\r\n        ),\r\n      });\r\n    } else if (event == \"faculty\") {\r\n      await this.setState({\r\n        componentInMain: (\r\n          <Faculty_Card\r\n            faculties={await requestAllFacutlies()}\r\n            departments={await requestAllDepartments()}\r\n            handleFaculties={this.handleFaculties}\r\n            setComponentInMain={this.setComponentInMain}\r\n            openAlert = {this.openAlert}\r\n          />\r\n        ),\r\n      });\r\n    } else if (event == \"department\") {\r\n      await this.setState({\r\n        componentInMain: (\r\n          <Department_Card\r\n            departments={await requestAllDepartments()}\r\n            academicMembers={await requestAllAcademicMembers()}\r\n            setComponentInMain={this.setComponentInMain}\r\n            openAlert = {this.openAlert}\r\n          />\r\n        ),\r\n      });\r\n    } else if (event == \"course\") {\r\n      await this.setState({\r\n        componentInMain: (\r\n          <Course_Card\r\n            courses={await requestAllCourses()}\r\n            departments={await requestAllDepartments()}\r\n            academicMembers={await requestAllAcademicMembers()}\r\n            setComponentInMain={this.setComponentInMain}\r\n            openAlert = {this.openAlert}\r\n          />\r\n        ),\r\n      });\r\n    } else if (event == \"staffMember\") {\r\n      await this.setState({\r\n        componentInMain: (\r\n          <StaffMember_Card\r\n            departments={await requestAllDepartments()}\r\n            staffMembers={await viewAllMembersProfiles()}\r\n            offices={await requestAllOffices()}\r\n            staffMembersWithMissingDays={await requestStaffMembersWithMissingDays()}\r\n            staffMembersWithMissingHours={await requestStaffMembersWithMissingHours()}\r\n            setComponentInMain={this.setComponentInMain}\r\n            openAlert = {this.openAlert}\r\n          />\r\n        ),\r\n      });\r\n    }\r\n    this.setState({ backdropIsOpen: false })\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ backdropIsOpen: true })\r\n\r\n    if (!localStorage.getItem(\"auth-token\")) {\r\n      this.setState({ isLoggedIn: 1 });\r\n      return;\r\n    }\r\n    try {\r\n      setAuthToken(localStorage.getItem(\"auth-token\"));\r\n      await axios.get(\"/authStaffMember\");\r\n      await axios.get(\"/authHr\");\r\n\r\n      this.setState({ isLoggedIn: 2 });\r\n    } catch (err) {\r\n      this.setState({ isLoggedIn: 1 });\r\n    }\r\n\r\n    this.setState({ backdropIsOpen: false })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.state.isLoggedIn === 0) return <div />;\r\n    if (this.state.isLoggedIn === 1) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Navigation_Bar\r\n            handleAppBarShift={this.handleAppBarShift}\r\n            fromParent={this.setComponentInMain}\r\n            openAlert = {this.openAlert}\r\n          />\r\n          <Container\r\n            maxWidth=\"lg\"\r\n            style={{ marginTop: \"100px\" }}\r\n            className={clsx({\r\n              [classes.appBarShift]: this.state.isAppBarShift,\r\n            })}\r\n          >\r\n            {this.state.componentInMain}\r\n          </Container>\r\n        </div>\r\n        <AlertMessage open={this.state.showAlert} type={this.state.errorType} onClose={() => { this.setState({ showAlert: false }) }}\r\n          msg={this.state.alertMessage} />\r\n        <Backdrop className={classes.backdrop} open={this.state.backdropIsOpen}\r\n          style={{ zIndex: 600000000 }}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(HR);\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\hod.js",["496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540"],"import { Container } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport setAuthToken from \"../../../actions/setAuthToken\";\r\nimport Attendance from '../../Attendance';\r\nimport Navigation_Bar from '../../Navigation_Bar.js';\r\nimport Profile from '../../Profile';\r\nimport ViewMissingDaysForm from '../../ViewMissingDaysForm.js';\r\nimport Accidental_Leave_Request from \"../ac/Academic_Requests/Accidental_Leave/Accidental_Leave_List\";\r\nimport Annual_Leave_Request from \"../ac/Academic_Requests/Annual_Leave/Annual_Leave_List\";\r\nimport Change_Day_Off_Request from \"../ac/Academic_Requests/Change_Day_Off/Change_Day_Off_List\";\r\nimport Compensation_Leave_Request from \"../ac/Academic_Requests/Compensation_Leave/Compensation_Leave_List\";\r\nimport Maternity_Leave_Request from \"../ac/Academic_Requests/Maternity_leave/Maternity_Leave_List\";\r\nimport Sick_Leave_Request from \"../ac/Academic_Requests/Sick_Leave/Sick_Leave_List\";\r\nimport {\r\n    getAllCoursesInstructorsNames,\r\n    getAllMissingDays, getAllSentRequests,\r\n    getReplacementRequests, requestSchedule,\r\n    viewAllCourseSchedules\r\n} from '../ac/ac_helper.js';\r\nimport Course_Schedule from \"../ac/All_Course_Schedule/Course_Schedule\";\r\nimport Schedule from '../ac/Schedule_Handler/Schedule';\r\nimport AccidentalLeaveRequest from './accidentalLeaveRequest.js';\r\nimport AnnualLeaveRequest from './annualLeaveRequest.js';\r\nimport ChangeDayOffRequest from './changeDayOffRequest.js';\r\nimport CompensationLeaveRequest from './compensationLeaveRequest.js';\r\nimport DepartmentCourses from './departmentCourses.js';\r\nimport ManageCourseInstructors from './ManageCourseInstructors.js';\r\nimport MaternityLeaveRequest from './maternityLeaveRequest.js';\r\nimport SickLeaveRequest from './sickLeaveRequest.js';\r\nimport ViewStaffProfiles from './viewStaffProfiles.js';\r\nimport AlertMessage from '../../Alert_Message.js';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CI from '../ci/ci'\r\nconst requestUserProfile = async (openAlert) => {\r\n    try {\r\n        const userProfile = await axios.get('/viewProfile');\r\n        return userProfile.data;\r\n    } catch (err) {\r\n        openAlert(err.response.data);\r\n        return {}\r\n    }\r\n}\r\n\r\n\r\nconst requestAttendanceRecods = async (openAlert) => {\r\n    try {\r\n        const attendanceRecords = await axios.get('/viewAttendance');\r\n        return attendanceRecords.data;\r\n    } catch (err) {\r\n        openAlert(err.response.data);\r\n        return []\r\n    }\r\n}\r\n\r\nconst requestDepartmentCourses = async (openAlert) => {\r\n    try {\r\n        const departmentCourses = await axios.get('/hod/getDepartmentCourses');\r\n        return departmentCourses.data;\r\n    } catch (err) {\r\n        openAlert(err.response.data);\r\n        return []\r\n    }\r\n}\r\n\r\nconst getAllAcademicMembers = async (openAlert) => {\r\n    try {\r\n        const res = await axios.get('/hod/getAllAcademicMembers');\r\n        return res.data;\r\n    } catch (err) {\r\n        openAlert(err.response.data);\r\n        return []\r\n    }\r\n}\r\n\r\n\r\nconst getAcademicMembersTable = async (openAlert) => {\r\n    try {\r\n        const res = await axios.get('/hod/getAcademicMembersTable');\r\n        return res.data;\r\n    } catch (err) {\r\n        openAlert(err.response.data);\r\n        return []\r\n    }\r\n}\r\n\r\nconst requestStaffProfiles = async (filter = \"none\", obj = {}, openAlert) => {\r\n    try {\r\n        if (filter == \"none\") {\r\n            const res = await axios.get(\"/hod/viewDepartmentMembers\");\r\n            return res.data;\r\n        } else if (filter == \"course\") {\r\n            const res = await axios.get(\r\n                `/hod/viewDepartmentMembersByCourse/${obj.courseID}`\r\n            );\r\n            return res.data;\r\n        } else if (filter == \"staffMember\") {\r\n            const res = await axios.get(\"/hod/viewDepartmentMembers\");\r\n            const out = res.data.filter((mem) => {\r\n                return mem.ID.split(\"-\")[1] == obj.ID;\r\n            });\r\n            return out;\r\n        }\r\n\r\n    } catch (err) {\r\n        openAlert(err.response.data);\r\n        return []\r\n    }\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst requestAllRequests = async (openAlert) => {\r\n    try {\r\n        const res = await axios.get('/hod/viewAllRequests');\r\n        return res.data;\r\n    } catch (err) {\r\n        openAlert(err.response.data);\r\n        return []\r\n    }\r\n\r\n}\r\n\r\n\r\nconst requestAllDepartmentCourses = async (openAlert) => {\r\n    try {\r\n        console.log(\"begin in request all department courses\");\r\n        const res = await axios.get('/hod/viewCourseTeachingAssignmentsLocal');\r\n        console.log(\"end of  request all department courses\", res.data);\r\n        return res.data;\r\n\r\n    } catch (err) {\r\n        openAlert(err.response.data);\r\n        return []\r\n    }\r\n\r\n}\r\n\r\n\r\nconst requestMissingDays = async () => {\r\n    const res = await axios.get('/viewMissingDays');\r\n    const dates = res.data;\r\n    const mappedDates = [];\r\n    for (const date of dates) {\r\n        mappedDates.push({ date: (new Date(date)).toLocaleString() + \"\" })\r\n    }\r\n    console.log(mappedDates);\r\n    return mappedDates;\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    appBar: {\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n});\r\n\r\nclass HOD extends Component {\r\n    state = {\r\n        isLoggedIn: 0,\r\n        componentInMain: <div />,\r\n        staffProfiles: [],\r\n        hodProfile: {},\r\n        requests: [],\r\n        requestsFirstTime: true,\r\n        isAppBarShift: false,\r\n        showAlert: false,\r\n        alertMessage: \"\",\r\n        errorType: \"\",\r\n        backdropIsOpen: true,\r\n    }\r\n    openAlert = (message, type = \"error\") => {\r\n        console.log(\"here*********************\");\r\n        this.setState({ showAlert: true, alertMessage: message, errorType: type });\r\n    }\r\n\r\n    setBackdropIsOpen = (val) => {\r\n        this.setState({ backdropIsOpen: val })\r\n    }\r\n\r\n    uniqBy(a, key) {\r\n        var seen = {};\r\n        return a.filter(function (item) {\r\n            var k = key(item);\r\n            return seen.hasOwnProperty(k) ? false : (seen[k] = true);\r\n        })\r\n    }\r\n\r\n\r\n    updateRequestStaffProfile = async (filter = \"none\", obj = {}) => {\r\n\r\n        const profiles = await requestStaffProfiles(filter, obj, this.openAlert);\r\n        let uniqueProfiles = this.uniqBy(profiles, JSON.stringify)\r\n\r\n        await this.setState({ staffProfiles: uniqueProfiles });\r\n\r\n        return uniqueProfiles;\r\n    }\r\n\r\n    updateRequests = async (type = \"\", requestID = -1, newStatus = \"\") => {\r\n        this.setBackdropIsOpen(true);\r\n        console.log(\"2na hna\")\r\n        if (this.state.requestsFirstTime || requestID == -1) {\r\n            const requests = await requestAllRequests(this.openAlert);\r\n            this.setState({ requests: requests });\r\n\r\n            this.setState({ requestsFirstTime: false });\r\n            return requests;\r\n        } else {\r\n            const allRequests = this.state.requests;\r\n            if (\r\n                !allRequests.find((req) => {\r\n                    return req.type == type;\r\n                })\r\n            )\r\n                return [];\r\n            let typeRequests = allRequests.find((req) => {\r\n                return req.type == type;\r\n            }).requests;\r\n            for (const request of typeRequests) {\r\n                if (request.ID == requestID) {\r\n                    request.status = newStatus;\r\n                }\r\n            }\r\n            this.setState({ requests: allRequests });\r\n            return allRequests;\r\n        }\r\n    }\r\n\r\n    updateHODProfile = async () => {\r\n        this.setState({ hodProfile: await requestUserProfile(this.openAlert) });\r\n    }\r\n\r\n    setComponentInMain = async (event) => {\r\n        this.setState({ backdropIsOpen: true });\r\n\r\n        if (event == \"viewMissingDays\") {\r\n            await this.setState({\r\n                componentInMain: (\r\n                    <ViewMissingDaysForm\r\n                        missedDays={await requestMissingDays()}\r\n                        openAlert={this.openAlert}\r\n             \r\n                    />\r\n                )\r\n            })\r\n        }\r\n        else if (event == \"profile\") {\r\n            await this.setState({\r\n                componentInMain: <Profile\r\n                    profile={await requestUserProfile(this.openAlert)}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n        } else if (event == \"attendance\") {\r\n            await this.setState({\r\n                componentInMain: <Attendance\r\n                    attendanceRecords={await requestAttendanceRecods(this.openAlert)}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    openAlert={this.openAlert}\r\n             \r\n                />\r\n            });\r\n        }\r\n        else if (event == \"manageCourseInstructors\") {\r\n            console.log(\"I am in event course\")\r\n            await this.setState({\r\n                componentInMain: <ManageCourseInstructors\r\n                    courses={await requestDepartmentCourses(this.openAlert)}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    academicMembers={await getAllAcademicMembers(this.openAlert)}\r\n                    openAlert={this.openAlert}\r\n\r\n                    setBackdropIsOpen={this.setBackdropIsOpen}\r\n                />\r\n            });\r\n\r\n        }\r\n        else if (event == \"viewStaffProfiles\") {\r\n            console.log(\"I am in event profiles\")\r\n            await this.setState({\r\n                componentInMain: <ViewStaffProfiles\r\n                    allCourses={await requestDepartmentCourses(this.openAlert)}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    academicMembers={await getAcademicMembersTable(this.openAlert)}\r\n                    staffProfiles={this.state.staffProfiles}\r\n                    hodProfile={this.state.hodProfile}\r\n                    updateProfiles={this.updateRequestStaffProfile}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n        } else if (event == \"changeDayOffRequest\") {\r\n            console.log(this.state.requests);\r\n            await this.setState({\r\n                componentInMain: <ChangeDayOffRequest\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    updateRequests={this.updateRequests}\r\n                    requests={this.state.requests.find((req) => { return req.type == \"change day off requests\" }).requests}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n\r\n        } else if (event == \"annualLeaveRequest\") {\r\n            await this.setState({\r\n                componentInMain: <AnnualLeaveRequest\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    updateRequests={this.updateRequests}\r\n                    requests={this.state.requests.find((req) => { return req.type == \"annual leave requests\" }).requests}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n\r\n        } else if (event == \"accidentalLeaveRequest\") {\r\n            await this.setState({\r\n                componentInMain: <AccidentalLeaveRequest\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    updateRequests={this.updateRequests}\r\n                    requests={this.state.requests.find((req) => { return req.type == \"accidental leave requests\" }).requests}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n\r\n\r\n        } else if (event == \"sickLeaveRequest\") {\r\n            await this.setState({\r\n                componentInMain: <SickLeaveRequest\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    updateRequests={this.updateRequests}\r\n                    requests={this.state.requests.find((req) => { return req.type == \"sick leave requests\" }).requests}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n\r\n        } else if (event == \"maternityLeaveRequest\") {\r\n            await this.setState({\r\n                componentInMain: <MaternityLeaveRequest\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    updateRequests={this.updateRequests}\r\n                    requests={this.state.requests.find((req) => { return req.type == \"maternity leave requests\" }).requests}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n\r\n        } else if (event == \"compensationLeaveRequest\") {\r\n            await this.setState({\r\n                componentInMain: <CompensationLeaveRequest\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    updateRequests={this.updateRequests}\r\n                    requests={this.state.requests.find((req) => { return req.type == \"compensation leave requests\" }).requests}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n\r\n        } else if (event == \"departmentCourses\") {\r\n            await this.setState({\r\n                componentInMain: <DepartmentCourses\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    departmentCourses={await requestAllDepartmentCourses(this.openAlert)}\r\n                    allCourses={await requestDepartmentCourses(this.openAlert)}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"personalSchedule\") {\r\n            console.log(\"personalSchedule\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            console.log(requestsArr)\r\n            await this.setState({\r\n                componentInMain: <Schedule\r\n                    schedule={await requestSchedule()}\r\n                    replacementRequests={await getReplacementRequests()}\r\n                    sentReplacementRequests={requestsArr.requests[5]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    openAlert={this.openAlert}\r\n\r\n                    setBackdropIsOpen={this.setBackdropIsOpen}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"allCourseSchedule\") {\r\n            console.log(\"allCourseSchedule\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Course_Schedule\r\n                    departmentCourses={await viewAllCourseSchedules()}\r\n                    allCourses={await getAllCoursesInstructorsNames()}\r\n                    requests={requestsArr.requests[7]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_changeDayOffRequest\") {\r\n            console.log(\"ac_changeDayOffRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Change_Day_Off_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[2]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_annualLeaveRequest\") {\r\n            console.log(\"ac_annualLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            console.log(requestsArr);\r\n            await this.setState({\r\n                componentInMain: <Annual_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[1]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_accidentalLeaveRequest\") {\r\n            console.log(\"ac_accidentalLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            console.log(requestsArr);\r\n            await this.setState({\r\n                componentInMain: <Accidental_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[0]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_maternityLeaveRequest\") {\r\n            console.log(\"ac_maternityLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Maternity_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[4]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_sickLeaveRequest\") {\r\n            console.log(\"ac_sickLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Sick_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[6]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_compensationLeaveRequest\") {\r\n            console.log(\"ac_compensationLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Compensation_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[3]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    missingDays={await getAllMissingDays()}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        this.setState({ backdropIsOpen: false });\r\n    }\r\n    handleAppBarShift = (event) => {\r\n        this.setState({ isAppBarShift: event });\r\n        console.log(this.state.isAppBarShift);\r\n    };\r\n\r\n    async componentDidMount() {\r\n        this.setState({ backdropIsOpen: true });\r\n        if (!localStorage.getItem(\"auth-token\")) {\r\n            this.setState({ isLoggedIn: 1 });\r\n            return;\r\n        }\r\n        try {\r\n            setAuthToken(localStorage.getItem(\"auth-token\"));\r\n            await axios.get(\"/authStaffMember\");\r\n            await axios.get(\"/authHOD\");\r\n            this.setState({ isLoggedIn: 2 });\r\n        } catch (err) {\r\n            this.setState({ isLoggedIn: 1 });\r\n        }\r\n\r\n        await this.updateRequestStaffProfile();\r\n        await this.updateHODProfile();\r\n        this.setState({ backdropIsOpen: false })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        if (this.state.isLoggedIn === 0)\r\n            return <div />;\r\n        if (this.state.isLoggedIn === 1) {\r\n            return <Redirect to='/' />;\r\n        }\r\n        return (\r\n            <div >\r\n                <Navigation_Bar fromParent={this.setComponentInMain}\r\n                    updateRequestStaffProfile={this.updateRequestStaffProfile}\r\n                    updateRequests={this.updateRequests}\r\n                    requestAllDepartmentCourses={requestAllDepartmentCourses}\r\n                    handleAppBarShift={this.handleAppBarShift}\r\n                    openAlert={this.openAlert}\r\n                />\r\n\r\n                <Container maxWidth=\"lg\" style={{ marginTop: \"100px\" }} className={clsx({\r\n                    [classes.appBarShift]: this.state.isAppBarShift,\r\n                })}>\r\n                    {this.state.componentInMain}\r\n                </Container>\r\n                <AlertMessage open={this.state.showAlert} type={this.state.errorType} onClose={() => { this.setState({ showAlert: false }) }}\r\n                    msg={this.state.alertMessage}\r\n                />\r\n                <Backdrop className={classes.backdrop} open={this.state.backdropIsOpen}\r\n                    style={{ zIndex: 600000000 }}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(HOD);\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\ci.js",["541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570"],"import { Container } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport axios from \"axios\";\r\nimport clsx from 'clsx';\r\nimport { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport setAuthToken from \"../../../actions/setAuthToken\";\r\nimport Attendance from '../../Attendance';\r\nimport Navigation_Bar from '../../Navigation_Bar.js';\r\nimport Profile from '../../Profile';\r\nimport ViewMissingDaysForm from '../../ViewMissingDaysForm.js';\r\nimport Accidental_Leave_Request from \"../ac/Academic_Requests/Accidental_Leave/Accidental_Leave_List\";\r\nimport Annual_Leave_Request from \"../ac/Academic_Requests/Annual_Leave/Annual_Leave_List\";\r\nimport Change_Day_Off_Request from \"../ac/Academic_Requests/Change_Day_Off/Change_Day_Off_List\";\r\nimport Compensation_Leave_Request from \"../ac/Academic_Requests/Compensation_Leave/Compensation_Leave_List\";\r\nimport Maternity_Leave_Request from \"../ac/Academic_Requests/Maternity_leave/Maternity_Leave_List\";\r\nimport Sick_Leave_Request from \"../ac/Academic_Requests/Sick_Leave/Sick_Leave_List\";\r\nimport {\r\n    getAllCoursesInstructorsNames,\r\n    getAllMissingDays, getAllSentRequests,\r\n    getReplacementRequests, requestSchedule,\r\n    viewAllCourseSchedules\r\n} from '../ac/ac_helper.js';\r\nimport Course_Schedule from \"../ac/All_Course_Schedule/Course_Schedule\";\r\nimport Schedule from '../ac/Schedule_Handler/Schedule';\r\nimport CICourses from './CICourses';\r\nimport ViewStaffProfiles from './CIViewStaffProfiles.js';\r\nimport ManageCourseStaff from './manageCourseStaff.js';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AlertMessage from '../../Alert_Message.js';\r\n\r\n\r\nconst requestMissingDays = async () => {\r\n    const res = await axios.get('/viewMissingDays');\r\n    const dates = res.data;\r\n    const mappedDates = [];\r\n    for (const date of dates) {\r\n        mappedDates.push({ date: (new Date(date)).toLocaleString() + \"\" })\r\n    }\r\n    console.log(mappedDates);\r\n    return mappedDates;\r\n}\r\n\r\nconst requestUserProfile = async (openAlert) => {\r\n    try {\r\n        console.log(\"start CI request user profile\")\r\n        const userProfile = await axios.get('/viewProfile');\r\n        console.log(\"end CI request user profile\")\r\n        return userProfile.data;\r\n    } catch (err) {\r\n        openAlert(err.response.data);\r\n        return {};\r\n    }\r\n}\r\n\r\nconst requestDepartmentCourses = async (openAlert) => {\r\n    try {\r\n        console.log(\"start CI request department courses\")\r\n\r\n        const departmentCourses = await axios.get('/ci/getDepartmentCourses');\r\n        console.log(\"end CI request department courses\")\r\n\r\n        return departmentCourses.data;\r\n    }\r\n    catch (err) {\r\n        openAlert(err.response.data);\r\n        return [];\r\n    }\r\n}\r\nconst requestAttendanceRecods = async (openAlert) => {\r\n    try {\r\n        console.log(\"start CI request attendance records\")\r\n\r\n        const attendanceRecords = await axios.get('/viewAttendance');\r\n        console.log(\"end CI request attendance records\")\r\n\r\n        return attendanceRecords.data;\r\n    } catch (err) {\r\n        openAlert(err.response.data);\r\n\r\n    }\r\n}\r\n\r\nconst requestAllInstructorCourses = async (openAlert) => {\r\n\r\n    console.log(\"begin in request all instructor courses\");\r\n    try {\r\n        const res = await axios.get('/ci/viewSlotAssignmentLocal');\r\n\r\n        console.log(\"end of  request all instructor courses\", res.data);\r\n        return res.data;\r\n    } catch (err) {\r\n        openAlert(err.response.data);\r\n        return undefined;\r\n    }\r\n}\r\n\r\nconst requestInstructorCourses = async (openAlert) => {\r\n\r\n    console.log(\"begin in request instructor  courses\");\r\n    try {\r\n        const departmentCourses = await axios.get('/ci/requestInstructorCoursesLocal');\r\n\r\n        console.log(\"end in request instructor  courses\");\r\n\r\n        return departmentCourses.data;\r\n    }\r\n    catch (err) {\r\n        openAlert(err.response.data);\r\n        return [];\r\n    }\r\n}\r\n\r\n\r\n\r\nconst requestStaffProfiles = async (filter = \"none\", obj = {}, openAlert) => {\r\n    try {\r\n        console.log(\"start CI request staff profiles\")\r\n\r\n        if (filter == \"none\") {\r\n            const res = await axios.get('/ci/viewDepartmentMembers');\r\n            return res.data;\r\n\r\n        } else if (filter == \"course\") {\r\n            const res = await axios.get(`/ci/viewDepartmentMembersByCourse/${obj.courseID}`);\r\n            return res.data;\r\n\r\n        } else if (filter == \"staffMember\") {\r\n            const res = await axios.get('/ci/viewDepartmentMembers');\r\n            const out = res.data.filter((mem) => { return mem.ID.split(\"-\")[1] == obj.ID });\r\n            return out;\r\n\r\n        }\r\n        console.log(\"end CI request staff profiles\")\r\n\r\n    } catch (err) {\r\n        openAlert(err.response.data);\r\n    }\r\n\r\n}\r\n\r\nconst requestCourseStaffProfiles = async (obj, openAlert) => {\r\n    if (obj.courseID == -1) {\r\n        console.log(\"obj ID is -1\")\r\n        return [];\r\n    }\r\n    try {\r\n        console.log(\"start CI request course staff profiles\")\r\n\r\n        const res = await axios.get(`/ci/viewMembersByCourse/${obj.courseID}`);\r\n        console.log(\"end CI request course staff profiles\")\r\n\r\n        return res.data;\r\n    } catch (err) {\r\n        openAlert(err.response.data);\r\n\r\n    }\r\n}\r\n\r\nconst getAcademicMembersTable = async (openAlert) => {\r\n    try {\r\n        console.log(\"start CI get academic members table\")\r\n\r\n        const res = await axios.get('/ci/getAcademicMembersTable');\r\n        console.log(\"end CI get academic members table\")\r\n\r\n        return res.data;\r\n    } catch (err) {\r\n        openAlert(err.response.data);\r\n        return []\r\n    }\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme) => ({\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n});\r\n\r\nclass CI extends Component {\r\n    state = {\r\n        isLoggedIn: 0,\r\n        componentInMain: <div />,\r\n        isAppBarShift: false,\r\n        ciProfile: {},\r\n        staffProfiles: [],\r\n        departmentCourses: undefined,\r\n        manageCourseStaff: [],\r\n        showAlert: false,\r\n        alertMessage: \"\",\r\n        errorType: \"\",\r\n\r\n        isHOD: false,\r\n        // ******** Backdrop states\r\n        backdropIsOpen: true,\r\n    }\r\n    setBackdropIsOpen = (val) => {\r\n        this.setState({ backdropIsOpen: val })\r\n    }\r\n    openAlert = (message, type = \"error\") => {\r\n        console.log(\"here*********************\");\r\n        this.setState({ showAlert: true, alertMessage: message, errorType: type });\r\n    }\r\n\r\n    uniqBy(a, key) {\r\n        var seen = {};\r\n        return a.filter(function (item) {\r\n            var k = key(item);\r\n            return seen.hasOwnProperty(k) ? false : (seen[k] = true);\r\n        })\r\n    }\r\n\r\n    updateRequestStaffProfile = async (filter = \"none\", obj = {}) => {\r\n        const profiles = await requestStaffProfiles(filter, obj, this.openAlert);\r\n        //let uniqueProfiles = [];\r\n        let uniqueProfiles = this.uniqBy(profiles, JSON.stringify)\r\n        // uniqueProfiles = profiles.filter(function(item, pos) {\r\n        //     return profiles.indexOf(item,(i)=>{return i.ID==item.ID}) == pos;\r\n        // })\r\n        console.log(\"before unique\", profiles)\r\n\r\n        console.log(\"after unique\", uniqueProfiles)\r\n        this.setState({ staffProfiles: uniqueProfiles });\r\n        return uniqueProfiles;\r\n\r\n    }\r\n    updateRequestCourseStaff = async (obj = { courseID: -1 }) => {\r\n\r\n        if (obj.courseID == -1) {\r\n            this.setState({ manageCourseStaff: [] });\r\n\r\n            return [];\r\n        }\r\n        const manageCourseStaff = await requestCourseStaffProfiles(obj, this.openAlert);\r\n        this.setState({ manageCourseStaff: manageCourseStaff });\r\n        return manageCourseStaff;\r\n    }\r\n    updateDepartmentCourses = async () => {\r\n        console.log(\"begin in update department course\");\r\n        const departmentCourses = await requestAllInstructorCourses(this.openAlert);\r\n        this.setState({ departmentCourses: departmentCourses });\r\n        console.log(\"end update department courses\")\r\n        return departmentCourses;\r\n    }\r\n\r\n    updateCIProfile = async () => {\r\n        this.setState({ ciProfile: await requestUserProfile(this.openAlert) });\r\n\r\n    }\r\n    setComponentInMain = async (event) => {\r\n        this.setState({ backdropIsOpen: true });\r\n\r\n        if (event == \"profile\") {\r\n            await this.setState({\r\n                componentInMain: <Profile\r\n                    profile={await requestUserProfile(this.openAlert)}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n        } else if (event == \"attendance\") {\r\n            await this.setState({\r\n                componentInMain: <Attendance\r\n                    attendanceRecords={await requestAttendanceRecods(this.openAlert)}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n\r\n        } else if (event == \"viewMissingDays\") {\r\n            await this.setState({\r\n                componentInMain: (\r\n                    <ViewMissingDaysForm\r\n                        missedDays={await requestMissingDays()}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        else if (event == \"instructorCourses\") {\r\n            console.log(\"instructorCourses\")\r\n            await this.setState({\r\n                componentInMain: <CICourses\r\n                    departmentCourses={await requestAllInstructorCourses(this.openAlert)}\r\n                    allCourses={await requestInstructorCourses(this.openAlert)}\r\n                    academicMembers={await getAcademicMembersTable(this.openAlert)}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    updateDepartmentCourses={this.updateDepartmentCourses}\r\n                    openAlert={this.openAlert}\r\n                    setBackdropIsOpen={this.setBackdropIsOpen}\r\n\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"viewStaffProfiles\") {\r\n            console.log(\"I am in event profiles\")\r\n            await this.setState({\r\n                componentInMain: <ViewStaffProfiles\r\n                    allCourses={await requestDepartmentCourses(this.openAlert)}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    academicMembers={await getAcademicMembersTable(this.openAlert)}\r\n                    staffProfiles={this.state.staffProfiles}\r\n                    hodProfile={this.state.ciProfile}\r\n                    updateProfiles={this.updateRequestStaffProfile}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"manageCourseStaff\") {\r\n            console.log(\"I am in event of manage course staff\")\r\n            await this.setState({\r\n                componentInMain: <ManageCourseStaff\r\n                    allCourses={await requestInstructorCourses(this.openAlert)}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    academicMembers={await getAcademicMembersTable(this.openAlert)}\r\n                    staffProfiles={this.state.manageCourseStaff}\r\n                    hodProfile={this.state.ciProfile}\r\n                    updateProfiles={this.updateRequestCourseStaff}\r\n                    openAlert={this.openAlert}\r\n                    setBackdropIsOpen={this.setBackdropIsOpen}\r\n\r\n                />\r\n            });\r\n        } else if (event == \"personalSchedule\") {\r\n            console.log(\"personalSchedule\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            console.log(requestsArr)\r\n            await this.setState({\r\n                componentInMain: <Schedule\r\n                    schedule={await requestSchedule()}\r\n                    replacementRequests={await getReplacementRequests()}\r\n                    sentReplacementRequests={requestsArr.requests[5]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"allCourseSchedule\") {\r\n            console.log(\"allCourseSchedule\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Course_Schedule\r\n                    departmentCourses={await viewAllCourseSchedules()}\r\n                    allCourses={await getAllCoursesInstructorsNames()}\r\n                    requests={requestsArr.requests[7]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert={this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_changeDayOffRequest\") {\r\n            console.log(\"ac_changeDayOffRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Change_Day_Off_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[2]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert={this.openAlert}\r\n\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_annualLeaveRequest\") {\r\n            console.log(\"ac_annualLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            console.log(requestsArr);\r\n            await this.setState({\r\n                componentInMain: <Annual_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[1]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert={this.openAlert}\r\n\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_accidentalLeaveRequest\") {\r\n            console.log(\"ac_accidentalLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            console.log(requestsArr);\r\n            await this.setState({\r\n                componentInMain: <Accidental_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[0]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert={this.openAlert}\r\n\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_maternityLeaveRequest\") {\r\n            console.log(\"ac_maternityLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Maternity_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[4]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert={this.openAlert}\r\n\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_sickLeaveRequest\") {\r\n            console.log(\"ac_sickLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Sick_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[6]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert={this.openAlert}\r\n\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_compensationLeaveRequest\") {\r\n            console.log(\"ac_compensationLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Compensation_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[3]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    missingDays={await getAllMissingDays()}\r\n                    openAlert={this.openAlert}\r\n\r\n                />\r\n            });\r\n        }\r\n\r\n        this.setState({ backdropIsOpen: false });\r\n    }\r\n\r\n    handleAppBarShift = (event) => {\r\n        this.setState({ isAppBarShift: event });\r\n        console.log(this.state.isAppBarShift)\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ backdropIsOpen: true });\r\n\r\n        if (!localStorage.getItem('auth-token')) {\r\n            this.setState({ isLoggedIn: 1 });\r\n            return;\r\n        }\r\n        try {\r\n            setAuthToken(localStorage.getItem('auth-token'));\r\n            await axios.get('/authStaffMember');\r\n            await axios.get('/authCourseInstructor');\r\n            this.setState({ isLoggedIn: 2 });\r\n            try {\r\n                await axios.get(\"/authHOD\");\r\n                this.setState({ isHOD: true });\r\n            } catch (err) {\r\n                this.setState({ isHOD: false });\r\n\r\n            }\r\n\r\n        }\r\n        catch (err) {\r\n            this.setState({ isLoggedIn: 1 });\r\n        }\r\n\r\n        await this.updateCIProfile();\r\n        this.setState({ backdropIsOpen: false });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        if (this.state.isLoggedIn === 0)\r\n            return <div />;\r\n        if (this.state.isLoggedIn === 1) {\r\n            return <Redirect to='/' />;\r\n        }\r\n        return (\r\n            <div >\r\n\r\n                <Navigation_Bar fromParent={this.setComponentInMain}\r\n                    requestAllDepartmentCourses={requestInstructorCourses}\r\n\r\n                    updateRequestStaffProfile={this.updateRequestStaffProfile}\r\n                    updateRequestCourseStaff={this.updateRequestCourseStaff}\r\n                    handleAppBarShift={this.handleAppBarShift}\r\n                />\r\n\r\n\r\n                <Container maxWidth=\"lg\" style={{ marginTop: \"100px\" }} className={clsx({\r\n                    [classes.appBarShift]: this.state.isAppBarShift,\r\n                })}>\r\n\r\n                    {this.state.componentInMain}\r\n                </Container>\r\n                <AlertMessage open={this.state.showAlert} type={this.state.errorType} onClose={() => { this.setState({ showAlert: false }) }}\r\n                    msg={this.state.alertMessage}\r\n                />\r\n\r\n                <Backdrop className={classes.backdrop} open={this.state.backdropIsOpen}\r\n                    style={{ zIndex: 600000000 }}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CI);","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\cc\\cc.js",["571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607"],"import { Container } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport setAuthToken from \"../../../actions/setAuthToken\";\r\nimport Attendance from '../../Attendance';\r\nimport Navigation_Bar from '../../Navigation_Bar.js';\r\nimport Profile from '../../Profile';\r\nimport Accidental_Leave_Request from \"../ac/Academic_Requests/Accidental_Leave/Accidental_Leave_List\";\r\nimport Annual_Leave_Request from \"../ac/Academic_Requests/Annual_Leave/Annual_Leave_List\";\r\nimport Change_Day_Off_Request from \"../ac/Academic_Requests/Change_Day_Off/Change_Day_Off_List\";\r\nimport Compensation_Leave_Request from \"../ac/Academic_Requests/Compensation_Leave/Compensation_Leave_List\";\r\nimport Maternity_Leave_Request from \"../ac/Academic_Requests/Maternity_leave/Maternity_Leave_List\";\r\nimport Sick_Leave_Request from \"../ac/Academic_Requests/Sick_Leave/Sick_Leave_List\";\r\nimport {\r\n    getAllCoursesInstructorsNames,\r\n    getAllMissingDays, getAllSentRequests,\r\n    getReplacementRequests, requestSchedule,\r\n    viewAllCourseSchedules\r\n} from '../ac/ac_helper.js';\r\nimport Course_Schedule from \"../ac/All_Course_Schedule/Course_Schedule\";\r\nimport Schedule from '../ac/Schedule_Handler/Schedule';\r\nimport Slot_Card from './Slot_Handler/Slot_Card.js';\r\nimport Schedule_Requests_Card from './Slot_Linking_Request/Schedule_Requests_Card.js';\r\nimport ViewMissingDaysForm from '../../ViewMissingDaysForm.js';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AlertMessage from '../../Alert_Message.js';\r\n\r\nconst requestUserProfile = async () => {\r\n    const userProfile = await axios.get(\"/viewProfile\");\r\n    return userProfile.data;\r\n};\r\n\r\nconst requestAttendanceRecods = async () => {\r\n    const attendanceRecords = await axios.get(\"/viewAttendance\");\r\n    return attendanceRecords.data;\r\n};\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst requestAllSlots = async () =>{\r\n    return (await axios.get(\"cc/viewAllSlots\")).data;\r\n}\r\n\r\nconst requestAllLocations = async () =>{\r\n    return (await axios.get('cc//viewAllLocations')).data;\r\n}\r\n\r\nconst requestAllAcademicMembers = async () =>{\r\n    return (await axios.get('cc/viewAllMembersProfiles')).data;\r\n}\r\n\r\nconst requestAllSlotLinkingRequests = async () => {\r\n    return (await axios.get('/cc/viewSlotLinkingRequests')).data;\r\n}\r\n\r\nconst requestMissingDays = async () => {\r\n    const res = await axios.get('/viewMissingDays');\r\n    const dates = res.data;\r\n    const mappedDates = [];\r\n    for (const date of dates) {\r\n        mappedDates.push({ date: (new Date(date)).toLocaleString() + \"\" })\r\n    }\r\n    console.log(mappedDates);\r\n    return mappedDates;\r\n}\r\n\r\n\r\nconst styles = (theme) => ({\r\n    appBar: {\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n});\r\n\r\nclass CC extends Component {\r\n    state = {\r\n        isLoggedIn: 0,\r\n        componentInMain: <div />,\r\n        firstTime : true,\r\n        firstTimeRequests : true,\r\n        locations : [],\r\n        academicMembers : [],\r\n        slots : [],\r\n        slotLinkingRequests : [],\r\n        isAppBarShift: false,\r\n        showAlert: false,\r\n        alertMessage: \"\",\r\n        errorType : \"\",\r\n        backdropIsOpen: true,\r\n    };\r\n\r\n    // decision 0 for rejected, 1 for accepted\r\n    handleSlotLinkingRequest = async (requestID,decision) => {\r\n        if(this.state.firstTimeRequests){\r\n            const requests = await requestAllSlotLinkingRequests();\r\n            this.setState({\r\n                firstTimeRequests : false,\r\n                slotLinkingRequests : requests\r\n            })\r\n        }\r\n        else if(decision == 0){\r\n            const requests = this.state.slotLinkingRequests.filter(elm => elm.ID != requestID);\r\n            const request = (this.state.slotLinkingRequests.filter(elm => elm.ID == requestID))[0];\r\n            request.status = \"rejected\";\r\n            console.log(request);\r\n            requests.push(request);\r\n            this.setState({slotLinkingRequests : requests});\r\n        }\r\n        else if(decision == 1){\r\n            const requests = this.state.slotLinkingRequests.filter(elm => elm.ID != requestID);\r\n            const request = (this.state.slotLinkingRequests.filter(elm => elm.ID == requestID))[0];\r\n            request.status = \"accepted\";\r\n            requests.push(request);\r\n            const slots = this.state.slots.filter(elm => elm.ID != request.slotID);\r\n            const updatedSlot = (this.state.slots.filter(elm => elm.ID == request.slotID))[0];\r\n            updatedSlot.instructor = request.senderID;\r\n            slots.push(updatedSlot);\r\n            console.log(updatedSlot);\r\n            console.log(request);\r\n            this.setState({\r\n                slots : slots,\r\n                slotLinkingRequests : requests\r\n            });\r\n        }\r\n    }\r\n\r\n    // decision 0 for add , 1 for update, 2 for delete\r\n    handleSlots = async (obj , decision) =>{\r\n        if(this.state.firstTime){\r\n            let locations = await requestAllLocations();\r\n            locations = locations.filter(elm => elm.type != 2);\r\n            console.log(\"first time slots\");\r\n            const academicMembers = await requestAllAcademicMembers();\r\n            const res = await requestAllSlots();\r\n            console.log(res);\r\n            this.setState({\r\n                firstTime : false,\r\n                courseID : res.ID,\r\n                slots : res.slots,\r\n                locations : locations,\r\n                academicMembers : academicMembers\r\n            });\r\n        }\r\n        else if (decision == 0){\r\n            const slots = this.state.slots;\r\n            slots.push(obj);\r\n            this.setState({slots : slots});\r\n        }\r\n        else if (decision == 1){\r\n            console.log(\"update\");\r\n            const slots = this.state.slots.filter(elm => elm.ID != obj.ID);\r\n            slots.push(obj);\r\n            this.setState({slots : slots});\r\n        }\r\n        else if( decision == 2){\r\n            const slots = this.state.slots.filter(elm => elm.ID != obj.slotID);\r\n            this.setState({slots : slots});\r\n        }\r\n    }\r\n\r\n    openAlert = (message , type = \"error\") => {\r\n        console.log(\"here*********************\");\r\n        this.setState({ showAlert: true, alertMessage: message, errorType : type });\r\n    }\r\n  \r\n\r\n    setComponentInMain = async (event) => {\r\n        this.setState({ backdropIsOpen: true });\r\n\r\n        console.log(\"Triggered\");\r\n        console.log(event);\r\n        await this.handleSlots();\r\n        await this.handleSlotLinkingRequest();\r\n\r\n        if (event == \"profile\") {\r\n            console.log(\"profile\")\r\n            await this.setState({\r\n                componentInMain: <Profile\r\n                    profile={await requestUserProfile()}\r\n                    openAlert = {this.openAlert}\r\n                    setComponentInMain={this.setComponentInMain} />\r\n            });\r\n        } else if (event == \"attendance\") {\r\n            console.log(\"attendance\")\r\n            await this.setState({\r\n                componentInMain: <Attendance\r\n                    attendanceRecords={await requestAttendanceRecods()}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                />\r\n            });\r\n         } \r\n         else if (event == \"viewMissingDays\") {\r\n            await this.setState({\r\n                componentInMain: (\r\n                    <ViewMissingDaysForm\r\n                        missedDays={await requestMissingDays()}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        else if(event == \"slot\"){\r\n            console.log(\"slot\")\r\n            await this.setState({\r\n                componentInMain: <Slot_Card\r\n                    schedule={this.state.slots}\r\n                    courseID = {this.state.courseID}\r\n                    locations = {this.state.locations}\r\n                    academicMembers = {this.state.academicMembers}\r\n                    handleSlots = {this.handleSlots}\r\n                    openAlert = {this.openAlert}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                />\r\n            });\r\n        }\r\n        else if(event == \"slotLinkingRequest\"){\r\n            console.log(\"slotLinkingRequests\");\r\n            console.log(this.state.slots);\r\n            await this.setState({\r\n                componentInMain: <Schedule_Requests_Card\r\n                    requests = {this.state.slotLinkingRequests}\r\n                    slots = {this.state.slots}\r\n                    courseID = {this.state.courseID}\r\n                    locations = {this.state.locations}\r\n                    academicMembers = {this.state.academicMembers}\r\n                    handleSlotLinkingRequest = {this.handleSlotLinkingRequest}\r\n                    handleSlots = {this.handleSlots}\r\n                    openAlert = {this.openAlert}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"personalSchedule\") {\r\n            console.log(\"personalSchedule\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            console.log(requestsArr)\r\n            await this.setState({\r\n                componentInMain: <Schedule\r\n                    schedule={await requestSchedule()}\r\n                    replacementRequests={await getReplacementRequests()}\r\n                    sentReplacementRequests={requestsArr.requests[5]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert = {this.openAlert}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"allCourseSchedule\") {\r\n            console.log(\"allCourseSchedule\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Course_Schedule\r\n                    departmentCourses={await viewAllCourseSchedules()}\r\n                    allCourses={await getAllCoursesInstructorsNames()}\r\n                    requests={requestsArr.requests[7]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert = {this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_changeDayOffRequest\") {\r\n            console.log(\"ac_changeDayOffRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Change_Day_Off_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[2]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert = {this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_annualLeaveRequest\") {\r\n            console.log(\"ac_annualLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            console.log(requestsArr);\r\n            await this.setState({\r\n                componentInMain: <Annual_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[1]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert = {this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_accidentalLeaveRequest\") {\r\n            console.log(\"ac_accidentalLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            console.log(requestsArr);\r\n            await this.setState({\r\n                componentInMain: <Accidental_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[0]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert = {this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_maternityLeaveRequest\") {\r\n            console.log(\"ac_maternityLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Maternity_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[4]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert = {this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_sickLeaveRequest\") {\r\n            console.log(\"ac_sickLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Sick_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[6]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert = {this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_compensationLeaveRequest\") {\r\n            console.log(\"ac_compensationLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            await this.setState({\r\n                componentInMain: <Compensation_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[3]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    missingDays={await getAllMissingDays()}\r\n                    openAlert = {this.openAlert}\r\n                />\r\n            });\r\n        }\r\n\r\n        this.setState({ backdropIsOpen: false });\r\n    }\r\n\r\n    handleAppBarShift = (event) => {\r\n        this.setState({ isAppBarShift: event });\r\n    };\r\n\r\n    async componentDidMount() {\r\n        if (!localStorage.getItem(\"auth-token\")) {\r\n            this.setState({ isLoggedIn: 1 });\r\n            return;\r\n        }\r\n        try {\r\n            setAuthToken(localStorage.getItem(\"auth-token\"));\r\n            await axios.get(\"/authStaffMember\");\r\n            await axios.get('/authCourseCoordinator');\r\n            console.log(\"here\");\r\n            this.setState({ isLoggedIn: 2 });\r\n        } catch (err) {\r\n            this.setState({ isLoggedIn: 1 });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        if (this.state.isLoggedIn === 0)\r\n            return <div />;\r\n        if (this.state.isLoggedIn === 1) {\r\n            return <Redirect to='/' />;\r\n        }\r\n        return (\r\n            <div >\r\n\r\n                <Navigation_Bar fromParent={this.setComponentInMain}\r\n                    handleAppBarShift={this.handleAppBarShift}\r\n                />\r\n                <Container maxWidth=\"lg\" style={{ marginTop: \"100px\" }} className={clsx({\r\n                    [classes.appBarShift]: this.state.isAppBarShift,\r\n                })}>\r\n                    {this.state.componentInMain}\r\n                </Container>\r\n                <AlertMessage open={this.state.showAlert} type={this.state.errorType} onClose={() => { this.setState({ showAlert: false }) }}\r\n                    msg={this.state.alertMessage} />\r\n                <Backdrop className={classes.backdrop} open={this.state.backdropIsOpen}\r\n                    style={{ zIndex: 600000000 }}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n  \r\nexport default withStyles(styles)(CC);\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\ac.js",["608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626"],"import { Container } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport setAuthToken from \"../../../actions/setAuthToken\";\r\nimport Attendance from '../../Attendance';\r\nimport Navigation_Bar from '../../Navigation_Bar.js';\r\nimport Profile from '../../Profile';\r\nimport ViewMissingDaysForm from '../../ViewMissingDaysForm.js';\r\nimport Accidental_Leave_Request from \"./Academic_Requests/Accidental_Leave/Accidental_Leave_List\";\r\nimport Annual_Leave_Request from \"./Academic_Requests/Annual_Leave/Annual_Leave_List\";\r\nimport Change_Day_Off_Request from \"./Academic_Requests/Change_Day_Off/Change_Day_Off_List\";\r\nimport Compensation_Leave_Request from \"./Academic_Requests/Compensation_Leave/Compensation_Leave_List\";\r\nimport Maternity_Leave_Request from \"./Academic_Requests/Maternity_leave/Maternity_Leave_List\";\r\nimport Sick_Leave_Request from \"./Academic_Requests/Sick_Leave/Sick_Leave_List\";\r\nimport {\r\n    getAllCoursesInstructorsNames,\r\n    getAllMissingDays, getAllSentRequests,\r\n    getReplacementRequests, requestSchedule,\r\n    viewAllCourseSchedules\r\n} from '../ac/ac_helper.js';\r\nimport Course_Schedule from \"./All_Course_Schedule/Course_Schedule\";\r\nimport Schedule from './Schedule_Handler/Schedule';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AlertMessage from '../../Alert_Message.js';\r\n\r\nconst requestUserProfile = async () => {\r\n    const userProfile = await axios.get(\"/viewProfile\");\r\n    return userProfile.data;\r\n};\r\n\r\nconst requestAttendanceRecods = async () => {\r\n    const attendanceRecords = await axios.get(\"/viewAttendance\");\r\n    return attendanceRecords.data;\r\n};\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst requestMissingDays = async () => {\r\n    const res = await axios.get('/viewMissingDays');\r\n    const dates = res.data;\r\n    const mappedDates = [];\r\n    for (const date of dates) {\r\n        mappedDates.push({ date: (new Date(date)).toLocaleString() + \"\" })\r\n    }\r\n    console.log(mappedDates);\r\n    return mappedDates;\r\n}\r\n\r\n\r\nconst styles = (theme) => ({\r\n    appBar: {\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n});\r\n\r\nclass AC extends Component {\r\n    state = {\r\n        isLoggedIn: 0,\r\n        componentInMain: <div />,\r\n        isAppBarShift: false,\r\n        showAlert: false,\r\n        alertMessage: \"\",\r\n        errorType : \"\",\r\n        backdropIsOpen: true,\r\n    };\r\n\r\n    openAlert = (message , type = \"error\") => {\r\n        console.log(\"here*********************\");\r\n        this.setState({ showAlert: true, alertMessage: message, errorType : type });\r\n    }\r\n\r\n    setBackdropIsOpen = (val) => {\r\n        this.setState({ backdropIsOpen: val })\r\n    }\r\n    \r\n    setComponentInMain = async (event) => {\r\n        console.log(\"Triggered\");\r\n        console.log(event);\r\n        this.setState({ backdropIsOpen: true });\r\n\r\n        if (event == \"profile\") {\r\n            console.log(\"profile\")\r\n            this.setState({\r\n                componentInMain: <Profile\r\n                    profile={await requestUserProfile()}\r\n                    openAlert = {this.openAlert}\r\n                    setComponentInMain={this.setComponentInMain} />\r\n            });\r\n        } else if (event == \"attendance\") {\r\n            console.log(\"attendance\")\r\n            this.setState({\r\n                componentInMain: <Attendance\r\n                    attendanceRecords={await requestAttendanceRecods()}\r\n                    openAlert = {this.openAlert}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"viewMissingDays\") {\r\n            this.setState({\r\n                componentInMain: (\r\n                    <ViewMissingDaysForm\r\n                        missedDays={await requestMissingDays()}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        else if (event == \"personalSchedule\") {\r\n            console.log(\"personalSchedule\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            console.log(requestsArr)\r\n            this.setState({\r\n                componentInMain: <Schedule\r\n                    schedule={await requestSchedule()}\r\n                    replacementRequests={await getReplacementRequests()}\r\n                    sentReplacementRequests={requestsArr.requests[5]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert = {this.openAlert}\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    setBackdropIsOpen = {this.setBackdropIsOpen}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"allCourseSchedule\") {\r\n            console.log(\"allCourseSchedule\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            this.setState({\r\n                componentInMain: <Course_Schedule\r\n                    departmentCourses={await viewAllCourseSchedules()}\r\n                    allCourses={await getAllCoursesInstructorsNames()}\r\n                    requests={requestsArr.requests[7]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert = {this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_changeDayOffRequest\") {\r\n            console.log(\"ac_changeDayOffRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            this.setState({\r\n                componentInMain: <Change_Day_Off_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[2]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert = {this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_annualLeaveRequest\") {\r\n            console.log(\"ac_annualLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            console.log(this.openAlert,\" openAlert\");\r\n            this.setState({\r\n                componentInMain: <Annual_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[1]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert = {this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_accidentalLeaveRequest\") {\r\n            console.log(\"ac_accidentalLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            console.log(requestsArr);\r\n            this.setState({\r\n                componentInMain: <Accidental_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[0]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert = {this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_maternityLeaveRequest\") {\r\n            console.log(\"ac_maternityLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            this.setState({\r\n                componentInMain: <Maternity_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[4]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert = {this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_sickLeaveRequest\") {\r\n            console.log(\"ac_sickLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            this.setState({\r\n                componentInMain: <Sick_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[6]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    openAlert = {this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        else if (event == \"ac_compensationLeaveRequest\") {\r\n            console.log(\"ac_compensationLeaveRequest\")\r\n            const requestsArr = (await getAllSentRequests());\r\n            this.setState({\r\n                componentInMain: <Compensation_Leave_Request\r\n                    setComponentInMain={this.setComponentInMain}\r\n                    requests={requestsArr.requests[3]}\r\n                    senderObj={requestsArr.senderObj}\r\n                    missingDays={await getAllMissingDays()}\r\n                    openAlert = {this.openAlert}\r\n                />\r\n            });\r\n        }\r\n        this.setState({ backdropIsOpen: false });\r\n    }\r\n\r\n    handleAppBarShift = (event) => {\r\n        this.setState({ isAppBarShift: event });\r\n    };\r\n\r\n    async componentDidMount() {\r\n        this.setState({ backdropIsOpen: true });\r\n\r\n        if (!localStorage.getItem(\"auth-token\")) {\r\n            this.setState({ isLoggedIn: 1 });\r\n            return;\r\n        }\r\n        try {\r\n            setAuthToken(localStorage.getItem(\"auth-token\"));\r\n            await axios.get(\"/authStaffMember\");\r\n            await axios.get('/authAcademicMember');\r\n            this.setState({ isLoggedIn: 2 });\r\n        } catch (err) {\r\n            this.setState({ isLoggedIn: 1 });\r\n        }\r\n        this.setState({ backdropIsOpen: false });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        if (this.state.isLoggedIn === 0)\r\n            return <div />;\r\n        if (this.state.isLoggedIn === 1) {\r\n            return <Redirect to='/' />;\r\n        }\r\n        return (\r\n            <div >\r\n\r\n                <Navigation_Bar fromParent={this.setComponentInMain}\r\n                    handleAppBarShift={this.handleAppBarShift}\r\n                />\r\n                <Container maxWidth=\"lg\" style={{ marginTop: \"100px\" }} className={clsx({\r\n                    [classes.appBarShift]: this.state.isAppBarShift,\r\n                })}>\r\n                    {this.state.componentInMain}\r\n                </Container>\r\n                <AlertMessage open={this.state.showAlert} type={this.state.errorType} onClose={() => { this.setState({ showAlert: false }) }}\r\n                    msg={this.state.alertMessage} />\r\n                <Backdrop className={classes.backdrop} open={this.state.backdropIsOpen}\r\n                    style={{ zIndex: 600000000 }}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AC);\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\Login.js",["627"],"import Avatar from '@material-ui/core/Avatar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login } from '../actions/authAction.js';\r\nimport Copyright from './Material_UI_Copyright.js';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://www.guc.edu.eg//img/content/about_guc/48.jpg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n});\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        showPassword: false,\r\n        res: \"\",\r\n        isLoggedIn: false,\r\n        loginError: false,\r\n        emptyEmail: true,\r\n        emptyPassword: true,\r\n        isDirtyEmail: false,\r\n        isDirtyPassword: false,\r\n        clicked : false\r\n    };\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await this.setState({ clicked: true });\r\n        console.log(this.state.clicked)\r\n        const req = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        }\r\n        try {\r\n            const res = await login(req);\r\n            this.setState({\r\n                res: res,\r\n                loginError: false,\r\n                isLoggedIn: true,\r\n            });\r\n        } catch (error) {\r\n            this.setState({ loginError: true })\r\n        }\r\n        this.setState({clicked : false});\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value,\r\n        });\r\n        if (event.target.id === \"email\") {\r\n            if (event.target.value === \"\")\r\n                this.setState({ emptyEmail: true });\r\n            else\r\n                this.setState({ emptyEmail: false });\r\n        }\r\n        if (event.target.id === \"password\") {\r\n            if (event.target.value === \"\")\r\n                this.setState({ emptyPassword: true });\r\n            else\r\n                this.setState({ emptyPassword: false });\r\n        }\r\n    };\r\n\r\n    handleFocus = event => {\r\n        if (event.target.id === \"email\") {\r\n            if (event.target.value === \"\")\r\n                this.setState({ emptyEmail: true, isDirtyEmail: true });\r\n            else\r\n                this.setState({ emptyEmail: false, isDirtyEmail: true });\r\n        }\r\n        if (event.target.id === \"password\") {\r\n            if (event.target.value === \"\")\r\n                this.setState({ emptyPassword: true, isDirtyPassword: true });\r\n            else\r\n                this\r\n                    .setState({ emptyPassword: false, isDirtyPassword: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        if(this.state.res.firstLogin){\r\n            return <Redirect to={{pathname:\"/resetPassword\",state :{firstLogin : this.state.res.firstLogin}}} />\r\n        }\r\n        if (this.state.isLoggedIn ) {\r\n            if (this.state.res.type === 1) {\r\n                return <Redirect to='/hr' />;\r\n            } else {\r\n                switch (this.state.res.academicMemberType) {\r\n                    case 0: return <Redirect to='/hod' />;\r\n                    case 1: return <Redirect to='/ci' />;\r\n                    case 2: return <Redirect to='/cc' />;\r\n                    case 3: return <Redirect to='/ac' />;\r\n                    default: ;\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <Grid container component=\"main\" className={classes.root} >\r\n                <CssBaseline />\r\n                <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Login\r\n                        </Typography>\r\n                        <form className={classes.form} noValidate>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                onChange={this.handleChange}\r\n                                onBlur={this.handleFocus}\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                            />\r\n                            <Collapse in={this.state.emptyEmail && this.state.isDirtyEmail}>\r\n                                <Alert\r\n                                    severity=\"error\"\r\n                                    id=\"emptyEmailError\"\r\n                                    className={classes.alert}\r\n                                >\r\n                                    This field is required!\r\n                            </Alert>\r\n                            </Collapse>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                onChange={this.handleChange}\r\n                                onBlur={this.handleFocus}\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                            <Collapse in={this.state.emptyPassword && this.state.isDirtyPassword}>\r\n                                <Alert\r\n                                    severity=\"error\"\r\n                                    id=\"emptyPasswordError\"\r\n                                    className={classes.alert}\r\n                                >\r\n                                    This field is required!\r\n                            </Alert>\r\n                            </Collapse>\r\n                            {!this.state.clicked ?(\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                onClick={this.handleSubmit}\r\n                                disabled={\r\n                                    this.state.emptyPassword ||\r\n                                    this.state.emptyEmail\r\n                                }\r\n\r\n                            >\r\n                                Login\r\n                            </Button>) :(\r\n                                <CircularProgress\r\n                                style={{\r\n                                  marginTop: \"6px\",\r\n                                  marginRight: \"240px\",\r\n                                  display: \"block\",\r\n                                  margin: \"0 auto\"\r\n                                }}\r\n                              />\r\n                            )\r\n\r\n            }\r\n                            <Collapse in={this.state.loginError}>\r\n                                <Alert\r\n                                    severity=\"error\"\r\n                                    id=\"error\"\r\n                                    className={classes.alert}\r\n                                >\r\n                                    Wrong Email or Password\r\n                            </Alert>\r\n                            </Collapse>\r\n\r\n\r\n\r\n                            <Grid container>\r\n                                {/* <Grid item xs>\r\n                                    <Link href=\"#\" variant=\"body2\">\r\n                                        Forgot password?\r\n                </Link>\r\n                                </Grid> */}\r\n                                {/* <Grid item>\r\n                                    <Link href=\"#\" variant=\"body2\">\r\n                                        {\"Don't have an account? Sign Up\"}\r\n                                    </Link>\r\n                                </Grid> */}\r\n                            </Grid>\r\n                            <Box mt={5}>\r\n                                <Copyright />\r\n                            </Box>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Login);","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\ViewMissingDaysForm.js",["628","629","630","631","632","633","634","635","636","637","638","639","640"],"import { Collapse } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'AttendanceStatus', numeric: true, disablePadding: true, label: 'Status' },\r\n  { id: 'AttendanceSignin', numeric: true, disablePadding: true, label: 'Day' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={'center'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <b style={{ fontSize: 20 }}>{headCell.label}</b>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h5\" id=\"tableTitle\" component=\"div\">\r\n            Missing Days\r\n          </Typography>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\nexport default function EnhancedTable(props) {\r\n\r\n  const [rows, setRows] = React.useState(props.missedDays);\r\n  const allRows = props.missedDays;\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('AttendanceSignin');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell align=\"center\">Absent</TableCell>\r\n                      <TableCell align=\"center\">{row.date}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\Navigation_Bar.js",["641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657"],"import { Collapse, Tooltip } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport WorkOffIcon from '@material-ui/icons/WorkOff';\r\nimport clsx from 'clsx';\r\nimport React, { Component } from 'react';\r\nimport DropdownList_NavBar from './DropdownList_NavBar';\r\nimport DropdownList_Notifications from './DropdownList_Notifications';\r\nimport CC_SlideBar from './slideBars/CC_SlideBar';\r\nimport CI_SlideBar from './slideBars/CI_SlideBar';\r\nimport Hod_SlideBar from './slideBars/Hod_SlideBar';\r\nimport HR_SlideBar from './slideBars/HR_SlideBar';\r\nimport AC_SlideBar from './slideBars/AC_SlideBar';\r\nimport {useLocation,withRouter} from 'react-router-dom'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme) => ({\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        zIndex : 10\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    IconButton: {\r\n        marginRight: theme.spacing(4),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    sectionDesktop: {\r\n        display: 'flex',\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n});\r\n\r\nclass Navigation_Bar extends Component {\r\n    state = {\r\n        viewProfile: false,\r\n        isSlideBarOpen: false,\r\n        headerHeight: 0,\r\n        screenHeight: 0,\r\n        screenWidth: 0,\r\n        currentScrollHeight: 0,\r\n        targetHeight: 0,\r\n    };\r\n\r\n    handleViewProfile = (event) => {\r\n        this.setState({ viewProfile: true });\r\n        this.props.fromParent(\"profile\");\r\n    };\r\n\r\n    handleViewAttendance = (event) => {\r\n        this.props.fromParent(\"attendance\");\r\n    }\r\n\r\n    handleViewMissingDays = (event) => {\r\n        this.props.fromParent(\"viewMissingDays\");\r\n    }\r\n\r\n    handleSlideBarToggle = async (event) => {\r\n        await this.setState({ isSlideBarOpen: !this.state.isSlideBarOpen });\r\n        this.props.handleAppBarShift(this.state.isSlideBarOpen);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // window.addEventListener('scroll',this.handleScroll);\r\n        window.onscroll = () => {\r\n            const newScrollHeight = Math.ceil(window.scrollY / 50) * 50;\r\n            if (this.state.currentScrollHeight !== newScrollHeight) {\r\n                this.setState({ currentScrollHeight: newScrollHeight });\r\n            }\r\n        };\r\n        await this.setState({\r\n            targetHeight:\r\n                this.props.first -\r\n                document.getElementById(\"Header\").getClientRects()[0].y\r\n        });\r\n        this.handleViewProfile();\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const styles = {\r\n            Header: { position: \"fixed\" }\r\n        }\r\n        \r\n        const currentRoute=window.location.pathname;\r\n        \r\n        return (\r\n            <div className={classes.grow} id = \"Header\" style={styles.Header} ref=\"Header\" style={{zIndex:500000000}}>\r\n                <AppBar style={{zIndex:500000000}} position=\"fixed\" className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: this.state.isSlideBarOpen,\r\n                })}>\r\n                    <Toolbar >\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleSlideBarToggle}\r\n                            color=\"inherit\"\r\n                        >\r\n                            {this.state.isSlideBarOpen ? <ChevronLeftIcon /> : <MenuIcon />}\r\n                        </IconButton>\r\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                            GUC PORTAL\r\n                  </Typography>\r\n                        <div className={classes.grow} />\r\n                        <div className={classes.sectionDesktop}>\r\n                            <Tooltip title={\"View Missing Days\"}>\r\n                                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\" onClick={this.handleViewMissingDays}>\r\n                                    <Badge badgeContent={0} color=\"secondary\">\r\n                                        <WorkOffIcon />\r\n                                    </Badge>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={\"View Attendance\"}>\r\n                                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\" onClick={this.handleViewAttendance}>\r\n                                    <Badge badgeContent={0} color=\"secondary\">\r\n                                        <TodayIcon />\r\n                                    </Badge>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                                <Tooltip title={\"Notifications\"}>\r\n                            <Collapse in={localStorage.getItem('type') == 0}>\r\n                                    <DropdownList_Notifications />\r\n                            </Collapse>\r\n                                </Tooltip>\r\n\r\n                            <Tooltip title={\"View Profile\"}>\r\n                                <IconButton\r\n                                    aria-label=\"account of current user\"\r\n                                    aria-haspopup=\"true\"\r\n                                    id=\"profile\"\r\n                                    onClick={this.handleViewProfile}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <AccountCircle />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <DropdownList_NavBar\r\n                                fromParent={this.props.fromParent}\r\n                                openAlert = {this.props.openAlert}\r\n                            />\r\n                        </div>\r\n                    </Toolbar>\r\n                    {\r\n\r\n                        (localStorage.getItem('type') == 1) ?\r\n                            <HR_SlideBar\r\n                                open={this.state.isSlideBarOpen}\r\n                                setComponentInMain={this.props.fromParent} /> :\r\n                            (localStorage.getItem(\"academicMemberType\") == 0 &&currentRoute==\"/hod\") ?\r\n                                <Hod_SlideBar\r\n                                    open={this.state.isSlideBarOpen}\r\n                                    updateRequestStaffProfile={this.props.updateRequestStaffProfile}\r\n                                    updateRequests={this.props.updateRequests}\r\n                                    setComponentInMain={this.props.fromParent}\r\n                                    requestAllDepartmentCourses={this.props.requestAllDepartmentCourses}\r\n                                    updateRequestCourseStaff={this.props.updateRequestCourseStaff}\r\n                                    />\r\n                                : (localStorage.getItem('academicMemberType') == 1||(localStorage.getItem(\"academicMemberType\") == 0)) ?\r\n\r\n                                    <CI_SlideBar\r\n                                        open={this.state.isSlideBarOpen}\r\n                                        setComponentInMain={this.props.fromParent}\r\n                                        requestAllDepartmentCourses={this.props.requestAllDepartmentCourses}\r\n                                        updateRequestStaffProfile={this.props.updateRequestStaffProfile}\r\n                                        updateRequestCourseStaff={this.props.updateRequestCourseStaff}\r\n                                    />\r\n                                    :\r\n                                    (localStorage.getItem(\"academicMemberType\") == 2) ?\r\n                                        <CC_SlideBar\r\n                                            open={this.state.isSlideBarOpen}\r\n                                            setComponentInMain={this.props.fromParent} /> :\r\n                                        <AC_SlideBar\r\n                                            open={this.state.isSlideBarOpen}\r\n                                            setComponentInMain={this.props.fromParent}\r\n                                        />\r\n                    }\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Navigation_Bar);","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\Material_UI_Copyright.js",[],"C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\annualLeaveRequest.js",["658","659","660","661","662","663","664","665","666","667","668"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport RequestForm from './requestForm.js';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function AnnualLeaveRequest(props) {\r\n    const [showForm, setShowForm] = React.useState(false);\r\n    const [reqID,setReqID]=React.useState();\r\n    const[selection,setSelection]=React.useState(\"all\");\r\n    const handleCloseForm=()=>{\r\n        setShowForm(false);\r\n    }\r\n    const handleOpenForm=(event)=>{\r\n           const requestID = event.currentTarget.id.split('_')[1];\r\n           setReqID(requestID);\r\n        setShowForm(true);\r\n    }\r\n    const handleAcceptRequest= async(event)=>{\r\n\r\n        const requestID = event.currentTarget.id.split('_')[1];\r\n       \r\n        try {\r\n            const req = {\r\n                response: 1\r\n            };\r\n        \r\n            props.updateRequests(\"annual leave requests\",requestID,\"accepted\");\r\n            const res = await axios.put(`/hod/respondToAnnualLeaveRequests/${requestID}`,  req);\r\n            props.openAlert(\"Response submitted successfully\", \"success\");\r\n        } catch (err) {\r\n            props.updateRequests(\"annual leave requests\",requestID,\"pending\");\r\n            \r\n            props.openAlert(err.response.data);\r\n            \r\n        }\r\n        props.setComponentInMain(\"annualLeaveRequest\");\r\n        \r\n    }\r\n\r\n    const handleRejectRequest= async(requestID,msg)=>{\r\n\r\n    \r\n        try {\r\n            const req = {\r\n                response: 0,\r\n                msg:msg\r\n            };\r\n            props.updateRequests(\"annual leave requests\",requestID,\"rejected\");\r\n            const res = await axios.put(`/hod/respondToAnnualLeaveRequests/${requestID}`,  req);\r\n            props.openAlert(\"Response submitted successfully\", \"success\");\r\n        } catch (err) {\r\n            props.updateRequests(\"annual leave requests\",requestID,\"pending\");            \r\n            props.openAlert(err.response.data);\r\n            \r\n        }\r\n        props.setComponentInMain(\"annualLeaveRequest\");\r\n    \r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Annual Leave Requests</b>\r\n                </Typography>\r\n                \r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item>\r\n                         <Autocomplete\r\n                            id=\"filterAnnualLeaveRequest\"\r\n                            options={[ \"all\" ,\"accepted\",\"rejected\",\"pending\" ]}\r\n\r\n                            getOptionLabel={(option) => option}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Filter by request status\" variant=\"outlined\" />}\r\n                           \r\n                            onChange={(event, newValue) => {\r\n                                    if (newValue ) {\r\n                                        setSelection(newValue);\r\n                                 \r\n                                    }\r\n                            }}\r\n                        /> \r\n                    </Grid>\r\n                </Grid> \r\n                <br />\r\n                <Grid container spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    {\r\n\r\n                        props.requests.map(req =>\r\n                            <Grid item xs style={(req.status!=selection&&selection!=\"all\")?{display:'none'}:{}} >\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent >\r\n                                            <Box display=\"flex\" direction=\"row\" justifyContent=\"space-between\">\r\n                                            <Box>\r\n                                            <Typography variant=\"subtitle1\" paragraph>\r\n                                                <b>Sender Name: </b> {req.senderID}<br />\r\n                                                 <b>Email: </b> <a href={\"mailto:\"+req.email}>{req.email} </a><br /> \r\n                                                <b>Message: </b> {req.msg}<br />\r\n                                                <b>Resquested date:</b> {new Date(req.requestedDate).toLocaleDateString('en-US')}<br />\r\n                                                <b>Submission date:</b> {new Date(req.submissionDate).toLocaleDateString('en-US')}<br />\r\n                                                <b>Status:</b> {req.status}<br />\r\n                                                <b>Replacement: </b> \r\n                                                 {/* <Divider/> */}\r\n                                                 <br />\r\n                                                 <br/>\r\n                                                 <Grid container display=\"flex\" direction=\"row\" spacing={4} >\r\n                                                 {req.replacements.map((replacement)=>\r\n                                                    <Grid item >\r\n                                                    <Box border = {1} borderColor =\"grey.500\" borderRadius = \"10px\" padding =\"10px\">    \r\n                                                   &nbsp;&nbsp;&nbsp; <b>Receiver name: </b>{replacement.receiverName}<br/>\r\n                                                   &nbsp; &nbsp;&nbsp;<b>Course name: </b>{replacement.courseName}<br/>\r\n                                                   &nbsp;&nbsp;&nbsp; <b>Slot Number: </b>{replacement.slotNumber}<br/>\r\n                                                   &nbsp;&nbsp;&nbsp; <b>Replacement request status: </b>{replacement.status}<br/>\r\n                                                     </Box>\r\n                                                     </Grid>\r\n                                                 )}\r\n                                                 </Grid>\r\n                                                 {/* <Divider  /> */}\r\n                                                 <br/>\r\n                                               \r\n                                            </Typography>\r\n                                            </Box>\r\n\r\n                                            <Box display=\"flex\" direction=\"row\" justifyContent=\"space-between\" >\r\n                                                <Box>\r\n                                        <Tooltip title = \"Accept the request\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                 id={\"ACCEPTANNUALLEAVEREQUEST_\" + req.ID}\r\n                                                color='primary'\r\n                                                 onClick={handleAcceptRequest}\r\n                                                 style={(req.status!=\"pending\")?{display:'none'}:{}}\r\n                                              >\r\n                                                <CheckIcon style={{color:\"green\", fontSize: 25, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n                                            </Box>\r\n                                            <Box>\r\n                                            <Tooltip title = \"Reject the request\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"REJECTANNUALLEAVEREQUEST_\" + req.ID}\r\n                                                color='primary'\r\n                                                style={(req.status!=\"pending\")?{display:'none'}:{}}\r\n                                           \r\n                                                 onClick={handleOpenForm}\r\n                                            >\r\n                                                <CloseIcon style={{ color:\"#cc0000\",fontSize: 25, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n                                            </Box>\r\n                                            </Box>\r\n                                        \r\n                                            </Box>\r\n                                        </CardContent>\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n\r\n                       )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n\r\n            <RequestForm open={showForm} handleCloseForm={handleCloseForm} requestID={reqID} handleRejectRequest={handleRejectRequest}  setComponentInMain={props.setComponentInMain} />\r\n\r\n\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\accidentalLeaveRequest.js",["669","670","671","672","673","674","675","676","677","678"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport RequestForm from './requestForm.js';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function AccidentalLeaveRequest(props) {\r\n    const [showForm, setShowForm] = React.useState(false);\r\n    const [reqID,setReqID]=React.useState();\r\n    const[selection,setSelection]=React.useState(\"all\");\r\n    const handleCloseForm=()=>{\r\n        setShowForm(false);\r\n    }\r\n    const handleOpenForm=(event)=>{\r\n           const requestID = event.currentTarget.id.split('_')[1];\r\n           setReqID(requestID);\r\n        setShowForm(true);\r\n    }\r\n    const handleAcceptRequest= async(event)=>{\r\n\r\n        const requestID = event.currentTarget.id.split('_')[1];\r\n       \r\n        try {\r\n            const req = {\r\n                response: 1\r\n            };\r\n        \r\n            props.updateRequests(\"accidental leave requests\",requestID,\"accepted\");\r\n            const res = await axios.put(`/hod/respondToAccidentalLeaveRequest/${requestID}`,  req);\r\n            props.openAlert(\"Response submitted successfully\", \"success\");\r\n        } catch (err) {\r\n            props.updateRequests(\"accidental leave requests\",requestID,\"pending\");\r\n            props.openAlert(err.response.data);\r\n            \r\n        }\r\n        props.setComponentInMain(\"accidentalLeaveRequest\");\r\n    \r\n    }\r\n\r\n    const handleRejectRequest= async(requestID,msg)=>{\r\n\r\n    \r\n        try {\r\n            const req = {\r\n                response: 0,\r\n                msg:msg\r\n            };\r\n            props.updateRequests(\"accidental leave requests\",requestID,\"rejected\");\r\n            const res = await axios.put(`/hod/respondToAccidentalLeaveRequest/${requestID}`,  req);\r\n            props.openAlert(\"Response submitted successfully\", \"success\");\r\n        } catch (err) {\r\n            props.updateRequests(\"accidental leave requests\",requestID,\"pending\");\r\n            props.openAlert(err.response.data);\r\n            \r\n        }\r\n        props.setComponentInMain(\"accidentalLeaveRequest\");\r\n    \r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Accidental Leave Requests</b>\r\n                </Typography>\r\n                \r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item>\r\n                         <Autocomplete\r\n                            id=\"filterAccidentalLeaveRequest\"\r\n                            options={[ \"all\" ,\"accepted\",\"rejected\",\"pending\" ]}\r\n\r\n                            getOptionLabel={(option) => option}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Filter by request status\" variant=\"outlined\" />}\r\n                           \r\n                            onChange={(event, newValue) => {\r\n                                    if (newValue ) {\r\n                                        setSelection(newValue);\r\n                                 \r\n                                    }\r\n                            }}\r\n                        /> \r\n                    </Grid>\r\n                </Grid> \r\n                <br />\r\n                <Grid container spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    {\r\n\r\n                        props.requests.map(req =>\r\n                            <Grid item xs style={(req.status!=selection&&selection!=\"all\")?{display:'none'}:{}} >\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent >\r\n                                            <Box display=\"flex\" direction=\"row\" justifyContent=\"space-between\">\r\n                                            <Box>\r\n                                            <Typography variant=\"subtitle1\" paragraph>\r\n                                                <b>Sender Name:</b> {req.senderID}<br />\r\n                                                <b>Email:</b> <a href={\"mailto:\"+req.email}>{req.email} </a><br /> \r\n                                                <b>Message:</b> {req.msg}<br />\r\n                                                <b>Resquested date:</b> {new Date(req.requestedDate).toLocaleDateString('en-US')}<br />\r\n                                                <b>Submission date:</b> {new Date(req.submissionDate).toLocaleDateString('en-US')}<br />\r\n                                                <b>Status:</b> {req.status}<br />   \r\n                                            </Typography>\r\n                                            </Box>\r\n\r\n                                            <Box  >\r\n                                        <Tooltip title = \"Accept the request\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                 id={\"ACCEPTACCIDENTALLEAVEREQUEST_\" + req.ID}\r\n                                                color='primary'\r\n                                                 onClick={handleAcceptRequest}\r\n                                                 style={(req.status!=\"pending\")?{display:'none'}:{}}\r\n                                              >\r\n                                                <CheckIcon style={{color:\"green\", fontSize: 25, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n\r\n                                            <Tooltip title = \"Reject the request\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"REJECTACCIDENTALLEAVEREQUEST_\" + req.ID}\r\n                                                color='primary'\r\n                                                style={(req.status!=\"pending\")?{display:'none'}:{}}\r\n                                           \r\n                                                 onClick={handleOpenForm}\r\n                                            >\r\n                                                <CloseIcon style={{ color:\"#cc0000\",fontSize: 25, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n                                            </Box>\r\n                                        \r\n                                            </Box>\r\n                                        </CardContent>\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n\r\n                       )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n\r\n            <RequestForm open={showForm} handleCloseForm={handleCloseForm} requestID={reqID} handleRejectRequest={handleRejectRequest}  setComponentInMain={props.setComponentInMain}  />\r\n\r\n\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\viewStaffProfiles.js",["679","680","681","682","683","684","685","686","687","688","689","690","691","692","693"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport AssignInstructorForm from './assignInstructorForm.js';\r\nimport DeleteInstructorForm from './deleteInstructorForm.js';\r\nimport UpdateInstructorForm from './updateInstructorForm.js';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n      },\r\n}));\r\n\r\nexport default function ViewStaffProfiles(props) {\r\n    const [showInstructor,setShowInstructor]=React.useState('');\r\n    const [showCourse,setShowCourse]=React.useState('');\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Staff Profiles</b>\r\n                </Typography>\r\n                <Grid \r\n                container \r\n                className={classes.root}\r\n                 spacing={2}\r\n                 direction=\"row\"\r\n                 justify=\"center\"\r\n                 alignItems=\"center\"\r\n                >\r\n                <Grid item>\r\n                <Autocomplete\r\n                    id=\"filterByStaff\"\r\n                    options={[{name:\"All\"},...((props.academicMembers).filter((mem)=>{\r\n                        if(!props.academicMembers)return true;\r\n                        const deptID=props.academicMembers.find((ac)=>{return ac.ID==props.hodProfile.ID}).departmentID;\r\n                        return mem.departmentID==deptID}))]}\r\n                   \r\n                    getOptionLabel={(option) => option.name}\r\n                    style={{ width: 300 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"Filter by an academic member\" variant=\"outlined\" />}\r\n                    onClose={()=>{        setShowCourse('') }}\r\n            \r\n                    onChange={(event, newValue) => {\r\n                        if(newValue&&newValue.name==\"All\"&&newValue.ID==undefined){\r\n                            props.updateProfiles();\r\n                            props.setComponentInMain(\"viewStaffProfiles\");\r\n                      //      setShowInstructor('');\r\n                            \r\n                        }else\r\n                        if(newValue&&newValue.ID){\r\n                            props.updateProfiles(\"staffMember\",{ID:newValue.ID});\r\n                          props.setComponentInMain(\"viewStaffProfiles\");\r\n                      //    setShowInstructor('');\r\n                          \r\n                        }\r\n                    }}\r\n                   // clearOnEscape={true}\r\n                    value={showInstructor}\r\n                />\r\n             </Grid>\r\n             <Grid item>\r\n               <Autocomplete\r\n                    id=\"filterByCourse\"\r\n                    options={props.allCourses.filter((cor)=>{\r\n                        return true;\r\n                    })}\r\n                   \r\n                    getOptionLabel={(option) => { \r\n                        if(!option)return '';\r\n                        return(option.name + \" \" + option.code)}}\r\n                    style={{ width: 300 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"Filter by a course\" variant=\"outlined\" />}\r\n                    onClose={()=>{        setShowCourse('')\r\n                    }}\r\n                    onChange={(event, newValue) => {\r\n                     \r\n                        if(newValue&&newValue.ID){\r\n                            props.updateProfiles(\"course\",{courseID:newValue.ID});\r\n                            props.setComponentInMain(\"viewStaffProfiles\");\r\n                  //          setShowCourse('')\r\n                            \r\n                        }\r\n                    }}\r\n\r\n                    value={showCourse}\r\n        \r\n                />\r\n                </Grid>\r\n               \r\n                </Grid>\r\n                <br/>\r\n                <Grid container spacing={4} >\r\n                    {\r\n                    \r\n                        props.staffProfiles.map(profile =>\r\n                            <Grid item xs={12} md={4}>\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent>\r\n                                            <Typography variant=\"subtitle1\" paragraph>\r\n                                                <b>Name:</b> {profile.name}<br />\r\n                                                <b>Email:</b> <a href={\"mailto:\"+profile.email}>{profile.email} </a><br /> \r\n                                                <b>ID:</b> {profile.ID}<br />\r\n                                                <b>Office:</b> {profile.officeID}<br/>\r\n                                                <b>Day off:</b> {profile.dayOff}<br/>\r\n                                                <b>Department:</b> {profile.departmentID}<br/>\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n         \r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\compensationLeaveRequest.js",["694","695","696","697","698","699","700","701","702","703"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport RequestForm from './requestForm.js';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function CompensationLeaveRequest(props) {\r\n    const [showForm, setShowForm] = React.useState(false);\r\n    const [reqID,setReqID]=React.useState();\r\n    const[selection,setSelection]=React.useState(\"all\");\r\n    const handleCloseForm=()=>{\r\n        setShowForm(false);\r\n    }\r\n    const handleOpenForm=(event)=>{\r\n           const requestID = event.currentTarget.id.split('_')[1];\r\n           setReqID(requestID);\r\n        setShowForm(true);\r\n    }\r\n    const handleAcceptRequest= async(event)=>{\r\n\r\n        const requestID = event.currentTarget.id.split('_')[1];\r\n       \r\n        try {\r\n            const req = {\r\n                response: 1\r\n            };\r\n        \r\n            props.updateRequests(\"compensation leave requests\",requestID,\"accepted\");\r\n            const res = await axios.put(`/hod/respondToCompensationLeaveRequest/${requestID}`,  req);\r\n            props.openAlert(\"Response submitted successfully.\", \"success\");\r\n        } catch (err) {\r\n            props.updateRequests(\"compensation leave requests\",requestID,\"pending\");\r\n            \r\n            props.openAlert(err.response.data);\r\n            \r\n        }\r\n        \r\n        props.setComponentInMain(\"compensationLeaveRequest\");\r\n    }\r\n\r\n    const handleRejectRequest= async(requestID,msg)=>{\r\n\r\n    \r\n        try {\r\n            const req = {\r\n                response: 0,\r\n                msg:msg\r\n            };\r\n            props.updateRequests(\"compensation leave requests\",requestID,\"rejected\");\r\n            const res = await axios.put(`/hod/respondToCompensationLeaveRequest/${requestID}`,  req);\r\n            props.setComponentInMain(\"compensationLeaveRequest\");\r\n            props.openAlert(\"Response submitted successfully.\", \"success\");\r\n        } catch (err) {\r\n            props.updateRequests(\"compensation leave requests\",requestID,\"pending\");\r\n       \r\n            props.openAlert(err.response.data);\r\n            \r\n        }\r\n    \r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Compensation Leave Requests</b>\r\n                </Typography>\r\n                \r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item>\r\n                         <Autocomplete\r\n                            id=\"filterCompensationLeaveRequest\"\r\n                            options={[ \"all\" ,\"accepted\",\"rejected\",\"pending\" ]}\r\n\r\n                            getOptionLabel={(option) => option}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Filter by request status\" variant=\"outlined\" />}\r\n                           \r\n                            onChange={(event, newValue) => {\r\n                                    if (newValue ) {\r\n                                        setSelection(newValue);\r\n                                 \r\n                                    }\r\n                            }}\r\n                        /> \r\n                    </Grid>\r\n                </Grid> \r\n                <br />\r\n                <Grid container spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    {\r\n\r\n                        props.requests.map(req =>\r\n                            <Grid item xs style={(req.status!=selection&&selection!=\"all\")?{display:'none'}:{}} >\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent >\r\n                                            <Box display=\"flex\" direction=\"row\" justifyContent=\"space-between\">\r\n                                            <Box>\r\n                                            <Typography variant=\"subtitle1\" paragraph>\r\n                                                <b>Sender Name:</b> {req.senderID}<br />\r\n                                                <b>Email:</b> <a href={\"mailto:\"+req.email}>{req.email} </a><br /> \r\n                                                <b>Resquested date:</b> {new Date(req.requestedDate).toLocaleDateString('en-US')}<br />\r\n                                                <b>Absence date:</b> {new Date(req.absenceDate).toLocaleDateString('en-US')}<br />                                                \r\n                                                <b>Submission date:</b> {new Date(req.submissionDate).toLocaleDateString('en-US')}<br />\r\n                                                <b>Status:</b> {req.status}<br />\r\n                                            </Typography>\r\n                                            </Box>\r\n\r\n                                            <Box  >\r\n                                        <Tooltip title = \"Accept the request\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                 id={\"ACCEPTCOMPENSATIONLEAVEREQUEST_\" + req.ID}\r\n                                                color='primary'\r\n                                                 onClick={handleAcceptRequest}\r\n                                                 style={(req.status!=\"pending\")?{display:'none'}:{}}\r\n                                              >\r\n                                                <CheckIcon style={{color:\"green\", fontSize: 25, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n\r\n                                            <Tooltip title = \"Reject the request\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"REJECTCOMPENSATIONLEAVEREQUEST_\" + req.ID}\r\n                                                color='primary'\r\n                                                style={(req.status!=\"pending\")?{display:'none'}:{}}\r\n                                           \r\n                                                 onClick={handleOpenForm}\r\n                                            >\r\n                                                <CloseIcon style={{ color:\"#cc0000\",fontSize: 25, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n                                            </Box>\r\n                                        \r\n                                            </Box>\r\n                                        </CardContent>\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n\r\n                       )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n\r\n            <RequestForm open={showForm} handleCloseForm={handleCloseForm} requestID={reqID} handleRejectRequest={handleRejectRequest}  setComponentInMain={props.setComponentInMain} />\r\n\r\n\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\sickLeaveRequest.js",["704","705","706","707","708","709","710","711","712","713"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport RequestForm from './requestForm.js';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function SickLeaveRequest(props) {\r\n    const [showForm, setShowForm] = React.useState(false);\r\n    const [reqID,setReqID]=React.useState();\r\n    const[selection,setSelection]=React.useState(\"all\");\r\n    const handleCloseForm=()=>{\r\n        setShowForm(false);\r\n    }\r\n    const handleOpenForm=(event)=>{\r\n           const requestID = event.currentTarget.id.split('_')[1];\r\n           setReqID(requestID);\r\n        setShowForm(true);\r\n    }\r\n    const handleAcceptRequest= async(event)=>{\r\n\r\n        const requestID = event.currentTarget.id.split('_')[1];\r\n       \r\n        try {\r\n            const req = {\r\n                response: 1\r\n            };\r\n        \r\n            props.updateRequests(\"sick leave requests\",requestID,\"accepted\");\r\n            const res = await axios.put(`/hod/respondToSickLeaveRequests/${requestID}`,  req);\r\n            props.openAlert(\"Response submitted successfully.\", \"success\");\r\n        } catch (err) {\r\n            props.updateRequests(\"sick leave requests\",requestID,\"pending\");\r\n          \r\n            props.openAlert(err.response.data);\r\n            \r\n        }\r\n        \r\n        props.setComponentInMain(\"sickLeaveRequest\");\r\n    }\r\n\r\n    const handleRejectRequest= async(requestID,msg)=>{\r\n\r\n    \r\n        try {\r\n            const req = {\r\n                response: 0,\r\n                msg:msg\r\n            };\r\n            props.updateRequests(\"sick leave requests\",requestID,\"rejected\");\r\n            const res = await axios.put(`/hod/respondToSickLeaveRequests/${requestID}`,  req);\r\n            props.openAlert(\"Response submitted successfully.\", \"success\");\r\n        } catch (err) {\r\n            props.updateRequests(\"sick leave requests\",requestID,\"pending\");\r\n            \r\n            props.openAlert(err.response.data);\r\n            \r\n        }\r\n        props.setComponentInMain(\"sickLeaveRequest\");\r\n    \r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Sick Leave Requests</b>\r\n                </Typography>\r\n                \r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item>\r\n                         <Autocomplete\r\n                            id=\"filterSickLeaveRequest\"\r\n                            options={[ \"all\" ,\"accepted\",\"rejected\",\"pending\" ]}\r\n\r\n                            getOptionLabel={(option) => option}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Filter by request status\" variant=\"outlined\" />}\r\n                           \r\n                            onChange={(event, newValue) => {\r\n                                    if (newValue ) {\r\n                                        setSelection(newValue);\r\n                                 \r\n                                    }\r\n                            }}\r\n                        /> \r\n                    </Grid>\r\n                </Grid> \r\n                <br />\r\n                <Grid container spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    {\r\n\r\n                        props.requests.map(req =>\r\n                            <Grid item xs style={(req.status!=selection&&selection!=\"all\")?{display:'none'}:{}} >\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent >\r\n                                            <Box display=\"flex\" direction=\"row\" justifyContent=\"space-between\">\r\n                                            <Box>\r\n                                            <Typography variant=\"subtitle1\" paragraph>\r\n                                                <b>Sender Name: </b> {req.senderID}<br />\r\n                                                <b>Email: </b> <a href={\"mailto:\"+req.email}>{req.email} </a><br /> \r\n                                                <b>Message: </b> {req.msg}<br />\r\n                                                <b>Resquested date: </b> {new Date(req.requestedDate).toLocaleDateString('en-US')}<br />\r\n                                                <b>Submission date: </b> {new Date(req.submissionDate).toLocaleDateString('en-US')}<br />\r\n                                                <b>Document: </b> {req.documents}<br />                                                \r\n                                                <b>Status: </b> {req.status}<br />\r\n                                            </Typography>\r\n                                            </Box>\r\n\r\n                                            <Box  >\r\n                                        <Tooltip title = \"Accept the request\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                 id={\"ACCEPTSICKLEAVEREQUEST_\" + req.ID}\r\n                                                color='primary'\r\n                                                 onClick={handleAcceptRequest}\r\n                                                 style={(req.status!=\"pending\")?{display:'none'}:{}}\r\n                                              >\r\n                                                <CheckIcon style={{color:\"green\", fontSize: 25, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n\r\n                                            <Tooltip title = \"Reject the request\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"REJECTSICKLEAVEREQUEST_\" + req.ID}\r\n                                                color='primary'\r\n                                                style={(req.status!=\"pending\")?{display:'none'}:{}}\r\n                                           \r\n                                                 onClick={handleOpenForm}\r\n                                            >\r\n                                                <CloseIcon style={{ color:\"#cc0000\",fontSize: 25, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n                                            </Box>\r\n                                        \r\n                                            </Box>\r\n                                        </CardContent>\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n\r\n                       )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n\r\n            <RequestForm open={showForm} handleCloseForm={handleCloseForm} requestID={reqID} handleRejectRequest={handleRejectRequest}  setComponentInMain={props.setComponentInMain} />\r\n\r\n\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\maternityLeaveRequest.js",["714","715","716","717","718","719","720","721","722","723"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport RequestForm from './requestForm.js';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function MaternityLeaveRequest(props) {\r\n    const [showForm, setShowForm] = React.useState(false);\r\n    const [reqID,setReqID]=React.useState();\r\n    const[selection,setSelection]=React.useState(\"all\");\r\n    const handleCloseForm=()=>{\r\n        setShowForm(false);\r\n    }\r\n    const handleOpenForm=(event)=>{\r\n            const requestID = event.currentTarget.id.split('_')[1];\r\n            setReqID(requestID);\r\n            setShowForm(true);\r\n    }\r\n    const handleAcceptRequest= async(event)=>{\r\n\r\n        const requestID = event.currentTarget.id.split('_')[1];\r\n       \r\n        try {\r\n            const req = {\r\n                response: 1\r\n            };\r\n        \r\n            props.updateRequests(\"maternity leave requests\",requestID,\"accepted\");\r\n            const res = await axios.put(`/hod/respondToMaternityLeaveRequest/${requestID}`,  req);\r\n            props.openAlert(\"Response submitted successfully.\", \"success\");\r\n        } catch (err) {\r\n            props.updateRequests(\"maternity leave requests\",requestID,\"pending\");\r\n            \r\n            props.openAlert(err.response.data);\r\n            \r\n        }\r\n        props.setComponentInMain(\"maternityLeaveRequest\");\r\n    \r\n    }\r\n\r\n    const handleRejectRequest= async(requestID,msg)=>{\r\n\r\n    \r\n        try {\r\n            const req = {\r\n                response: 0,\r\n                msg:msg\r\n            };\r\n            props.updateRequests(\"maternity leave requests\",requestID,\"rejected\");\r\n            const res = await axios.put(`/hod/respondToMaternityLeaveRequest/${requestID}`,  req);\r\n            props.openAlert(\"Response submitted successfully.\", \"success\");\r\n        } catch (err) {\r\n            props.updateRequests(\"maternity leave requests\",requestID,\"pending\");\r\n            \r\n            props.openAlert(err.response.data);\r\n            \r\n        }\r\n        props.setComponentInMain(\"maternityLeaveRequest\");\r\n    \r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Maternity Leave Requests</b>\r\n                </Typography>\r\n                \r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item>\r\n                         <Autocomplete\r\n                            id=\"filterMaternityLeaveRequest\"\r\n                            options={[ \"all\" ,\"accepted\",\"rejected\",\"pending\" ]}\r\n\r\n                            getOptionLabel={(option) => option}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Filter by request status\" variant=\"outlined\" />}\r\n                           \r\n                            onChange={(event, newValue) => {\r\n                                    if (newValue ) {\r\n                                        setSelection(newValue);\r\n                         \r\n                                    }\r\n                            }}\r\n                        /> \r\n                    </Grid>\r\n                </Grid> \r\n                <br />\r\n                <Grid container spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    {\r\n\r\n                        props.requests.map(req =>\r\n                            <Grid item xs style={(req.status!=selection&&selection!=\"all\")?{display:'none'}:{}} >\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent >\r\n                                            <Box display=\"flex\" direction=\"row\" justifyContent=\"space-between\">\r\n                                            <Box>\r\n                                            <Typography variant=\"subtitle1\" paragraph>\r\n                                                <b>Sender Name:</b> {req.senderID}<br />\r\n                                                 <b>Email:</b> <a href={\"mailto:\"+req.email}>{req.email} </a><br /> \r\n                                                <b>Message:</b> {req.msg}<br />\r\n                                                <b>Resquested start date  :</b> {new Date(req.startDate).toLocaleDateString('en-US')}<br />\r\n                                                <b>Resquested end date  :</b> {new Date(req.endDate).toLocaleDateString('en-US')}<br />\r\n                                                <b>Submission date:</b> {new Date(req.submissionDate).toLocaleDateString('en-US')}<br />\r\n                                                <b>Document :</b> {req.documents}<br />\r\n                                                <b>Status:</b> {req.status}<br />\r\n                                            </Typography>\r\n                                            </Box>\r\n\r\n                                            <Box  >\r\n                                        <Tooltip title = \"Accept the request\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                 id={\"ACCEPTMATERNITYLEAVEREQUEST_\" + req.ID}\r\n                                                color='primary'\r\n                                                 onClick={handleAcceptRequest}\r\n                                                 style={(req.status!=\"pending\")?{display:'none'}:{}}\r\n                                              >\r\n                                                <CheckIcon style={{color:\"green\", fontSize: 25, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n\r\n                                            <Tooltip title = \"Reject the request\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"REJECTMATERNITYLEAVEREQUEST_\" + req.ID}\r\n                                                color='primary'\r\n                                                style={(req.status!=\"pending\")?{display:'none'}:{}}\r\n                                           \r\n                                                 onClick={handleOpenForm}\r\n                                            >\r\n                                                <CloseIcon style={{ color:\"#cc0000\",fontSize: 25, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n                                            </Box>\r\n                                        \r\n                                            </Box>\r\n                                        </CardContent>\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n\r\n                       )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n\r\n            <RequestForm open={showForm} handleCloseForm={handleCloseForm} requestID={reqID} handleRejectRequest={handleRejectRequest}  setComponentInMain={props.setComponentInMain} />\r\n\r\n\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\departmentCourses.js",["724"],"import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React from \"react\";\r\nimport DepartmentCoursesCard from \"./departmentCoursesCard\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.common.black\r\n    },\r\n    body: {\r\n        \"&:first-child \": {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        fontSize: 14\r\n    }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        \"&:nth-of-type(odd)\": {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    }\r\n}))(TableRow);\r\nlet scheduleObj = {\r\n    'saturday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'sunday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'monday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'tuesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'wednesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'thurseday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'friday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n}\r\n\r\n\r\nfunction mapToScheduleObj(courseSchedule) {\r\n    scheduleObj = {\r\n        'saturday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'sunday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'monday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'tuesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'wednesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'thurseday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'friday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    }\r\n    console.log(\"course schedule \", courseSchedule);\r\n    if (!courseSchedule || !scheduleObj) return;\r\n    rows = [];\r\n    for (const entry of courseSchedule) {\r\n        scheduleObj[entry.day][entry.slotNumber - 1].push(\r\n            <DepartmentCoursesCard\r\n                instructorName={entry.instructor}\r\n                instructorID={entry.instructorID}\r\n                locationName={entry.locationName}\r\n            />\r\n        )\r\n    }\r\n\r\n    for (const entry in scheduleObj) {\r\n        // rows.push(createData(entry, scheduleObj[entry][0], scheduleObj[entry][1],\r\n        //     scheduleObj[entry][2], scheduleObj[entry][3], scheduleObj[entry][4],\r\n        //     scheduleObj[entry][5], scheduleObj[entry][6]));\r\n        // console.log(entry,scheduleObj[entry][0],entry[2],entry[3]);\r\n        rows.push(createData(entry, makeCard(scheduleObj[entry][0]), makeCard(scheduleObj[entry][1]),\r\n            makeCard(scheduleObj[entry][2]), makeCard(scheduleObj[entry][3]), makeCard(scheduleObj[entry][4]),\r\n            makeCard(scheduleObj[entry][5]), makeCard(scheduleObj[entry][6])));\r\n\r\n    }\r\n}\r\nconst makeCard = (arrayOfCards) => {\r\n    if (!arrayOfCards) return (<Box></Box>)\r\n    return (<Grid container display=\"flex\" direction=\"column\" justifyContent=\"space-between\">\r\n        {arrayOfCards.map((card) => (\r\n            <Grid item>{card}<br/></Grid>)\r\n        )\r\n        }\r\n    </Grid>)\r\n}\r\n\r\n\r\n\r\nfunction createData(day, first, second, third, fourth, fifth) {\r\n    return { day, first, second, third, fourth, fifth };\r\n}\r\n\r\nlet rows = [];\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700\r\n    }, root: {\r\n        flexGrow: 1,\r\n    },\r\n    tableRightBorder : { borderWidth: 1, borderColor: 'rgba(128,128,128,0.2)',borderStyle: 'solid' }\r\n\r\n});\r\n\r\nexport default function CustomizedTables(props) {\r\n    const classes = useStyles();\r\n    const [selectedCourse, setSelectedCourse] = React.useState({\r\n        courseID: \"loading ID\",\r\n        courseName: \"select a course first\",\r\n        courseCode: \"select a course first\",\r\n        courseSlots: [],\r\n        courseCoverage: \"select a course first\"\r\n\r\n    })\r\n    // React.useEffect(() => {\r\n    //     mapToScheduleObj(selectedCourse.courseSlots);\r\n    //   }, [selectedCourse]);\r\n    // mapToScheduleObj(selectedCourse?.courseSlots);\r\n    console.log(\"props.allCourses\", props.allCourses);\r\n    console.log(\"props.departmentCourses\", props.departmentCourses)\r\n    mapToScheduleObj(selectedCourse?.courseSlots);\r\n                         \r\n    return (\r\n        <TableContainer component={Paper} style={{border:'1px'}}>\r\n            <Grid container\r\n                className={classes.root}\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <br/>\r\n                <Grid item >\r\n                    <b>Course name: </b>{selectedCourse.courseName}<br />\r\n                   <b>Course code: </b>{selectedCourse.courseCode}<br />\r\n                    <b>Course coverage: </b>{selectedCourse.courseCoverage}<br />\r\n\r\n\r\n                </Grid>\r\n                <br/>\r\n                <Grid item>\r\n                    <Autocomplete\r\n                        id=\"filterDepartmentCourses\"\r\n                        options={props.allCourses}\r\n\r\n                        getOptionLabel={(option) => option.name}\r\n                        style={{ width: 300 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Filter by course\" variant=\"outlined\" />}\r\n\r\n                        onChange={(event, newValue) => {\r\n                            if (newValue && newValue.ID) {\r\n                                console.log(\"all cors in props \", props.depart);\r\n                                const sc = props.departmentCourses.find((c) => {\r\n                                    return c.courseID == newValue.ID\r\n                                });\r\n                                mapToScheduleObj(sc?.courseSlots);\r\n                                setSelectedCourse(sc);\r\n                                console.log(\"selected course from list \", newValue.ID, \" selected from props\", sc)\r\n\r\n\r\n                            }\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <br/>\r\n            </Grid>\r\n\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow >\r\n                        <StyledTableCell>&nbsp;</StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>First Slot</b></StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>Second Slot</b></StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>Third Slot</b></StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>Fourth Slot</b></StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>Fifth Slot</b></StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row) => (\r\n                        <StyledTableRow key={row.name} >\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                <b>{row.day.charAt(0).toUpperCase() + row.day.slice(1)}</b>\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\" className={classes.tableRightBorder} >{row.first}</StyledTableCell>\r\n                            <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.second}</StyledTableCell>\r\n                            <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.third}</StyledTableCell>\r\n                            <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.fourth}</StyledTableCell>\r\n                            <StyledTableCell align=\"center\" >{row.fifth}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\changeDayOffRequest.js",["725","726","727","728","729","730","731","732","733","734"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport RequestForm from './requestForm.js';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function ChangeDayOffRequest(props) {\r\n    const [showForm, setShowForm] = React.useState(false);\r\n    const [reqID,setReqID]=React.useState();\r\n    const[selection,setSelection]=React.useState(\"all\");\r\n    const handleCloseForm=()=>{\r\n        setShowForm(false);\r\n    }\r\n    const handleOpenForm=(event)=>{\r\n           const requestID = event.currentTarget.id.split('_')[1];\r\n           setReqID(requestID);\r\n        setShowForm(true);\r\n    }\r\n    const handleAcceptRequest= async(event)=>{\r\n\r\n        const requestID = event.currentTarget.id.split('_')[1];\r\n       \r\n        try {\r\n            const req = {\r\n                response: 1\r\n            };\r\n        \r\n            props.updateRequests(\"change day off requests\",requestID,\"accepted\");\r\n            const res = await axios.put(`/hod/respondToChangeDayOffRequest/${requestID}`,  req);\r\n            props.openAlert(\"Response submitted successfully.\", \"success\");\r\n        } catch (err) {\r\n            props.updateRequests(\"change day off requests\",requestID,\"pending\");\r\n            \r\n            props.openAlert(err.response.data);\r\n            \r\n        }\r\n        props.setComponentInMain(\"changeDayOffRequest\");\r\n    \r\n    }\r\n\r\n    const handleRejectRequest= async(requestID,msg)=>{\r\n\r\n    \r\n        try {\r\n            const req = {\r\n                response: 0,\r\n                msg:msg\r\n            };\r\n            props.updateRequests(\"change day off requests\",requestID,\"rejected\");\r\n            const res = await axios.put(`/hod/respondToChangeDayOffRequest/${requestID}`,  req);\r\n        } catch (err) {\r\n            props.updateRequests(\"change day off requests\",requestID,\"pending\");\r\n            \r\n            props.openAlert(err.response.data);\r\n            \r\n        }\r\n        props.setComponentInMain(\"changeDayOffRequest\");\r\n    \r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Change Day Off Requests</b>\r\n                </Typography>\r\n                \r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item>\r\n                         <Autocomplete\r\n                            id=\"filterChangeDayOff\"\r\n                            options={[ \"all\" ,\"accepted\",\"rejected\",\"pending\" ]}\r\n\r\n                            getOptionLabel={(option) => option}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Filter by request status\" variant=\"outlined\" />}\r\n                           \r\n                            onChange={(event, newValue) => {\r\n                                    if (newValue ) {\r\n                                        setSelection(newValue);\r\n                                        // props.updateProfiles(\"staffMember\", { ID: newValue.ID });\r\n                                        // props.setComponentInMain(\"viewStaffProfiles\");\r\n                                        //    setShowInstructor('');\r\n\r\n                                    }\r\n                            }}\r\n                            // clearOnEscape={true}\r\n                        /> \r\n                    </Grid>\r\n                </Grid> \r\n                <br />\r\n                <Grid container spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    {\r\n\r\n                        props.requests.map(req =>\r\n                            <Grid item xs style={(req.status!=selection&&selection!=\"all\")?{display:'none'}:{}} >\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent >\r\n                                            <Box display=\"flex\" direction=\"row\" justifyContent=\"space-between\">\r\n                                            <Box>\r\n                                            <Typography variant=\"subtitle1\" paragraph>\r\n                                                <b>Sender Name:</b> {req.senderID}<br />\r\n                                                 <b>Email:</b> <a href={\"mailto:\"+req.email}>{req.email} </a><br /> \r\n                                                <b>Message:</b> {req.msg}<br />\r\n                                                <b>Requested day off :</b> {req.targetDayOff}<br />\r\n                                                 <b>Current day off:</b> {req.dayOff}<br /> \r\n                                                <b>Submission date:</b> {new Date(req.submissionDate).toLocaleDateString('en-US')}<br />\r\n                                                <b>Status:</b> {req.status}<br />\r\n                                            </Typography>\r\n                                            </Box>\r\n\r\n                                            <Box  >\r\n                                        <Tooltip title = \"Accept the request\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                 id={\"ACCEPTDAYOFFREQUEST_\" + req.ID}\r\n                                                color='primary'\r\n                                                 onClick={handleAcceptRequest}\r\n                                                 style={(req.status!=\"pending\")?{display:'none'}:{}}\r\n                                              >\r\n                                                <CheckIcon style={{color:\"green\", fontSize: 25, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n\r\n                                            <Tooltip title = \"Reject the request\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"REJECTDAYOFFREQUEST_\" + req.ID}\r\n                                                color='primary'\r\n                                                style={(req.status!=\"pending\")?{display:'none'}:{}}\r\n                                           \r\n                                                 onClick={handleOpenForm}\r\n                                            >\r\n                                                <CloseIcon style={{ color:\"#cc0000\",fontSize: 25, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n                                            </Box>\r\n                                        \r\n                                            </Box>\r\n                                        </CardContent>\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n\r\n                       )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n\r\n            <RequestForm open={showForm} handleCloseForm={handleCloseForm} requestID={reqID} handleRejectRequest={handleRejectRequest}  setComponentInMain={props.setComponentInMain} />\r\n\r\n\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\manageCourseStaff.js",["735","736","737","738","739","740","741","742","743","744","745","746","747"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport AssignCourseCoordinatorForm from './assignCourseCoordinatorForm.js'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function ManageCourseStaff(props) {\r\n    const [showInstructor, setShowInstructor] = React.useState('');\r\n    const [showCourse, setShowCourse] = React.useState('');\r\n    const [selectedCourse, setSelectedCourse] = React.useState(-1);\r\n    const [selectedCourseCordinator, setSelectedCourseCordinator] = React.useState(\"not yet assigned\")\r\n    const [selectedCourseCordinatorID, setSelectedCourseCordinatorID] = React.useState(-1)\r\n\r\n    const [openAssignCourseCoordinator, setOpenAssignCourseCoordinator] = React.useState(false);\r\n    // React.useEffect(()=>{\r\n    //    return ()=>{ setSelectedCourse(null);\r\n    //     setSelectedCourseCordinatorID(null);\r\n    //     setSelectedCourseCordinator(null);}\r\n    // },[])\r\n    const handleOpenAssignCourseCoordinator = () => {\r\n        setOpenAssignCourseCoordinator(true);\r\n\r\n    }\r\n    const handleCloseAssignCourseCoordinator = () => {\r\n        setOpenAssignCourseCoordinator(false);\r\n\r\n    }\r\n\r\n    const handleRemoveAcademicMember = async (event) => {\r\n        let currentInstructorID = event.currentTarget.id.split('_')[1];\r\n        const courseID = event.currentTarget.id.split('_')[3];\r\n        currentInstructorID = currentInstructorID.split('-')[1];\r\n        console.log(event.currentTarget.id.split('_'));\r\n        console.log(courseID, \"in handle remove\");\r\n        props.setBackdropIsOpen(true);\r\n        \r\n        try {\r\n            const req = {\r\n                \"academicMemberID\": parseInt(currentInstructorID),\r\n                \"courseID\": parseInt(courseID)\r\n            };\r\n            console.log(req);\r\n            const res = await axios.delete(`/ci/removeAcademicMemberFromCourse`, { data: req });\r\n\r\n\r\n\r\n            if (selectedCourseCordinatorID == currentInstructorID) {\r\n                setSelectedCourseCordinator(\"not yet assigned\")\r\n                setSelectedCourseCordinatorID(-1);\r\n            }\r\n\r\n            props.updateProfiles({ courseID: selectedCourse });\r\n            props.setComponentInMain(\"manageCourseStaff\");\r\n        } catch (err) {\r\n       \r\n            props.openAlert(err.response.data);\r\n        }\r\n        props.setBackdropIsOpen(false);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Manage Course Staff</b>\r\n                </Typography>\r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item>\r\n                        <Autocomplete\r\n                            id=\"filterByCourse\"\r\n                            options={props.allCourses}\r\n\r\n                            getOptionLabel={(option) => {\r\n                                if (!option) return '';\r\n                                return (option.code + \": \"+option.name)\r\n                            }}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Filter by a course\" variant=\"outlined\" />}\r\n                            // onClose={() => {\r\n                            //     setShowCourse('')\r\n                            // }}\r\n                            onChange={(event, newValue) => {\r\n\r\n                                if (newValue && newValue.ID) {\r\n                                    setSelectedCourse(newValue.ID)\r\n                                    let cordinatorName = \"not yet assigned\";\r\n\r\n                                    const mem = props.academicMembers.find((m) => {\r\n                                        return m.ID == newValue.coordinatorID;\r\n                                    })\r\n\r\n                                    if (mem)\r\n                                        cordinatorName = mem.name;\r\n\r\n                                    console.log(cordinatorName, newValue.cordinatorID);\r\n                                    setSelectedCourseCordinator(cordinatorName)\r\n                                    setSelectedCourseCordinatorID(newValue.coordinatorID)\r\n\r\n                                    props.updateProfiles({ courseID: newValue.ID });\r\n                                    props.setComponentInMain(\"manageCourseStaff\");\r\n\r\n                                }\r\n                            }}\r\n                        // value={showCourse}\r\n\r\n                        />\r\n                        <br />\r\n                        <Grid container alignItems=\"center\"  direction=\"row\" style={(selectedCourse == -1) ? { display: 'none' } : {}}>\r\n                            <Grid item>\r\n                                <Typography variant=\"subtitle1\" paragraph>\r\n                                    <b>Course Coordinator:</b> {selectedCourseCordinator}<br />\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip title=\"Assign a course coordinator\">\r\n                                    <IconButton\r\n                                        style={selectedCourseCordinator != \"not yet assigned\" ? { display: 'none' } : {}}\r\n                                        aria-label=\"account of current user\"\r\n                                        aria-haspopup=\"true\"\r\n                                        color='primary'\r\n                                        id={\"ASSIGNCOURSECOORDINATORID_\" + props.instructorID + \"_COURSEID_\" + props.courseID + \"_slotID_\" + props.slotID}\r\n                                        onClick={handleOpenAssignCourseCoordinator}\r\n                                    >\r\n                                        <EditIcon style={{ fontSize: 25, opacity: 0.8 }} />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <AssignCourseCoordinatorForm\r\n                            open={openAssignCourseCoordinator}\r\n                            handleClose={handleCloseAssignCourseCoordinator}\r\n                            courseID={selectedCourse}\r\n                            academicMembers={props.academicMembers}\r\n                            setComponentInMain={props.setComponentInMain}\r\n                            updateCourseStaff={props.updateProfiles}\r\n                            setSelectedCourseCordinator={setSelectedCourseCordinator}\r\n                            setSelectedCourseCordinatorID={setSelectedCourseCordinatorID}\r\n                            setBackdropIsOpen={props.setBackdropIsOpen}\r\n                        />\r\n\r\n\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <br />\r\n                <Grid container spacing={4} >\r\n                    {\r\n\r\n                        props.staffProfiles.map(profile =>\r\n                            <Grid item xs={12} md={4}>\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent>\r\n                                            <Typography variant=\"subtitle1\" paragraph>\r\n                                                <b>Name:</b> {profile.name}<br />\r\n                                                <b>Email:</b> <a href={\"mailto:\"+profile.email}>{profile.email} </a><br /> \r\n                                               <b>ID:</b> {profile.ID}<br />\r\n                                                <b>Office:</b> {profile.officeID}<br />\r\n                                                <b>Day off:</b> {profile.dayOff}<br />\r\n                                                <b>Department:</b> {profile.departmentID}<br />\r\n                                            </Typography>\r\n                                            <Tooltip title=\"Remove from teaching staff\">\r\n                                                <IconButton\r\n                                                    style={props.instructorID == \"\" ? { display: 'none' } : {}}\r\n                                                    aria-label=\"account of current user\"\r\n                                                    aria-haspopup=\"true\"\r\n                                                    color='primary'\r\n                                                    id={\"REMOVEACADEMICMEMBER_\" + profile.ID + \"_COURSEID_\" + selectedCourse}\r\n                                                    onClick={handleRemoveAcademicMember}\r\n                                                >\r\n                                                    <DeleteIcon style={{ fontSize: 25, opacity: 0.8 }} />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </CardContent>\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\CIViewStaffProfiles.js",["748","749","750","751","752","753","754","755","756","757","758","759"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n      },\r\n}));\r\n\r\nexport default function ViewStaffProfiles(props) {\r\n    const [showInstructor,setShowInstructor]=React.useState('');\r\n    const [showCourse,setShowCourse]=React.useState('');\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Staff Profiles</b>\r\n                </Typography>\r\n                <Grid \r\n                container \r\n                className={classes.root}\r\n                 spacing={2}\r\n                 direction=\"row\"\r\n                 justify=\"center\"\r\n                 alignItems=\"center\"\r\n                >\r\n                <Grid item>\r\n                <Autocomplete\r\n                    id=\"filterByStaff\"\r\n                    options={[{name:\"All\"},...((props.academicMembers).filter((mem)=>{\r\n                        if(!props.academicMembers)return true;\r\n                        const deptID=props.academicMembers.find((ac)=>{return ac.ID==props.hodProfile.ID}).departmentID;\r\n                        return mem.departmentID==deptID}))]}\r\n                   \r\n                    getOptionLabel={(option) => option.name}\r\n                    style={{ width: 300 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"Filter by an academic member\" variant=\"outlined\" />}\r\n                    onClose={()=>{        setShowCourse('') }}\r\n            \r\n                    onChange={(event, newValue) => {\r\n                        if(newValue&&newValue.name==\"All\"&&newValue.ID==undefined){\r\n                            props.updateProfiles();\r\n                            props.setComponentInMain(\"viewStaffProfiles\");\r\n                      //      setShowInstructor('');\r\n                            \r\n                        }else\r\n                        if(newValue&&newValue.ID){\r\n                            props.updateProfiles(\"staffMember\",{ID:newValue.ID});\r\n                          props.setComponentInMain(\"viewStaffProfiles\");\r\n                      //    setShowInstructor('');\r\n                          \r\n                        }\r\n                    }}\r\n                   // clearOnEscape={true}\r\n                    value={showInstructor}\r\n                />\r\n             </Grid>\r\n             <Grid item>\r\n               <Autocomplete\r\n                    id=\"filterByCourse\"\r\n                    options={props.allCourses.filter((cor)=>{\r\n                        return true;\r\n                    })}\r\n                   \r\n                    getOptionLabel={(option) => { \r\n                        if(!option)return '';\r\n                        return(option.name + \" \" + option.code)}}\r\n                    style={{ width: 300 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"Filter by a course\" variant=\"outlined\" />}\r\n                    onClose={()=>{        setShowCourse('')\r\n                    }}\r\n                    onChange={(event, newValue) => {\r\n                     \r\n                        if(newValue&&newValue.ID){\r\n                            props.updateProfiles(\"course\",{courseID:newValue.ID});\r\n                            props.setComponentInMain(\"viewStaffProfiles\");\r\n                  //          setShowCourse('')\r\n                            \r\n                        }\r\n                    }}\r\n\r\n                    value={showCourse}\r\n        \r\n                />\r\n                </Grid>\r\n               \r\n                </Grid>\r\n                <br/>\r\n                <Grid container spacing={4} >\r\n                    {\r\n                    \r\n                        props.staffProfiles.map(profile =>\r\n                            <Grid item xs={12} md={4}>\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent>\r\n                                            <Typography variant=\"subtitle1\" paragraph>\r\n                                                <b>Name:</b> {profile.name}<br />\r\n                                                <b>Email:</b> <a href={\"mailto:\"+profile.email}>{profile.email} </a><br /> \r\n                                                <b>ID:</b> {profile.ID}<br />\r\n                                                <b>Office:</b> {profile.officeID}<br/>\r\n                                                <b>Day off:</b> {profile.dayOff}<br/>\r\n                                                <b>Department:</b> {profile.departmentID}<br/>\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n         \r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\Alert_Message.js",["760"],"import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\n// props => open , type =>{error,warning,info,success} , msg\r\nexport default function AlertMessage(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(props.open);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    props.onClose();\r\n    setOpen(false);\r\n  };\r\n\r\n  console.log(\"here2\");\r\n  console.log(open,props.msg,props.type);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={props.open} autoHideDuration={5000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={props.type}>{props.msg}</Alert>\r\n      </Snackbar>\r\n      {/* <Alert severity=\"error\">This is an error message!</Alert>\r\n      <Alert severity=\"warning\">This is a warning message!</Alert>\r\n      <Alert severity=\"info\">This is an information message!</Alert>\r\n      <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\ac_helper.js",["761"],"import axios from \"axios\";\r\n\r\nexport const getAllSentRequests = async () => {\r\n    try {\r\n        const res = (await axios.get(\"/ac/viewAllRequests/0\")).data;\r\n        return res;\r\n    } catch (err) {\r\n        console.log(err.response.data);\r\n    }\r\n}\r\n\r\nexport const requestSchedule = async () => {\r\n    const schedule = await axios.get(\"ac/viewSchedule\");\r\n    return schedule.data;\r\n};\r\n\r\nexport const getReplacementRequests = async () => {\r\n    let res = (await axios.get('ac/viewReplacementRequests')).data;\r\n    const userID = localStorage.getItem('ID');\r\n    res = res.filter(r => r.senderID != userID && new Date(r.requestedDate).getTime() >= new Date(Date.now()).getTime());\r\n    return res;\r\n}\r\n\r\nexport const viewAllCourseSchedules = async () => {\r\n    const courseSchedules = await axios.get(\"/ac/viewAllCourseSchedules\");\r\n    return courseSchedules.data;\r\n};\r\n\r\nexport const getAllCoursesInstructorsNames = async () => {\r\n    const coursesInstructorName = await axios.get(\"/ac/getAllCoursesInstructorsNames\");\r\n    return coursesInstructorName.data;\r\n};\r\n\r\nexport const getAllMissingDays = async () => {\r\n    const missingDays = await axios.get(\"/viewMissingDays\");\r\n    return missingDays.data;\r\n};\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\ManageCourseInstructors.js",["762","763","764","765","766"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nimport AssignInstructorForm from './assignInstructorForm.js';\r\nimport DeleteInstructorForm from './deleteInstructorForm.js';\r\nimport UpdateInstructorForm from './updateInstructorForm.js';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n}));\r\n\r\nexport default function CourseInstructor_Card(props) {\r\n\r\n    const [openAddCourseInstructor, setAddCourseInstructor] = React.useState(false);\r\n    const [currentCourse, setCurrentCourse] = React.useState();\r\n    const [openDeleteCourseInstructor, setOpenDeleteCourseInstructor] = React.useState(false);\r\n    const [openUpdateCourseInstructor, setOpenUpdateCourseInstructor] = React.useState(false);\r\n\r\n\r\n    \r\n    const handleCloseAddCourseInstructor = () => {\r\n        setAddCourseInstructor(false);\r\n    }\r\n\r\n    const handleCloseDeleteCourseInstructor = () => {\r\n        setOpenDeleteCourseInstructor(false);\r\n    }\r\n\r\n    const handleCloseUpdateCourseInstructor = ()=>{\r\n        setOpenUpdateCourseInstructor(false);\r\n    }\r\n    \r\n    const handleDeleteCourseInstructor = async (event) => {\r\n        const courseID = event.currentTarget.id.split('_')[1];\r\n        const course = props.courses.filter(l => l.ID == courseID);\r\n        setCurrentCourse(course[0]);\r\n        setOpenDeleteCourseInstructor(true);\r\n    }\r\n\r\n    const handleOpenAddCourseInstructor = async (event) => {\r\n        const courseID = event.currentTarget.id.split('_')[1];\r\n        const course = props.courses.filter(l => l.ID == courseID);\r\n        setCurrentCourse(course[0]);\r\n        setAddCourseInstructor(true);\r\n    }\r\n\r\n    const handleOpenUpdateCourseInstructor = async(event)=>{\r\n        const courseID = event.currentTarget.id.split('_')[1];\r\n        const course = props.courses.filter(l => l.ID == courseID);\r\n        setCurrentCourse(course[0]);\r\n        setOpenUpdateCourseInstructor(true);\r\n    }\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Courses</b>\r\n                </Typography>\r\n\r\n                <Grid container spacing={4} >\r\n                    {\r\n                        props.courses.map(course =>\r\n                            <Grid item xs={12} md={4}>\r\n                                    <Card className={classes.card}>\r\n                                        <div className={classes.cardDetails}>\r\n                                            <CardContent>\r\n                                                <Typography variant=\"subtitle1\" paragraph>\r\n                                                    <b>Name:</b> {course.name}<br />\r\n                                                    <b>Code:</b> {course.code}<br />\r\n                                                    <b>Instructors:</b><br/> \r\n                                                    {course.instructor.map((inst=>{\r\n                                                        return (<div> <b>Name:</b> {inst.name} <span style={{textAlign :\"right\"}}><b>ID:</b> {\"ac-\"+inst.ID}</span></div>);\r\n                                                    }))}<br/>                                               \r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                            <Tooltip title = \"Delete instructor from course\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"DELETECOURSEINSTRUCTOR_\" + course.ID}\r\n                                                color='primary'\r\n                                                onClick={handleDeleteCourseInstructor}\r\n                                            >\r\n                                                <DeleteIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n                                            <Tooltip title = \"Update course instructor\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"UPDATECOURSEINSTRUCTOR_\" + course.ID}\r\n                                                color='primary'\r\n                                                onClick={handleOpenUpdateCourseInstructor}\r\n                                            >\r\n                                                <EditIcon style={{ fontSize: 30, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n\r\n                                            <Tooltip title=\"Add course instructor\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                color='primary'\r\n                                                id={\"ADDCOURSEINSTRUCTOR_\" + course.ID}       \r\n                                                onClick={handleOpenAddCourseInstructor}\r\n                                            >\r\n                                            <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }}                                                                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                    </Card>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n            <AssignInstructorForm\r\n                open={openAddCourseInstructor}\r\n                //handleOpenEdit={handleOpenEdit}\r\n                handleClose={handleCloseAddCourseInstructor}\r\n                course={currentCourse}\r\n                academicMembers = {props.academicMembers}\r\n                setComponentInMain={props.setComponentInMain}\r\n                openAlert={props.openAlert}\r\n                setBackdropIsOpen={props.setBackdropIsOpen}\r\n                />\r\n\r\n            <DeleteInstructorForm\r\n            open={openDeleteCourseInstructor}\r\n            //handleOpenEdit={handleOpenEdit}\r\n            handleClose={handleCloseDeleteCourseInstructor}\r\n            course={currentCourse}\r\n            academicMembers = {props.academicMembers}\r\n            setComponentInMain={props.setComponentInMain}\r\n            openAlert={props.openAlert}\r\n            \r\n            setBackdropIsOpen={props.setBackdropIsOpen}\r\n             \r\n           />\r\n\r\n            <UpdateInstructorForm\r\n            open={openUpdateCourseInstructor}\r\n            //handleOpenEdit={handleOpenEdit}\r\n            handleClose={handleCloseUpdateCourseInstructor}\r\n            course={currentCourse}\r\n            allCourses = {props.courses}\r\n            academicMembers = {props.academicMembers}\r\n            setComponentInMain={props.setComponentInMain}\r\n            openAlert={props.openAlert}\r\n            \r\n            setBackdropIsOpen={props.setBackdropIsOpen}\r\n             \r\n           />\r\n\r\n\r\n\r\n        </div >\r\n    );\r\n\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\Attendance.js",["767","768","769","770","771","772","773","774","775","776","777","778","779","780"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport DropdownList_Attendance from './DropdownList_Attendance';\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'AttendanceStatus', numeric: true, disablePadding: true, label: 'Status' },\r\n  { id: 'AttendanceSignin', numeric: true, disablePadding: true, label: 'Sign in' },\r\n  { id: 'AttendanceSignout', numeric: true, disablePadding: true, label: 'Sign out' },\r\n ];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    \r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={'center'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <b style={{fontSize:20}}>{headCell.label}</b>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h5\" id=\"tableTitle\" component=\"div\">\r\n          Attendance Records\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n\r\n        <Tooltip title=\"Filter list\">\r\n            <DropdownList_Attendance handleFilter={props.handleFilter}/>\r\n\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\nexport default function EnhancedTable(props) {\r\n    \r\nconst [rows,setRows]=React.useState(props.attendanceRecords);\r\nconst allRows=props.attendanceRecords;\r\nconst handleFilter=(month)=>{\r\n     if(month==\"\")return;\r\n    if(isNaN(month)||month==\"all\")setRows(allRows);\r\n    else\r\n    setRows(allRows.filter((r)=>{\r\n        return new Date(r.signin).getMonth()==(parseInt(month)-1);\r\n    }))\r\n}\r\n//const rows=allRows;\r\nconst classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('AttendanceSignin');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} handleFilter={handleFilter}/>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell align=\"center\">{row.status}</TableCell>\r\n                       <TableCell align=\"center\">{row.signin}</TableCell>\r\n                      <TableCell align=\"center\">{row.signout}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n                \r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      \r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\CICourses.js",["781","782","783","784","785","786","787","788","789","790","791","792","793","794","795"],"import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React from \"react\";\r\nimport DepartmentCoursesCard from \"../hod/departmentCoursesCard.js\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CICoursesCard from './CICoursesCard';\r\nimport AssignAcademicMemberForm from './assignAcademicMemberForm';\r\nimport UpdateInstructorForm from './updateAcademicMemberForm';\r\nimport axios from 'axios';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.common.black\r\n    },\r\n    body: {\r\n        \"&:first-child \": {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        fontSize: 14\r\n    }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        \"&:nth-of-type(odd)\": {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    }\r\n}))(TableRow);\r\n\r\nconst makeCard = (arrayOfCards) => {\r\n    if (!arrayOfCards) return (<Box></Box>)\r\n    return (<Grid container display=\"flex\" direction=\"column\" justifyContent=\"space-between\">\r\n        {arrayOfCards.map((card) => (\r\n            <Grid item>{card}<br/></Grid>)\r\n        )\r\n        }\r\n    </Grid>)\r\n}\r\n\r\n\r\n\r\nfunction createData(day, first, second, third, fourth, fifth) {\r\n    return { day, first, second, third, fourth, fifth };\r\n}\r\n\r\nlet rows = [];\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700\r\n    }, root: {\r\n        flexGrow: 1,\r\n    },\r\n    tableRightBorder : { borderWidth: 1, borderColor: 'rgba(128,128,128,0.2)',borderStyle: 'solid' }\r\n\r\n});\r\nlet scheduleObj = {\r\n    'saturday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'sunday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'monday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'tuesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'wednesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'thurseday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'friday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n}\r\nexport default function CustomizedTables(props) {\r\n    const classes = useStyles();\r\n    const [selectedCourse, setSelectedCourse] = React.useState({\r\n        courseID: \"loading ID\",\r\n        courseName: \"select a course first\",\r\n        courseCode: \"select a course first\",\r\n        courseSlots: [],\r\n        courseCoverage: \"select a course first\"\r\n\r\n    })\r\n    \r\n    const [openAssignAcademicMemberForm, setOpenAssignAcademicMemberForm] = React.useState(false);\r\n    const [openDeleteAcademicMemberForm, setOpenDeleteAcademicMemberForm] = React.useState(false);\r\n   \r\n    const [openUpdateAcademicMemberForm, setOpenUpdateAcademicMemberForm] = React.useState(false);\r\n    const [currentSlot, setCurrentSlot] = React.useState();\r\n    const [currentCourse, setCurrentCourse] = React.useState();\r\n    const [ currentInstructorID ,  setCurrentInstructorID  ] = React.useState();\r\n    \r\n    \r\n\r\n    const [openDeleteCourseInstructor, setOpenDeleteCourseInstructor] = React.useState(false);\r\n    const [openUpdateCourseInstructor, setOpenUpdateCourseInstructor] = React.useState(false);\r\n    const [selectedCourseID,setSelectedCourseID]=React.useState(-1);\r\n    const [rows,setRows]=React.useState([])\r\n\r\n    const mapToScheduleObj=(courseSchedule, setCurrentSlot, setCurrentCourse, setOpenAssignAcademicMemberForm,\r\n        setCurrentInstructorID, setOpenUpdateAcademicMemberForm,handleDeleteAssignMemberToSlot,openAlert)=> {\r\n        scheduleObj = {\r\n            'saturday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n            'sunday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n            'monday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n            'tuesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n            'wednesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n            'thurseday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n            'friday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        }\r\n        console.log(\"course schedule \", courseSchedule);\r\n        if (!courseSchedule || !scheduleObj) return;\r\n        let newRows = [];\r\n        for (const entry of courseSchedule) {\r\n            console.log(entry ,\"in entry\")\r\n            scheduleObj[entry.day][entry.slotNumber - 1].push(\r\n                <CICoursesCard\r\n                    instructorName={entry.instructor}\r\n                    instructorID={entry.instructorID}\r\n                    locationName={entry.locationName}\r\n                    slotID = {entry.slotID}\r\n                    courseID = {entry.courseID}\r\n                    setCurrentSlot = {setCurrentSlot}\r\n                    setCurrentCourse = {setCurrentCourse}\r\n                    setCurrentInstructorID={setCurrentInstructorID}\r\n                    setOpenAssignAcademicMemberForm = {setOpenAssignAcademicMemberForm}\r\n                    setOpenUpdateAcademicMemberForm = {setOpenUpdateAcademicMemberForm}\r\n                    handleDeleteAssignMemberToSlot={handleDeleteAssignMemberToSlot}\r\n                    openAlert={openAlert}\r\n                  \r\n                />\r\n            )\r\n        }\r\n    \r\n        for (const entry in scheduleObj) {\r\n            // rows.push(createData(entry, scheduleObj[entry][0], scheduleObj[entry][1],\r\n            //     scheduleObj[entry][2], scheduleObj[entry][3], scheduleObj[entry][4],\r\n            //     scheduleObj[entry][5], scheduleObj[entry][6]));\r\n            // console.log(entry,scheduleObj[entry][0],entry[2],entry[3]);\r\n            newRows.push(createData(entry, makeCard(scheduleObj[entry][0]), makeCard(scheduleObj[entry][1]),\r\n                makeCard(scheduleObj[entry][2]), makeCard(scheduleObj[entry][3]), makeCard(scheduleObj[entry][4]),\r\n                makeCard(scheduleObj[entry][5]), makeCard(scheduleObj[entry][6])));\r\n    \r\n        }\r\n        setRows(newRows)\r\n    }\r\n    \r\n\r\n    const handleDeleteAssignMemberToSlot=async (slotID,courseID,currentInstructorID)=>{\r\n        props.setBackdropIsOpen(true);\r\n        try {\r\n            \r\n            const req = {\r\n                \"slotID\":parseInt(slotID),\r\n                \"courseID\":parseInt(courseID),\r\n                \"academicMemberID\":parseInt(currentInstructorID.split(\"-\")[1])\r\n            };\r\n            console.log(req);\r\n            const res = await axios.delete(`/ci/removeAcademicMemberToSlot`, {data: req});\r\n             const departmentCourses=await props.updateDepartmentCourses();\r\n\r\n            if(selectedCourse.courseID!=\"loading ID\"){\r\n                const sc = departmentCourses.find((c) => {\r\n                    return c.courseID == selectedCourseID\r\n                });\r\n                mapToScheduleObj(sc?.courseSlots, setCurrentSlot, setCurrentCourse, \r\n                    setOpenAssignAcademicMemberForm,setCurrentInstructorID,setOpenUpdateAcademicMemberForm,\r\n                    handleDeleteAssignMemberToSlot,props.openAlert)\r\n                    setSelectedCourse(sc);\r\n            }else{\r\n                console.log(\"initially\")\r\n            }\r\n\r\n\r\n        \r\n            props.setComponentInMain(\"instructorCourses\");\r\n        } catch (err) {\r\n        props.openAlert(err.response.data);\r\n        }\r\n        props.setBackdropIsOpen(false);\r\n        \r\n     \r\n    }\r\n    const handleCloseAssignMemberToSlot = ()=>{\r\n        setOpenAssignAcademicMemberForm(false);\r\n\r\n    }\r\n    const handleCloseUpdateMemberToSlot = ()=>{\r\n        setOpenUpdateAcademicMemberForm(false);\r\n\r\n    }\r\n    const handleCloseDeleteMemberToSlot = ()=>{\r\n        setOpenDeleteAcademicMemberForm(false);\r\n\r\n    }\r\n    return (\r\n        <TableContainer component={Paper} style={{border:'1px'}}>\r\n            <Grid container\r\n                className={classes.root}\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n\r\n            >\r\n                <br/>\r\n                <Grid item >\r\n                    <b>Course name: </b>{selectedCourse.courseName}<br />\r\n                   <b>Course code: </b>{selectedCourse.courseCode}<br />\r\n                    <b>Course coverage: </b>{selectedCourse.courseCoverage}<br />\r\n\r\n\r\n                </Grid>\r\n                <br/>\r\n                <Grid item>\r\n                    <Autocomplete\r\n                        id=\"filterDepartmentCourses\"\r\n                        options={props.allCourses}\r\n                        getOptionLabel={(option) => option.code +\": \"+option.name}\r\n                        style={{ width: 300 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Filter by course\" variant=\"outlined\" />}\r\n\r\n                        onChange={(event, newValue) => {\r\n                            if (newValue && newValue.ID) {\r\n                                console.log(\"all cors in props \", props.depart);\r\n                                const sc = props.departmentCourses.find((c) => {\r\n                                    return c.courseID == newValue.ID\r\n                                });\r\n                                mapToScheduleObj(sc?.courseSlots, setCurrentSlot, setCurrentCourse, setOpenAssignAcademicMemberForm,setCurrentInstructorID, setOpenUpdateAcademicMemberForm,\r\n                                    handleDeleteAssignMemberToSlot,props.openAlert);\r\n                                console.log(\"in onChange \",sc.courseID)\r\n                                setSelectedCourse(sc);\r\n                                setSelectedCourseID(sc?.courseID);\r\n                                console.log(\"selected course from list \", newValue.ID, \" selected from props\", sc)\r\n\r\n\r\n                            }\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <br/>\r\n            </Grid>\r\n\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow >\r\n                        <StyledTableCell>&nbsp;</StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>First Slot</b></StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>Second Slot</b></StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>Third Slot</b></StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>Fourth Slot</b></StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>Fifth Slot</b></StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row) => (\r\n                        <StyledTableRow key={row.name} >\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                <b>{row.day.charAt(0).toUpperCase() + row.day.slice(1)}</b>\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\" className={classes.tableRightBorder} >{row.first}</StyledTableCell>\r\n                            <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.second}</StyledTableCell>\r\n                            <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.third}</StyledTableCell>\r\n                            <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.fourth}</StyledTableCell>\r\n                            <StyledTableCell align=\"center\" >{row.fifth}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n            <AssignAcademicMemberForm\r\n                open={openAssignAcademicMemberForm}\r\n                handleClose={handleCloseAssignMemberToSlot}\r\n                courseID={currentCourse}\r\n                slotID={currentSlot}\r\n                academicMembers = {props.academicMembers}\r\n                setComponentInMain={props.setComponentInMain}\r\n                updateDepartmentCourses={props.updateDepartmentCourses}\r\n                selectedCourse = {selectedCourse}  \r\n                selectedCourseID = {selectedCourseID}\r\n                departmentCourses = {props.departmentCourses}  \r\n                mapToScheduleObj = {mapToScheduleObj}\r\n                setSelectedCourse = {setSelectedCourse}  \r\n                setCurrentSlot = {setCurrentSlot}\r\n                setCurrentCourse={setCurrentCourse}\r\n                setCurrentInstructorID={setCurrentInstructorID}\r\n                setOpenAssignAcademicMemberForm={setOpenAssignAcademicMemberForm}\r\n                setOpenUpdateAcademicMemberForm={setOpenUpdateAcademicMemberForm}\r\n                handleDeleteAssignMemberToSlot={handleDeleteAssignMemberToSlot}\r\n                openAlert={props.openAlert}\r\n                setBackdropIsOpen={props.setBackdropIsOpen}\r\n        \r\n\r\n          />\r\n\r\n           <  UpdateInstructorForm\r\n          \r\n                open={openUpdateAcademicMemberForm}\r\n                handleClose={handleCloseUpdateMemberToSlot}\r\n                courseID={currentCourse}\r\n                slotID={currentSlot}\r\n                instructorID={currentInstructorID}\r\n                academicMembers = {props.academicMembers}\r\n                setComponentInMain={props.setComponentInMain}\r\n                updateDepartmentCourses={props.updateDepartmentCourses}\r\n                selectedCourse = {selectedCourse}  \r\n                selectedCourseID = {selectedCourseID}\r\n                departmentCourses = {props.departmentCourses}  \r\n                mapToScheduleObj = {mapToScheduleObj}\r\n                setSelectedCourse = {setSelectedCourse}  \r\n                setCurrentSlot = {setCurrentSlot}\r\n                setCurrentCourse={setCurrentCourse}\r\n                setCurrentInstructorID={setCurrentInstructorID}\r\n                setOpenAssignAcademicMemberForm={setOpenAssignAcademicMemberForm}\r\n                setOpenUpdateAcademicMemberForm={setOpenUpdateAcademicMemberForm}\r\n                handleDeleteAssignMemberToSlot={handleDeleteAssignMemberToSlot}\r\n                openAlert={props.openAlert}\r\n                setBackdropIsOpen={props.setBackdropIsOpen}\r\n        \r\n              />\r\n              \r\n              \r\n       \r\n        </TableContainer>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\actions\\setAuthToken.js",[],"C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\Profile.js",["796","797","798","799","800","801"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport React from 'react';\r\nimport EditProfileForm from './editProfileForm';\r\nimport AddExtraInfoForm from './addExtraInfoForm';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport axios from 'axios';\r\nimport AlertMessage from './Alert_Message.js';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Collapse } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainFeaturedPost: {\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.grey[800],\r\n    color: theme.palette.common.white,\r\n    marginBottom: theme.spacing(4),\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n    backgroundColor: 'rgba(0,0,0,.3)',\r\n  },\r\n  mainFeaturedPostContent: {\r\n    position: 'relative',\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(1),\r\n      paddingTop: theme.spacing(3),\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n  },\r\n  cardDetails: {\r\n    flex: 1,\r\n    textAlign: 'left',\r\n\r\n  },\r\n  cardMedia: {\r\n    width: 160,\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n},\r\n}));\r\n\r\nexport default function MainFeaturedPost(props) {\r\n  const [openEdit, setOpenEdit] = React.useState(false);\r\n  const [openExtraInfo, setOpenExtraInfo] = React.useState(false);\r\n  const [backdropIsOpen, setBackdropIsOpen] = React.useState(false);\r\n\r\n  const handleOpenEdit = (event) => {\r\n    setOpenEdit(true);\r\n  }\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n  }\r\n\r\n  const handleOpenAddExtraInfo = () => {\r\n    setOpenExtraInfo(true);\r\n  }\r\n  const handleCloseExtraInfo = () => {\r\n    setOpenExtraInfo(false);\r\n  }\r\n\r\n  const handleDeleteExtraInfo = async (event) => {\r\n    setBackdropIsOpen(true);\r\n    const newInfo = props.profile.extraInfo.filter((info, idx) => {\r\n      return idx != event.currentTarget.id;\r\n    })\r\n\r\n    const req = { extraInfo: newInfo };\r\n    try{\r\n      const res = await axios.post('updateMyProfile', req);\r\n      props.setComponentInMain(\"profile\");\r\n      props.openAlert(res.data,\"success\");\r\n    }catch(err){\r\n      props.openAlert(err.response.data);\r\n    }\r\n    setBackdropIsOpen(false);\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"lg\">\r\n\r\n        <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n          {/* Increase the priority of the hero background image */}\r\n          {<img style={{ display: 'none' }} />}\r\n          <div className={classes.overlay} />\r\n          <Grid container  style = {{textAlign: 'left', padding: \"25px\"}}>  \r\n            <Grid item md={6}>\r\n              <div className={classes.mainFeaturedPostContent}>\r\n                <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\r\n                  {props.profile.name}\r\n                </Typography>\r\n                <Typography variant=\"h5\" color=\"inherit\" paragraph>\r\n                  ID: {(props.profile.type == 1 ? 'hr-' : 'ac-') + props.profile.ID}\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"inherit\" paragraph>\r\n                  Office Number: {props.profile.officeID}\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"inherit\" paragraph>\r\n                  Email: {props.profile.email}\r\n                </Typography>\r\n                <Link variant=\"subtitle1\" href=\"#\">\r\n                </Link>\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item md={6} style={{ textAlign: 'right' }}>\r\n              <IconButton\r\n                // edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                //   aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                id='profile'\r\n                // onClick={this.handleViewProfile}\r\n                color='primary'\r\n                //style={{color:'black'}}\r\n                onClick={handleOpenEdit}\r\n              >\r\n                <EditIcon style={{ fontSize: 30, opacity: 1 }}\r\n                />\r\n              </IconButton>\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </Paper>\r\n        <Grid container spacing={4} >\r\n          <Grid item xs={12} md={6}>\r\n              <Card className={classes.card}>\r\n                <div className={classes.cardDetails}>\r\n                  <CardContent >\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                      <b>Gender:</b> {props.profile.gender}<br />\r\n                      <b>Day off:</b> {props.profile.dayOff}<br />\r\n                      <b>Salary:</b> {props.profile.salary}<br />\r\n                      <b>Annual Balance:</b> {props.profile.annualBalance}<br />\r\n                      <b>Accidental Leave Balance:</b> {props.profile.accidentalLeaveBalance}<br />\r\n                      <Collapse in ={localStorage.getItem(\"type\") != 1}>\r\n                      <b>Department: </b>{props.profile.department}<br />\r\n                      </Collapse>\r\n                    </Typography>                    \r\n                  </CardContent>\r\n                </div>\r\n                <Hidden xsDown>\r\n                  <CardMedia className={classes.cardMedia} title={\"SARAH\"} />\r\n                </Hidden>\r\n              </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            {/* <CardActionArea component=\"a\" href=\"#\" disabled={false}> */}\r\n            <Card className={classes.card}>\r\n              <div className={classes.cardDetails}>\r\n                <CardContent>\r\n                  <Typography  variant=\"subtitle1\" paragraph>\r\n                    <b>Extra Information:</b>\r\n\r\n                    <IconButton\r\n                      aria-label=\"account of current user\"\r\n                      aria-haspopup=\"true\"\r\n                      color='primary'\r\n\r\n                      onClick={handleOpenAddExtraInfo}\r\n                    >\r\n                      <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                      />\r\n                    </IconButton>\r\n                    <br />\r\n                    {props.profile.extraInfo.map((i, idx) => {\r\n                      return (\r\n                        <div>\r\n                          {i}\r\n                          <IconButton\r\n                            disabled={false}\r\n                            aria-label=\"account of current user\"\r\n                            aria-haspopup=\"true\"\r\n                            id={\"\" + idx}\r\n                            color='primary'\r\n                            onClick={handleDeleteExtraInfo}\r\n                          >\r\n                            <DeleteIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                            />\r\n                          </IconButton>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </Typography>\r\n                </CardContent>\r\n              </div>\r\n              <Hidden xsDown>\r\n                <CardMedia className={classes.cardMedia} title={\"SARAH\"} />\r\n              </Hidden>\r\n            </Card>\r\n            {/* </CardActionArea> */}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <AddExtraInfoForm open={openExtraInfo} openAlert={props.openAlert} handleOpenEdit={handleOpenAddExtraInfo} handleCloseEdit={handleCloseExtraInfo} profile={props.profile} setComponentInMain={props.setComponentInMain} />\r\n      <EditProfileForm open={openEdit} openAlert={props.openAlert} handleOpenEdit={handleOpenEdit} handleCloseEdit={handleCloseEdit} profile={props.profile} setComponentInMain={props.setComponentInMain} />\r\n      <Backdrop className={classes.backdrop} open={backdropIsOpen}\r\n        style={{ zIndex: 600000000 }}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div >\r\n  );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Course_Handler\\Course_Card.js",["802","803","804","805","806","807","808"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport AddCourseForm from './Add_Course_Form';\r\nimport EditCourseForm from './Edit_Course_Form';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n}));\r\n\r\nexport default function Course_Card(props) {\r\n    const [openEdit, setOpenEdit] = React.useState(false);\r\n\r\n    const [openUpdateCourse, setOpenUpdateCourse] = React.useState(false);\r\n    const [openAddCourse, setOpenAddCourse] = React.useState(false);\r\n    \r\n    const [updatedCourse, setUpdatedCourse] = React.useState({});\r\n\r\n    const handleOpenEdit = (event) => {\r\n        setOpenUpdateCourse(true);\r\n    }\r\n    const handleCloseEdit = () => {\r\n        setOpenUpdateCourse(false);\r\n    }\r\n\r\n    const handleOpenAdd = () => {\r\n        setOpenAddCourse(true);\r\n    }\r\n\r\n    const handleCloseAdd = () => {\r\n        setOpenAddCourse(false);\r\n    }\r\n\r\n    const handleDeleteCourse = async (event) => {\r\n        const res = await axios.delete(`/hr/deleteCourse/${event.currentTarget.id.split('_')[1]}`);\r\n        props.setComponentInMain(\"course\");\r\n        props.openAlert(\"Course Deleted SUccessfully!\" , \"success\");\r\n    }\r\n\r\n    const handleUpdateCourse = async (event) => {\r\n        const CourseID = event.currentTarget.id.split('_')[1];\r\n        const Course = props.courses.filter(l => l.ID == CourseID);\r\n        console.log(Course[0]);\r\n        setUpdatedCourse(Course[0]);\r\n        setOpenUpdateCourse(true);\r\n    }\r\n\r\n    const getDepartmentName =  (ID) =>{\r\n        const dep  = props.departments.filter(elm => elm.ID == ID);\r\n        return dep.length > 0 ? dep[0].name : undefined ;\r\n    }\r\n\r\n    const getMemberName = (ID) =>{\r\n        const member = props.academicMembers.filter(elm => elm.ID == ID);\r\n        console.log(member);\r\n        return member.length > 0 ? member[0].name : undefined;\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Courses</b>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-haspopup=\"true\"\r\n                        color='primary'\r\n                        onClick={handleOpenAdd}\r\n                    >\r\n                        <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                        />\r\n                    </IconButton>\r\n                </Typography>\r\n\r\n                <Grid container spacing={4} >\r\n                    {\r\n                        props.courses.map(course =>\r\n                            <Grid item xs={12}>\r\n                                <CardActionArea component=\"a\" disabled={false}>\r\n                                    <Card className={classes.card}>\r\n                                        <div className={classes.cardDetails}>\r\n                                            <CardContent>\r\n                                                <Typography variant=\"subtitle1\" paragraph>\r\n                                                    <b>Name:</b> {course.name}<br />\r\n                                                    <b>Code:</b> {course.code}<br />\r\n                                                    <b>Course Coordinator:</b> {getMemberName(course.coordinatorID)}<br />\r\n                                                    <b>Departments:</b> <br/> {\r\n                                                        course.department.map(m =>\r\n                                                            <Chip key={m} label={getDepartmentName(m)} className={classes.chip} />\r\n                                                        )\r\n                                                    }<br />\r\n                                                    <b>Instructors:</b> <br/> {\r\n                                                        course.instructor.map(m =>\r\n                                                            <Chip key={m} label={getMemberName(m)} className={classes.chip} />\r\n                                                        )\r\n                                                    }<br />\r\n                                                    <b>Teaching Staff:</b> <br/> {\r\n                                                        course.teachingStaff.map(m =>\r\n                                                            <Chip key={m} label={getMemberName(m)} className={classes.chip} />\r\n                                                        )\r\n                                                    }<br />\r\n                                                    <b>Description:</b> {course.description}<br />\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"DELETE_\" + course.ID}\r\n                                                color='primary'\r\n                                                onClick={handleDeleteCourse}\r\n                                            >\r\n                                                <DeleteIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"UPDATE_\" + course.ID}\r\n                                                color='primary'\r\n                                                onClick={handleUpdateCourse}\r\n                                            >\r\n                                                <EditIcon style={{ fontSize: 30, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </Card>\r\n                                </CardActionArea>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n            <EditCourseForm\r\n                open={openUpdateCourse}\r\n                handleCloseEdit={handleCloseEdit}\r\n                course = {updatedCourse}\r\n                departments = {props.departments}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain={props.setComponentInMain} />\r\n            <AddCourseForm\r\n                open={openAddCourse}\r\n                handleCloseAdd={handleCloseAdd}\r\n                departments = {props.departments}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain={props.setComponentInMain} />\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Faculty_Handler\\Faculty_Card.js",["809","810","811","812"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport AddFacultyForm from './Add_Faculty_Form';\r\nimport EditFacultyForm from './Edit_Faculty_Form';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n}));\r\n\r\nexport default function Faculty_Card(props) {\r\n    const [openEdit, setOpenEdit] = React.useState(false);\r\n\r\n    const [openUpdateFaculty, setOpenUpdateFaculty] = React.useState(false);\r\n    const [updatedFaculty, setUpdatedFaculty] = React.useState({});\r\n    const [openAddFaculty, setOpenAddFaculty] = React.useState(false);\r\n\r\n\r\n    const handleOpenEdit = (event) => {\r\n        setOpenUpdateFaculty(true);\r\n    }\r\n    const handleCloseEdit = () => {\r\n        setOpenUpdateFaculty(false);\r\n    }\r\n\r\n    const handleOpenAdd = () => {\r\n        setOpenAddFaculty(true);\r\n    }\r\n\r\n    const handleCloseAdd = () => {\r\n        setOpenAddFaculty(false);\r\n    }\r\n\r\n\r\n    const handleDeleteFaculty = async (event) => {\r\n        const deletedName = event.currentTarget.id.split('_')[1];\r\n        const res = await axios.delete(`/hr/deleteFaculty/${deletedName}`);\r\n       // props.handleFaculties({name : deletedName },2);\r\n        props.setComponentInMain(\"faculty\");\r\n        props.openAlert(\"Faculty deleted Successfully!\" , \"success\");\r\n    }\r\n\r\n    const handleUpdateFaculty = async (event) => {\r\n        const facultyName = event.currentTarget.id.split('_')[1];\r\n        const faculty = props.faculties.filter(l => l.name == facultyName);\r\n        setUpdatedFaculty(faculty[0]);\r\n        setOpenUpdateFaculty(true);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    console.log(props.faculties);\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Faculties</b>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-haspopup=\"true\"\r\n                        color='primary'\r\n                        onClick={handleOpenAdd}\r\n                    >\r\n                        <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                        />\r\n                    </IconButton>\r\n                </Typography>\r\n\r\n                <Grid container spacing={4} >\r\n                    {\r\n                        props.faculties.map(faculty =>\r\n                            <Grid item xs={12} md={4}>\r\n                                <CardActionArea component=\"a\" href=\"#\" disabled={false}>\r\n                                    <Card className={classes.card}>\r\n                                        <div className={classes.cardDetails}>\r\n                                            <CardContent>\r\n                                                <Typography variant=\"subtitle1\" paragraph>\r\n                                                    <b>Name:</b> {faculty.name}<br />\r\n                                                    <b>Departments:</b> {\r\n                                                        faculty.departments?.map(d =>\r\n                                                            <Chip key={d.ID} label={d.name} className={classes.chip} />\r\n                                                        )\r\n                                                    }<br />\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"DELETE_\" + faculty.name}\r\n                                                color='primary'\r\n                                                onClick={handleDeleteFaculty}\r\n                                            >\r\n                                                <DeleteIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"UPDATE_\" + faculty.name}\r\n                                                color='primary'\r\n                                                onClick={handleUpdateFaculty}\r\n                                            >\r\n                                                <EditIcon style={{ fontSize: 30, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </Card>\r\n                                </CardActionArea>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n            <EditFacultyForm\r\n                open={openUpdateFaculty}\r\n                handleOpenEdit={handleOpenEdit}\r\n                handleCloseEdit={handleCloseEdit}\r\n                faculty={updatedFaculty}\r\n                departments={props.departments}\r\n                handleFaculties = {props.handleFaculties}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain={props.setComponentInMain} />\r\n            <AddFacultyForm\r\n                open={openAddFaculty}\r\n                handleOpenAdd={handleOpenAdd}\r\n                handleCloseAdd={handleCloseAdd}\r\n                departments = {props.departments}\r\n                handleFaculties = {props.handleFaculties}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain={props.setComponentInMain} />\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Department_Handler\\Department_Card.js",["813","814","815","816","817","818","819"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport AddDepartmentForm from './Add_Department_Form';\r\nimport EditDepartmentForm from './Edit_Department_Form';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n}));\r\n\r\nexport default function Department_Card(props) {\r\n    const [openEdit, setOpenEdit] = React.useState(false);\r\n\r\n    const [openUpdateDepartment, setOpenUpdateDepartment] = React.useState(false);\r\n    const [openAddDepartment, setOpenAddDepartment] = React.useState(false);\r\n    \r\n    const [updatedDepartment, setUpdatedDepartment] = React.useState({});\r\n\r\n    const handleOpenEdit = (event) => {\r\n        setOpenUpdateDepartment(true);\r\n    }\r\n    const handleCloseEdit = () => {\r\n        setOpenUpdateDepartment(false);\r\n    }\r\n\r\n    const handleOpenAdd = () => {\r\n        setOpenAddDepartment(true);\r\n    }\r\n\r\n    const handleCloseAdd = () => {\r\n        setOpenAddDepartment(false);\r\n    }\r\n\r\n    const handleDeleteDepartment = async (event) => {\r\n        const res = await axios.delete(`/hr/deleteDepartment/${event.currentTarget.id.split('_')[1]}`);\r\n        props.setComponentInMain(\"department\");\r\n        props.openAlert(\"Department deleted Successfully!\" , \"success\");\r\n    }\r\n\r\n    const handleUpdateDepartment = async (event) => {\r\n        const departmentID = event.currentTarget.id.split('_')[1];\r\n        const department = props.departments.filter(l => l.ID == departmentID);\r\n        setUpdatedDepartment(department[0]);\r\n        setOpenUpdateDepartment(true);\r\n    }\r\n\r\n    const getHODName = (department , memberNames) =>{\r\n        console.log(memberNames);\r\n        if(department.hodID == null) return undefined;\r\n        const hod = memberNames.filter(elm => elm.ID == department.hodID );\r\n        if( hod.length == 1)\r\n            return hod[0].name;\r\n        else\r\n            return undefined;\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Departments</b>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-haspopup=\"true\"\r\n                        color='primary'\r\n                        onClick={handleOpenAdd}\r\n                    >\r\n                        <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                        />\r\n                    </IconButton>\r\n                </Typography>\r\n\r\n                <Grid container spacing={4} >\r\n                    {\r\n                        props.departments.map(department =>\r\n                            <Grid item xs={12} md={4}>\r\n                                <CardActionArea component=\"a\" disabled={false}>\r\n                                    <Card className={classes.card}>\r\n                                        <div className={classes.cardDetails}>\r\n                                            <CardContent>\r\n                                                <Typography variant=\"subtitle1\" paragraph>\r\n                                                    <b>Name:</b> {department.name}<br />\r\n                                                    <b>Head of Department:</b> {getHODName(department,department.memberNames)}<br />\r\n                                                    <b>Members:</b> <br/> {\r\n                                                        department.memberNames.length > 0 ? department.memberNames.map(m =>\r\n                                                            <Chip key={m.ID} label={m.name} className={classes.chip} /> \r\n                                                        ) : undefined\r\n                                                    }<br />\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"DELETE_\" + department.ID}\r\n                                                color='primary'\r\n                                                onClick={handleDeleteDepartment}\r\n                                            >\r\n                                                <DeleteIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"UPDATE_\" + department.ID}\r\n                                                color='primary'\r\n                                                onClick={handleUpdateDepartment}\r\n                                            >\r\n                                                <EditIcon style={{ fontSize: 30, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </Card>\r\n                                </CardActionArea>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n            <EditDepartmentForm\r\n                open={openUpdateDepartment}\r\n                handleCloseEdit={handleCloseEdit}\r\n                department={updatedDepartment}\r\n                academicMembers = {props.academicMembers}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain={props.setComponentInMain} />\r\n            <AddDepartmentForm\r\n                open={openAddDepartment}\r\n                handleCloseAdd={handleCloseAdd}\r\n                academicMembers = {props.academicMembers}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain={props.setComponentInMain} />\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\StaffMember_Handler\\StaffMember_Card.js",["820","821","822","823","824","825","826","827","828","829","830","831","832","833"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport { Collapse } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport AddStaffMemberForm from './Add_StaffMember_Form';\r\nimport EditStaffMemberForm from './Edit_StaffMember_Form';\r\nimport AttendanceRecordForm from './AttendanceRecord_Form';\r\nimport AddMissingSignInOutForm from './Add_Missing_SignIn_Out_Form';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    Avatar: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n        marginBottom : \"20px\",\r\n        margin : \"auto\",\r\n        color: theme.palette.getContrastText(deepPurple[500]),\r\n        backgroundColor: deepPurple[500],\r\n      },\r\n}));\r\n\r\nexport default function StaffMember_Card(props) {\r\n    const [openEdit, setOpenEdit] = React.useState(false);\r\n\r\n    const [openUpdate, setOpenUpdate] = React.useState(false);\r\n    const [updatedStaffMember, setUpdatedStaffMember] = React.useState({});\r\n    const [attendanceView , setAttendanceView] = React.useState(null);\r\n    const [openAdd, setOpenAdd] = React.useState(false);\r\n    const [openAttendance , setOpenAttendance] = React.useState(false);\r\n    const [openUpdateSession , setOpenUpdateSession] = React.useState(false);\r\n    const [updatedStaffMemberSession , setUpdatedStaffMemberSession] = React.useState({});\r\n    const [viewMissingDays, setViewMissingDays] = React.useState(false);\r\n    const [viewMissingHours, setViewMissingHours] = React.useState(false);\r\n    \r\n    const handleChangeMissingDays = async (event) => {\r\n        setViewMissingDays(event.target.checked);\r\n    };\r\n\r\n    const handleChangeMissingHours = async (event) => {\r\n        setViewMissingHours(event.target.checked);\r\n    };\r\n\r\n    const handleOpenUpdateSession = (event) =>{\r\n        setOpenUpdateSession(true);\r\n    }\r\n\r\n    const handleCloseUpdateSession = (event) =>{\r\n        setOpenUpdateSession(false);\r\n    }\r\n\r\n    const handleOpenEdit = (event) => {\r\n        setOpenUpdate(true);\r\n    }\r\n    const handleCloseEdit = () => {\r\n        setOpenUpdate(false);\r\n    }\r\n\r\n    const handleOpenAdd = () => {\r\n        setOpenAdd(true);\r\n    }\r\n\r\n    const handleCloseAdd = () => {\r\n        setOpenAdd(false);\r\n    }\r\n\r\n    const handleOpenAttendance = () => {\r\n        setOpenAttendance(true);\r\n    }\r\n\r\n    const handleCloseAttendance = () => {\r\n        setOpenAttendance(false);\r\n    }\r\n\r\n\r\n    const handleDelete = async (event) => {\r\n        try{\r\n            const memberID = event.currentTarget.id.split('_')[2];\r\n            const type = event.currentTarget.id.split('_')[1];\r\n            const res = await axios.delete(`/hr/deleteStaffMember/${memberID}/${type}`);\r\n            props.setComponentInMain(\"staffMember\");\r\n            props.openAlert(\"Staff Member has been deleted Successfully!\",\"success\");\r\n        }\r\n        catch(err){\r\n            props.openAlert(err.response.data);\r\n        }\r\n    }\r\n\r\n    const handleUpdate = async (event) => {\r\n        const memberID = event.currentTarget.id.split('_')[2];\r\n        const type = event.currentTarget.id.split('_')[1];\r\n        const member = props.staffMembers.filter(l => l.ID == memberID && l.type == type );\r\n        setUpdatedStaffMember(member[0]);\r\n        setOpenUpdate(true);\r\n    }\r\n\r\n    const handleUpdateSession = async (event) => {\r\n        const memberID = event.currentTarget.id.split('_')[2];\r\n        const type = event.currentTarget.id.split('_')[1];\r\n        const member = props.staffMembers.filter(l => l.ID == memberID && l.type == type );\r\n        setUpdatedStaffMemberSession(member[0]);\r\n        setOpenUpdateSession(true);\r\n    }\r\n\r\n    const handleAttendance = async (event) =>{\r\n        const memberID = event.currentTarget.id.split('_')[2];\r\n        const type = event.currentTarget.id.split('_')[1];\r\n        const attendanceRecords = await axios.get(`/hr/viewStaffMemberAttendance/${memberID}/${type}`);\r\n        console.log(attendanceRecords.data);\r\n        setAttendanceView(attendanceRecords.data);\r\n        setOpenAttendance(true);\r\n    }\r\n\r\n    const getOfficeName = (ID) =>{\r\n        const office = props.offices.filter(elm => elm.ID == ID);\r\n        return office.length > 0 ? office[0].name : undefined;\r\n    }\r\n\r\n    const getDepartmentName = (ID) =>{\r\n        const dep = props.departments.filter(elm => elm.ID == ID);\r\n        return dep.length > 0 ? dep[0].name : undefined;\r\n    }\r\n\r\n    const getViewedMembers = () =>{\r\n        if(viewMissingDays && !viewMissingHours) return props.staffMembersWithMissingDays;\r\n        else if(!viewMissingDays && viewMissingHours) return props.staffMembersWithMissingHours;\r\n        else if( viewMissingDays && viewMissingHours){\r\n            setViewMissingDays(false);setViewMissingHours(false);\r\n            return props.staffMembers;\r\n        }\r\n        else return props.staffMembers;\r\n    }\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Staff Members</b>\r\n                    <Tooltip title=\"Add new Staff Member\">\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-haspopup=\"true\"\r\n                        color='primary'\r\n                        onClick={handleOpenAdd}\r\n                    >\r\n                        <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                        />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title = \"View Staff Members with Missing Days\">\r\n                    <Switch\r\n                        checked={viewMissingDays}\r\n                        onChange={handleChangeMissingDays}\r\n                        name=\"viewMissingDays\"\r\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                    </Tooltip>\r\n                    <Tooltip title = \"View Staff Members with Missing Hours\">\r\n                    <Switch\r\n                        checked={viewMissingHours}\r\n                        onChange={handleChangeMissingHours}\r\n                        name=\"viewMissingHours\"\r\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                    </Tooltip>\r\n                </Typography>\r\n\r\n                <Grid container spacing={4} >\r\n                    {\r\n                        getViewedMembers().map(staffMember =>\r\n                            <Grid item xs={12} md={6}>\r\n                                    <Card className={classes.card}>\r\n                                        <div className={classes.cardDetails}>\r\n                                            <CardContent style={{paddingBottom:\"0px\",paddingLeft:\"0px\"}}>\r\n                                                <Typography variant=\"subtitle1\" paragraph style={{marginBottom:\"0px\"}}>\r\n                                                    <Box display=\"flex\" flexDirection=\"row\" >\r\n                                                        <Box width=\"40%\" style={{margin:\"auto\",textAlign:\"center\"}}>\r\n                                                            <Avatar src=\"/broken-image.jpg\" className={classes.Avatar}>{staffMember.name.substring(0, 2).toUpperCase()}</Avatar>\r\n                                                            <b> {staffMember.name}</b><br />\r\n                                                        </Box>\r\n                                                        <Box width=\"30%\">\r\n                                                            <b>Email: </b><a href={\"mailto:\"+staffMember.email}>{staffMember.email}</a> <br />\r\n                                                            <b>Day Off: </b> {staffMember.dayOff}<br />\r\n                                                            <b>Gender: </b> {staffMember.gender}<br />\r\n                                                            <b>Office: </b> {getOfficeName(staffMember.officeID)}<br />\r\n                                                            <b>Salary: </b> {staffMember.salary}<br />\r\n                                                            <Collapse in = {staffMember.type == 0} >\r\n                                                                <b>Department: </b> {getDepartmentName(staffMember.departmentID)}<br />\r\n                                                            </Collapse>\r\n                                                        </Box>\r\n                                                        <Box width=\"30%\">\r\n                                                        <b>Extra Info:</b><br />\r\n                                                        {staffMember.extraInfo.map(elm =>{\r\n                                                            return(\r\n                                                                <div>{elm}</div>\r\n                                                            )\r\n                                                        })} \r\n                                                        </Box>\r\n                                                    </Box>\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                            <Tooltip title=\"Delete\">\r\n                                                <IconButton\r\n                                                    aria-label=\"account of current user\"\r\n                                                    aria-haspopup=\"true\"\r\n                                                    id={\"DELETE_\"+staffMember.type+\"_\" + staffMember.ID}\r\n                                                    color='primary'\r\n                                                    onClick={handleDelete}\r\n                                                    style={{paddingRight : \"0px\"}}\r\n                                                >\r\n                                                    <DeleteIcon style={{ fontSize: 25, opacity: 0.8,padding:\"0px\" }}\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"Update\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"UPDATE_\"+staffMember.type+\"_\" + staffMember.ID}\r\n                                                color='primary'\r\n                                                onClick={handleUpdate}\r\n                                                style={{paddingRight : \"0px\"}}\r\n                                            >\r\n                                                <EditIcon style={{ fontSize: 30, opacity: 1 ,padding:\"0px\"}}\r\n                                                />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n                                            <Tooltip title=\"view Attendance Record\">\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"viewAttendance_\"+staffMember.type+\"_\" + staffMember.ID}\r\n                                                color='primary'\r\n                                                onClick={handleAttendance}\r\n                                                style={{paddingRight : \"0px\"}}\r\n                                            >\r\n                                                <TodayIcon style={{ fontSize: 30, opacity: 1 ,padding:\"0px\"}} />\r\n                                            </IconButton>\r\n                                            </Tooltip>\r\n                                            <Collapse \r\n                                            style = {{display : \"inline-block\"}}\r\n                                            in = {!(staffMember.ID == localStorage.getItem(\"ID\") && staffMember.type == localStorage.getItem(\"type\"))}>\r\n                                                <Tooltip title=\"Add Missing Sessions\">\r\n                                                <IconButton\r\n                                                    aria-label=\"account of current user\"\r\n                                                    aria-haspopup=\"true\"\r\n                                                    id={\"viewAttendance_\"+staffMember.type+\"_\" + staffMember.ID}\r\n                                                    color='primary'\r\n                                                    onClick={handleUpdateSession}\r\n                                                    style={{paddingRight : \"0px\"}}\r\n                                                >\r\n                                                    <ExitToAppIcon style={{ fontSize: 30, opacity: 1 ,padding:\"0px\"}} />\r\n                                                </IconButton>\r\n                                                </Tooltip>\r\n                                            </Collapse>\r\n                                        </div>\r\n                                    </Card>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n            <EditStaffMemberForm\r\n                open={openUpdate}\r\n                handleCloseEdit={handleCloseEdit}\r\n                staffMember={updatedStaffMember}\r\n                offices = {props.offices}\r\n                departments = {props.departments}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain={props.setComponentInMain} />\r\n            <AddStaffMemberForm\r\n                open={openAdd}\r\n                handleOpenEdit={handleOpenEdit}\r\n                handleOpenAdd={handleOpenAdd}\r\n                handleCloseAdd={handleCloseAdd}\r\n                offices = {props.offices}\r\n                departments = {props.departments}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain={props.setComponentInMain} />\r\n            <AttendanceRecordForm\r\n                open={openAttendance}\r\n                handleOpenAttendance={handleOpenAttendance}\r\n                handleCloseAttendance={handleCloseAttendance}\r\n                attendanceRecords = {attendanceView}\r\n                setComponentInMain={props.setComponentInMain} /> \r\n            <AddMissingSignInOutForm\r\n                open = {openUpdateSession}\r\n                handleOpenUpdateSession = {handleOpenUpdateSession}\r\n                handleCloseUpdateSession = {handleCloseUpdateSession}\r\n                staffMember = {updatedStaffMemberSession}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain = {props.setComponentInMain}\r\n            />  \r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Location_Handler\\Location_Card.js",["834","835","836","837","838"],"import Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport AddLocationForm from './Add_Location_Form';\r\nimport EditLocationForm from './Edit_Location_Form';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n}));\r\n\r\nexport default function Location_Card(props) {\r\n    const [openEdit, setOpenEdit] = React.useState(false);\r\n\r\n    const [openUpdateLocation, setOpenUpdateLocation] = React.useState(false);\r\n    const [updatedLocation, setUpdatedLocation] = React.useState({});\r\n    const [openAddLocation, setOpenAddLocation] = React.useState(false);\r\n\r\n\r\n    const handleOpenEdit = (event) => {\r\n        setOpenUpdateLocation(true);\r\n    }\r\n    const handleCloseEdit = () => {\r\n        setOpenUpdateLocation(false);\r\n    }\r\n\r\n    const handleOpenAdd = () => {\r\n        setOpenAddLocation(true);\r\n    }\r\n\r\n    const handleCloseAdd = () => {\r\n        setOpenAddLocation(false);\r\n    }\r\n\r\n    const handleDeleteLocation = async (event) => {\r\n        const deletedID = event.currentTarget.id.split('_')[1];\r\n        const res = await axios.delete(`/hr/deleteLocation/${deletedID}`);\r\n        props.handleLocations({ID : deletedID},2);\r\n        props.setComponentInMain(\"location\");\r\n        props.openAlert(\"Location deleted Successfully!\",\"success\");\r\n    }\r\n\r\n    const handleUpdateLocation = async (event) => {\r\n        const locationID = event.currentTarget.id.split('_')[1];\r\n        const location = props.locations.filter(l => l.ID == locationID);\r\n        setUpdatedLocation(location[0]);\r\n        setOpenUpdateLocation(true);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n\r\n                </Paper>\r\n\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Locations</b>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-haspopup=\"true\"\r\n                        color='primary'\r\n                        onClick={handleOpenAdd}\r\n                    >\r\n                        <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                        />\r\n                    </IconButton>\r\n                </Typography>\r\n\r\n                <Grid container spacing={4} >\r\n                    {\r\n                        props.locations.map(location =>\r\n                            <Grid item xs={12} md={4}>\r\n                                    <Card className={classes.card}>\r\n                                        <div className={classes.cardDetails}>\r\n                                            <CardContent>\r\n                                                <Typography variant=\"subtitle1\" paragraph>\r\n                                                    <b>Name:</b> {location.name}<br />\r\n                                                    <b>Capacity:</b> {location.capacity}<br />\r\n                                                    <b>Type:</b> {location.type === 0 ?\r\n                                                        \"Hall\" : location.type === 1 ? \"Tutorial room\" :\r\n                                                            location.type === 2 ? \"Office\" : \"Lab\"}\r\n\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"DELETE_\" + location.ID}\r\n                                                color='primary'\r\n                                                onClick={handleDeleteLocation}\r\n                                            >\r\n                                                <DeleteIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                            <IconButton\r\n                                                aria-label=\"account of current user\"\r\n                                                aria-haspopup=\"true\"\r\n                                                id={\"UPDATE_\" + location.ID}\r\n                                                color='primary'\r\n                                                onClick={handleUpdateLocation}\r\n                                            >\r\n                                                <EditIcon style={{ fontSize: 30, opacity: 1 }}\r\n                                                />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </Card>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n            <EditLocationForm\r\n                open={openUpdateLocation}\r\n                handleOpenEdit={handleOpenEdit}\r\n                handleCloseEdit={handleCloseEdit}\r\n                location={updatedLocation}\r\n                handleLocations = {props.handleLocations}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain={props.setComponentInMain} />\r\n            <AddLocationForm\r\n                open={openAddLocation}\r\n                handleOpenAdd={handleOpenAdd}\r\n                handleCloseAdd={handleCloseAdd}\r\n                handleLocations = {props.handleLocations}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain={props.setComponentInMain} />\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Schedule_Handler\\Schedule.js",["839","840","841"],"import { Box, Container } from \"@material-ui/core\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React from \"react\";\r\nimport Schedule_Slot_Card from \"./Schedule_Slot_Card\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.common.black,\r\n    },\r\n    body: {\r\n        \"&:first-child \": {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        fontSize: 14\r\n    },\r\n\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        \"&:nth-of-type(odd)\": {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    }\r\n}))(TableRow);\r\n\r\nlet scheduleObj = {\r\n    'saturday': [<div />, <div />, <div />, <div />, <div />],\r\n    'sunday': [<div />, <div />, <div />, <div />, <div />],\r\n    'monday': [<div />, <div />, <div />, <div />, <div />],\r\n    'tuesday': [<div />, <div />, <div />, <div />, <div />],\r\n    'wednesday': [<div />, <div />, <div />, <div />, <div />],\r\n    'thursday': [<div />, <div />, <div />, <div />, <div />],\r\n    'friday': [<div />, <div />, <div />, <div />, <div />],\r\n}\r\n\r\nlet scheduleObjWithReplacement = {\r\n    'saturday': [[], [], [], [], []],\r\n    'sunday': [[], [], [], [], []],\r\n    'monday': [[], [], [], [], []],\r\n    'tuesday': [[], [], [], [], []],\r\n    'wednesday': [[], [], [], [], []],\r\n    'thursday': [[], [], [], [], []],\r\n    'friday': [[], [], [], [], []],\r\n}\r\n\r\nconst makeCard = (arrayOfCards) => {\r\n    //return (<Box></Box>)\r\n    if (!arrayOfCards) return (<Box></Box>)\r\n    const g = (<Grid container display=\"flex\" direction=\"column\" justifyContent=\"space-between\">\r\n        {arrayOfCards.map((card) => (\r\n            <Grid item>{card}<br /></Grid>)\r\n        )\r\n        }\r\n    </Grid>);\r\n    return g;\r\n}\r\n\r\nfunction mapToScheduleObj(courseSchedule,\r\n    replacementRequests,\r\n    replacementRequestsRecieved,\r\n    recievedFlag,\r\n    sentFlag,\r\n    senderObj,\r\n    props\r\n) {\r\n\r\n    scheduleRow = [];\r\n    scheduleRowWithReplacement = [];\r\n\r\n    scheduleObj = {\r\n        'saturday': [<div />, <div />, <div />, <div />, <div />],\r\n        'sunday': [<div />, <div />, <div />, <div />, <div />],\r\n        'monday': [<div />, <div />, <div />, <div />, <div />],\r\n        'tuesday': [<div />, <div />, <div />, <div />, <div />],\r\n        'wednesday': [<div />, <div />, <div />, <div />, <div />],\r\n        'thursday': [<div />, <div />, <div />, <div />, <div />],\r\n        'friday': [<div />, <div />, <div />, <div />, <div />],\r\n    }\r\n\r\n    scheduleObjWithReplacement = {\r\n        'saturday': [[], [], [], [], []],\r\n        'sunday': [[], [], [], [], []],\r\n        'monday': [[], [], [], [], []],\r\n        'tuesday': [[], [], [], [], []],\r\n        'wednesday': [[], [], [], [], []],\r\n        'thursday': [[], [], [], [], []],\r\n        'friday': [[], [], [], [], []],\r\n    }\r\n\r\n    for (const entry of courseSchedule) {\r\n        const card = <Schedule_Slot_Card\r\n            setComponentInMain={props.setComponentInMain}\r\n\r\n            courseName={entry.courseName}\r\n            locationName={entry.slot.locationName}\r\n            courseID={entry.courseID}\r\n            slotNumer={entry.slot.slotNumber}\r\n            slotDay={entry.slot.day}\r\n            slotID={entry.slot.ID}\r\n\r\n            cardType=\"regularSlot\"\r\n            setBackdropIsOpen={props.setBackdropIsOpen}\r\n        />;\r\n        scheduleObj[entry.slot.day][entry.slot.slotNumber - 1] = card;\r\n\r\n        scheduleObjWithReplacement[entry.slot.day][entry.slot.slotNumber - 1].push(card);\r\n    }\r\n\r\n    if (recievedFlag) {\r\n        for (const entry of replacementRequests) {\r\n            console.log(entry);\r\n            if (entry.slot == null) continue;\r\n            scheduleObjWithReplacement[entry.slot.day][entry.slot.slotNumber - 1].push(\r\n                <Schedule_Slot_Card\r\n                    setComponentInMain={props.setComponentInMain}\r\n\r\n                    courseName={entry.courseName}\r\n                    locationName={entry.locationName}\r\n                    courseID={entry.courseID}\r\n                    slotNumer={entry.slot.slotNumber}\r\n                    slotDay={entry.slot.day}\r\n                    slotID={entry.slot.ID}\r\n\r\n                    cardType=\"replacement\"\r\n                    courseInstructor={entry.senderName}\r\n                    requestedDate={entry.requestedDate}\r\n                    requestID={entry.ID}\r\n                    requestStatus={entry.status}\r\n\r\n                    setBackdropIsOpen={props.setBackdropIsOpen}\r\n                />\r\n            );\r\n        }\r\n    }\r\n    if (sentFlag) {\r\n        for (const entry of replacementRequestsRecieved) {\r\n            console.log(\"entry\", entry);\r\n            if (entry.slot == null) continue;\r\n            scheduleObjWithReplacement[entry.slot.day][entry.slot.slotNumber - 1].push(\r\n                <Schedule_Slot_Card\r\n                    setComponentInMain={props.setComponentInMain}\r\n\r\n                    courseName={entry.courseName}\r\n                    locationName={entry.locationName}\r\n                    courseID={entry.courseID}\r\n                    slotNumer={entry.slot.slotNumber}\r\n                    slotDay={entry.slot.day}\r\n                    slotID={entry.slot.ID}\r\n\r\n                    cardType=\"replacement_sent\"\r\n                    courseInstructor={senderObj}\r\n                    requestedDate={entry.requestedDate}\r\n                    requestID={entry.ID}\r\n                    requestStatus={entry.status}\r\n\r\n                    setBackdropIsOpen={props.setBackdropIsOpen}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    console.log(\"with replacement\", scheduleObjWithReplacement);\r\n\r\n    for (const entry in scheduleObj) {\r\n        // console.log(entry);\r\n        scheduleRow.push(createData(entry, scheduleObj[entry][0], scheduleObj[entry][1],\r\n            scheduleObj[entry][2], scheduleObj[entry][3], scheduleObj[entry][4],\r\n            scheduleObj[entry][5], scheduleObj[entry][6]));\r\n    }\r\n\r\n    for (const entry in scheduleObjWithReplacement) {\r\n        // console.log(entry);\r\n        scheduleRowWithReplacement.push(createData(entry, makeCard(scheduleObjWithReplacement[entry][0]), makeCard(scheduleObjWithReplacement[entry][1]),\r\n            makeCard(scheduleObjWithReplacement[entry][2]), makeCard(scheduleObjWithReplacement[entry][3]), makeCard(scheduleObjWithReplacement[entry][4]),\r\n            makeCard(scheduleObjWithReplacement[entry][5]), makeCard(scheduleObjWithReplacement[entry][6])));\r\n    }\r\n}\r\nfunction createData(day, first, second, third, fourth, fifth) {\r\n    return { day, first, second, third, fourth, fifth };\r\n}\r\n\r\nlet scheduleRow = [];\r\nlet scheduleRowWithReplacement = [];\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700\r\n    },\r\n    tableRightBorder:\r\n        { borderWidth: 1, borderColor: 'rgba(128,128,128,0.2)', borderStyle: 'solid' }\r\n});\r\n\r\nexport default function CustomizedTables(props) {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        checkedA: false,\r\n        checkedB: false,\r\n    });\r\n\r\n    const [isViewingReplacementRequest, setIsViewingReplacementRequest] = React.useState(false);\r\n    const [isViewingSentReplacementRequest, setIsViewingSentReplacementRequest] = React.useState(false);\r\n\r\n    mapToScheduleObj(props.schedule,\r\n        props.replacementRequests,\r\n        props.sentReplacementRequests,\r\n        isViewingReplacementRequest,\r\n        isViewingSentReplacementRequest,\r\n        props.senderObj,\r\n        props,\r\n    );\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        setIsViewingReplacementRequest(!isViewingReplacementRequest);\r\n        console.log(isViewingReplacementRequest);\r\n    };\r\n\r\n    const handleChangeSent = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        setIsViewingSentReplacementRequest(!isViewingSentReplacementRequest);\r\n        console.log(isViewingSentReplacementRequest);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{ marginTop: \"30px\" }} >\r\n            <Grid container justify=\"flex-end\">\r\n                <FormGroup row >\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch checked={state.checkedA}\r\n                                onChange={handleChange} name=\"checkedA\"\r\n                                color=\"primary\"\r\n                            />}\r\n                        label=\"View Received Replacement Requests\"\r\n                        style={{ align: \"right\" }}\r\n\r\n                    />\r\n                    <br />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch checked={state.checkedB}\r\n                                onChange={handleChangeSent} name=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />}\r\n                        label=\"View Sent Replacement Requests\"\r\n                        style={{ align: \"right\" }}\r\n\r\n                    />\r\n                </FormGroup>\r\n            </Grid>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>&nbsp;</StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>First Period</b></StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>Second Period</b></StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>Third Period</b></StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>Fourth Period</b></StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>Fifth Period</b></StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(isViewingReplacementRequest||isViewingSentReplacementRequest ? scheduleRowWithReplacement : scheduleRow).map((row) => (\r\n                            <StyledTableRow key={row.name}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    <b>{row.day.charAt(0).toUpperCase() + row.day.slice(1)}</b>\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.first}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.second}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.third}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.fourth}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.fifth}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Container>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\actions\\authAction.js",[],"C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\requestForm.js",["842"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nexport default function RequestForm(props) {\r\n\r\n    const handleClose = () => {\r\n        props.handleCloseForm();\r\n    };\r\n    const handleRejectRequest = async () => {\r\n        const msg = document.getElementById(\"requestFormMessage\").value+\" \";\r\n        props.handleRejectRequest(props.requestID,msg);\r\n        handleClose();\r\n}\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Write an optional message </DialogTitle>\r\n\r\n                <DialogContent>\r\n\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"requestFormMessage\"\r\n                        label=\"Write an optional message\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Back\r\n          </Button>\r\n                    <Button onClick={handleRejectRequest} color=\"primary\">\r\n                        Reject request\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\updateInstructorForm.js",["843","844","845","846","847"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nexport default function UpdateInstructorForm(props) {\r\n    const [chosenInstructor, setChosenInstructor] = React.useState(null);\r\n    const [newCourse, setNewCourse] = React.useState(null);\r\n    \r\n\r\n    const handleClose = () => {\r\n        setChosenInstructor(null);\r\n        setNewCourse(null);\r\n        props.handleClose();\r\n    };\r\n    const handleUpdate = async () => {\r\n        const instructorID = chosenInstructor.ID;\r\n        const oldCourseID = parseInt(JSON.stringify(props.course.ID));\r\n        const newCourseID = newCourse.ID;\r\n        props.setBackdropIsOpen(true);\r\n        try {\r\n            const req = {\r\n                oldCourseID: oldCourseID,\r\n                newCourseID: newCourseID,\r\n            };\r\n            const res = await axios.put(`/hod/updateCourseInstructor/${instructorID}`, req);\r\n            props.setComponentInMain(\"manageCourseInstructors\");\r\n            props.openAlert(\"Course instructor updated successfully.\", \"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n        props.setBackdropIsOpen(false)\r\n        handleClose();\r\n    }\r\n    return (\r\n<div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Update A Course Instructor </DialogTitle>\r\n                <DialogContent>\r\n                <Autocomplete\r\n                    id=\"UpdateCourseInstructorComboBox\"\r\n                    options={(props.academicMembers).filter((mem)=>{\r\n                        if(!props.course)return true;\r\n                        return props.course.instructor.map(x=>x.ID).includes(mem.ID)})}\r\n                  //  options={(props.academicMembers)}\r\n                   \r\n                    getOptionLabel={(option) => option.name}\r\n                    style={{ width: 300 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"Select an academic member\" variant=\"outlined\" />}\r\n                    onChange={(event, newValue) => {\r\n                        setChosenInstructor(newValue);\r\n                    }}\r\n                />\r\n                \r\n                <br/>\r\n\r\n                <Autocomplete\r\n                    id=\"UpdateCourseInstructorComboBox2\"\r\n                    options={props.allCourses}\r\n                  //  options={(props.academicMembers)}\r\n                   \r\n                    getOptionLabel={(option) => {return(option.name + \" \" + option.code)}}\r\n                    style={{ width: 300 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"Select a new course\" variant=\"outlined\" />}\r\n                    onChange={(event, newValue) => {\r\n                        setNewCourse(newValue);\r\n                    }}\r\n                />\r\n                   \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button disabled={newCourse==null||chosenInstructor==null} onClick={handleUpdate} color=\"primary\">\r\n                        Update\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\All_Course_Schedule\\Course_Schedule.js",["848","849","850","851","852","853","854"],"import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React from \"react\";\r\nimport DepartmentCoursesCard from \"../../hod/departmentCoursesCard\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Course_Schedule_Card from './Course_Schedule_Card';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.common.black\r\n    },\r\n    body: {\r\n        \"&:first-child \": {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        fontSize: 14\r\n    }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        \"&:nth-of-type(odd)\": {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    }\r\n}))(TableRow);\r\nlet scheduleObj = {\r\n    'saturday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'sunday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'monday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'tuesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'wednesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'thurseday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'friday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n}\r\n\r\nfunction mapToScheduleObj(courseSchedule, courseObj, requests,props) {\r\n    scheduleObj = {\r\n        'saturday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'sunday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'monday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'tuesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'wednesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'thurseday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'friday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    }\r\n    console.log(\"course schedule \", courseSchedule);\r\n    if (!courseSchedule || !scheduleObj) return;\r\n    rows = [];\r\n    for (const entry of courseSchedule) {\r\n        console.log(entry);\r\n        let slotLinkingReq = requests.filter(x => x.slotID == entry.slotID\r\n            && x.courseID == courseObj.courseID);\r\n        let temp = slotLinkingReq[0];\r\n        for (const s of slotLinkingReq) {\r\n            if (s.status == \"accepted\"){\r\n                temp = s;\r\n                break;\r\n            } \r\n            if (s.status == \"pending\"){\r\n                temp = s;\r\n            } \r\n        }\r\n        slotLinkingReq = temp;\r\n        scheduleObj[entry.day][entry.slotNumber - 1].push(\r\n            <Course_Schedule_Card\r\n                instructorName={entry.instructor}\r\n                instructorID={entry.instructorID}\r\n                locationName={entry.locationName}\r\n                courseID={courseObj.courseID}\r\n                slotID={entry.slotID}\r\n                openAlert = {props.openAlert}\r\n                slotLinkingReq={slotLinkingReq}\r\n            />\r\n        )\r\n    }\r\n\r\n    for (const entry in scheduleObj) {\r\n        rows.push(createData(entry, makeCard(scheduleObj[entry][0]), makeCard(scheduleObj[entry][1]),\r\n            makeCard(scheduleObj[entry][2]), makeCard(scheduleObj[entry][3]), makeCard(scheduleObj[entry][4]),\r\n            makeCard(scheduleObj[entry][5]), makeCard(scheduleObj[entry][6])));\r\n    }\r\n}\r\n\r\nconst makeCard = (arrayOfCards) => {\r\n    if (!arrayOfCards) return (<Box></Box>)\r\n    return (<Grid container display=\"flex\" direction=\"column\" justifyContent=\"space-between\">\r\n        {arrayOfCards.map((card) => (\r\n            <Grid item>{card}<br /></Grid>)\r\n        )\r\n        }\r\n    </Grid>)\r\n}\r\n\r\nfunction createData(day, first, second, third, fourth, fifth) {\r\n    return { day, first, second, third, fourth, fifth };\r\n}\r\n\r\nlet rows = [];\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700\r\n    }, root: {\r\n        flexGrow: 1,\r\n    },\r\n    tableRightBorder: {\r\n        borderWidth: 1,\r\n        borderColor: 'rgba(128,128,128,0.2)',\r\n        borderStyle: 'solid'\r\n    }\r\n});\r\n\r\nexport default function CustomizedTables(props) {\r\n    const classes = useStyles();\r\n    const [selectedCourse, setSelectedCourse] = React.useState({\r\n        courseID: \"loading ID\",\r\n        courseName: \"select a course first\",\r\n        courseCode: \"select a course first\",\r\n        courseSlots: [],\r\n    })\r\n    console.log(selectedCourse);\r\n    mapToScheduleObj(selectedCourse?.courseSlots, selectedCourse, props.requests,props);\r\n\r\n    return (\r\n        <TableContainer component={Paper} style={{ border: '1px' }}>\r\n            <Grid container\r\n                className={classes.root}\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <br />\r\n                <Grid item >\r\n                    <h2>All Course Schedules</h2>\r\n                    <b>Course name: </b>{selectedCourse.courseName}<br />\r\n                    <b>Course code: </b>{selectedCourse.courseCode}<br />\r\n                </Grid>\r\n                <br />\r\n                <Grid item>\r\n                    <Autocomplete\r\n                        id=\"filterDepartmentCourses\"\r\n                        options={props.allCourses}\r\n\r\n                        getOptionLabel={(option) => option.name}\r\n                        style={{ width: 300 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Filter by course\" variant=\"outlined\" />}\r\n\r\n                        onChange={(event, newValue) => {\r\n                            if (newValue && newValue.ID) {\r\n                                console.log(\"all cors in props \", props.depart);\r\n                                const sc = props.departmentCourses.find((c) => {\r\n                                    return c.courseID == newValue.ID\r\n                                });\r\n                                mapToScheduleObj(sc?.courseSlots, sc, props.requests,props);\r\n                                setSelectedCourse(sc);\r\n                                console.log(\"selected course from list \", newValue.ID, \" selected from props\", sc)\r\n                            }\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <br />\r\n            </Grid>\r\n\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow >\r\n                        <StyledTableCell>&nbsp;</StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>First Slot</b></StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>Second Slot</b></StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>Third Slot</b></StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>Fourth Slot</b></StyledTableCell>\r\n                        <StyledTableCell align=\"center\"><b>Fifth Slot</b></StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row) => (\r\n                        <StyledTableRow key={row.name} >\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                <b>{row.day.charAt(0).toUpperCase() + row.day.slice(1)}</b>\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\" className={classes.tableRightBorder} >{row.first}</StyledTableCell>\r\n                            <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.second}</StyledTableCell>\r\n                            <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.third}</StyledTableCell>\r\n                            <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.fourth}</StyledTableCell>\r\n                            <StyledTableCell align=\"center\" >{row.fifth}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Annual_Leave\\Annual_Leave_List.js",["855","856","857","858","859","860","861","862","863"],"import Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport Annual_Leave_Request_Card from \"./Annual_Leave_Request_Card\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function ChangeDayOffRequest(props) {\r\n    const [showForm, setShowForm] = React.useState(false);\r\n    const [selection, setSelection] = React.useState(\"all\");\r\n    const [max_ID, setMax_ID] = React.useState(1);\r\n\r\n    const handleCloseForm = () => {\r\n        setShowForm(false);\r\n    }\r\n\r\n    const handleOpenForm = (event) => {\r\n        setShowForm(true);\r\n    }\r\n\r\n    const handleCancelForm = async (reqID) => {\r\n        console.log(reqID)\r\n        try {\r\n            const res = await axios.delete(`/ac/cancelAnnualLeaveRequest/${reqID}`);\r\n            await props.setComponentInMain(\"ac_annualLeaveRequest\");\r\n            props.openAlert(\"Request has been cancelled successfully!\",\"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data)\r\n        }\r\n    }\r\n\r\n    const handleOpenAddReplacementRequest = async () => {\r\n        setShowForm(true);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n                </Paper>\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Annual Leave Requests</b>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-haspopup=\"true\"\r\n                        color='primary'\r\n                        onClick={handleOpenAddReplacementRequest}\r\n                    >\r\n                        <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                        />\r\n                    </IconButton>\r\n                </Typography>\r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item>\r\n                        <Autocomplete\r\n                            id=\"filterChangeDayOff\"\r\n                            options={[\"all\", \"accepted\", \"rejected\", \"pending\"]}\r\n                            getOptionLabel={(option) => option}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Filter by request status\" variant=\"outlined\" />}\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue) {\r\n                                    setSelection(newValue);\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid container spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    {\r\n\r\n                        props.requests.map(req =>\r\n                            <Grid item xs style={(req.status != selection && selection != \"all\") ? { display: 'none' } : {}} >\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent >\r\n                                            <Box display=\"flex\" direction=\"row\" justifyContent=\"space-between\">\r\n                                                <Box>\r\n                                                    <Typography variant=\"subtitle1\" paragraph>\r\n                                                        <b>Sender Name:</b> {props.senderObj.name}<br />\r\n                                                        <b>Email:</b> <a href={\"mailto:\" + props.senderObj.email}>{props.senderObj.email} </a><br />\r\n                                                        <b>Message:</b> {req.msg}<br />\r\n                                                        <b>Resquested date:</b> {(new Date(req.requestedDate)).toLocaleDateString('en-US')}<br />\r\n                                                        <b>Submission date:</b> {(new Date(req.submissionDate)).toLocaleDateString('en-US')}<br />\r\n                                                        <b>Status:</b> {req.status}<br />\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <Box  >\r\n                                                    <Tooltip title=\"Cancel the request\">\r\n                                                        <IconButton\r\n                                                            aria-label=\"account of current user\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color='primary'\r\n                                                            style={(req.status != \"pending\") ? { display: 'none' } : {}}\r\n                                                            onClick={() => { handleCancelForm(req.ID) }}\r\n                                                        >\r\n                                                            <CloseIcon\r\n                                                                onClick={(event) => {\r\n                                                                    event.stopPropagation();\r\n                                                                    handleCancelForm(req.ID)\r\n                                                                }}\r\n                                                                style={{ color: \"#cc0000\", fontSize: 25, opacity: 1 }}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </CardContent>\r\n\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n\r\n            </Container>\r\n            <Annual_Leave_Request_Card\r\n                open={showForm}\r\n                dayOff={props.senderObj.dayOff}\r\n                handleCloseForm={handleCloseForm}\r\n                senderObj={props.senderObj}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain={props.setComponentInMain}\r\n            />\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Change_Day_Off\\Change_Day_Off_List.js",["864","865","866","867","868","869","870"],"import Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport Change_Day_Off_Request_Card from \"./Change_Day_Off_Request_Card\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function ChangeDayOffRequest(props) {\r\n    const [showForm, setShowForm] = React.useState(false);\r\n    const [selection, setSelection] = React.useState(\"all\");\r\n\r\n    const handleCloseForm = () => {\r\n        setShowForm(false);\r\n    }\r\n\r\n    const handleOpenForm = (event) => {\r\n        setShowForm(true);\r\n    }\r\n\r\n    const handleCancelForm = async (reqID) => {\r\n        try {\r\n            const res = await axios.delete(`/ac/cancelChangeDayOffRequest/${reqID}`);\r\n            await props.setComponentInMain(\"ac_changeDayOffRequest\");\r\n            props.openAlert(\"Request has been cancelled successfully!\",\"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n    }\r\n\r\n    const handleOpenAddReplacementRequest = async (event) => {\r\n        console.log(\"Leeeeh?\")\r\n        await setShowForm(true);\r\n        console.log(\"Leeeeh2\", showForm);\r\n\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n                </Paper>\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Change Day Off Requests</b>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-haspopup=\"true\"\r\n                        color='primary'\r\n                        onClick={handleOpenAddReplacementRequest}\r\n                    >\r\n                        <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                        />\r\n                    </IconButton>\r\n                </Typography>\r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item>\r\n                        <Autocomplete\r\n                            id=\"filterChangeDayOff\"\r\n                            options={[\"all\", \"accepted\", \"rejected\", \"pending\"]}\r\n                            getOptionLabel={(option) => option}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Filter by request status\" variant=\"outlined\" />}\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue) {\r\n                                    setSelection(newValue);\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid container spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    {\r\n\r\n                        props.requests.map(req =>\r\n                            <Grid item xs style={(req.status != selection && selection != \"all\") ? { display: 'none' } : {}} >\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent >\r\n                                            <Box display=\"flex\" direction=\"row\" justifyContent=\"space-between\">\r\n                                                <Box>\r\n                                                    <Typography variant=\"subtitle1\" paragraph>\r\n                                                        <b>Sender Name:</b> {props.senderObj.name}<br />\r\n                                                        <b>Email:</b> <a href={\"mailto:\" + props.senderObj.email}>{props.senderObj.email} </a><br />\r\n                                                        <b>Message:</b> {req.msg}<br />\r\n                                                        <b>Requested day off :</b> {req.targetDayOff}<br />\r\n                                                        <b>Current day off:</b> {props.senderObj.dayOff}<br />\r\n                                                        <b>Submission date:</b> {(new Date(req.submissionDate)).toLocaleDateString('en-US')}<br />\r\n                                                        <b>Status:</b> {req.status}<br />\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <Box  >\r\n                                                    <Tooltip title=\"Cancel the request\">\r\n                                                        <IconButton\r\n                                                            aria-label=\"account of current user\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color='primary'\r\n                                                            style={(req.status != \"pending\") ? { display: 'none' } : {}}\r\n                                                            onClick={() => { handleCancelForm(req.ID) }}\r\n                                                        >\r\n                                                            <CloseIcon\r\n                                                                onClick={(event) => {\r\n                                                                    event.stopPropagation();\r\n                                                                    handleCancelForm(req.ID)\r\n                                                                }}\r\n                                                                style={{ color: \"#cc0000\", fontSize: 25, opacity: 1 }}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </CardContent>\r\n\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n            <Change_Day_Off_Request_Card\r\n                open={showForm}\r\n                dayOff={props.senderObj.dayOff}\r\n                handleCloseForm={handleCloseForm}\r\n                senderObj={props.senderObj}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain={props.setComponentInMain}\r\n            />\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Accidental_Leave\\Accidental_Leave_List.js",["871","872","873","874","875","876","877","878","879"],"import Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport Accidental_Leave_Request_Card from \"./Accidental_Leave_Request_Card\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function ChangeDayOffRequest(props) {\r\n    const [showForm, setShowForm] = React.useState(false);\r\n    const [selection, setSelection] = React.useState(\"all\");\r\n    const [max_ID, setMax_ID] = React.useState(1);\r\n\r\n    const handleCloseForm = () => {\r\n        setShowForm(false);\r\n    }\r\n\r\n    const handleOpenForm = (event) => {\r\n        setShowForm(true);\r\n    }\r\n\r\n    const handleCancelForm = async (reqID) => {\r\n        console.log(reqID)\r\n        try {\r\n            const res = await axios.delete(`/ac/cancelAccidentalLeaveRequest/${reqID}`);\r\n            await props.setComponentInMain(\"ac_accidentalLeaveRequest\");\r\n            props.openAlert(\"Request has been cancelled successfully!\",\"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data)\r\n        }\r\n    }\r\n\r\n    const handleOpenAddReplacementRequest = async () => {\r\n        setShowForm(true);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    console.log(props.senderObj)\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n                </Paper>\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Accidental Leave Requests</b>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-haspopup=\"true\"\r\n                        color='primary'\r\n                        onClick={handleOpenAddReplacementRequest}\r\n                    >\r\n                        <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                        />\r\n                    </IconButton>\r\n                </Typography>\r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item>\r\n                        <Autocomplete\r\n                            id=\"filterChangeDayOff\"\r\n                            options={[\"all\", \"accepted\", \"rejected\", \"pending\"]}\r\n                            getOptionLabel={(option) => option}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Filter by request status\" variant=\"outlined\" />}\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue) {\r\n                                    setSelection(newValue);\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid container spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    {\r\n\r\n                        props.requests.map(req =>\r\n                            <Grid item xs style={(req.status != selection && selection != \"all\") ? { display: 'none' } : {}} >\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent >\r\n                                            <Box display=\"flex\" direction=\"row\" justifyContent=\"space-between\">\r\n                                                <Box>\r\n                                                    <Typography variant=\"subtitle1\" paragraph>\r\n                                                        <b>Sender Name:</b> {props.senderObj.name}<br />\r\n                                                        <b>Email:</b> <a href={\"mailto:\" + props.senderObj.email}>{props.senderObj.email} </a><br />\r\n                                                        <b>Message:</b> {req.msg}<br />\r\n                                                        <b>Resquested date:</b> {(new Date(req.requestedDate)).toLocaleDateString('en-US')}<br />\r\n                                                        <b>Submission date:</b> {(new Date(req.submissionDate)).toLocaleDateString('en-US')}<br />\r\n                                                        <b>Status:</b> {req.status}<br />\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <Box  >\r\n                                                    <Tooltip title=\"Cancel the request\">\r\n                                                        <IconButton\r\n                                                            aria-label=\"account of current user\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color='primary'\r\n                                                            style={(req.status != \"pending\") ? { display: 'none' } : {}}\r\n                                                            onClick={() => { handleCancelForm(req.ID) }}\r\n                                                        >\r\n                                                            <CloseIcon\r\n                                                                onClick={(event) => {\r\n                                                                    event.stopPropagation();\r\n                                                                    handleCancelForm(req.ID)\r\n                                                                }}\r\n                                                                style={{ color: \"#cc0000\", fontSize: 25, opacity: 1 }}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </CardContent>\r\n\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n\r\n            </Container>\r\n            <Accidental_Leave_Request_Card\r\n                open={showForm}\r\n                dayOff={props.senderObj.dayOff}\r\n                handleCloseForm={handleCloseForm}\r\n                senderObj={props.senderObj}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain={props.setComponentInMain}\r\n            />\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Compensation_Leave\\Compensation_Leave_List.js",["880","881","882","883","884","885","886","887","888"],"import Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport Compensataion_Leave_Request_Card from \"./Compensation_Leave_Request_Card\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function ChangeDayOffRequest(props) {\r\n    const [showForm, setShowForm] = React.useState(false);\r\n    const [selection, setSelection] = React.useState(\"all\");\r\n    const [max_ID, setMax_ID] = React.useState(1);\r\n\r\n    const handleCloseForm = () => {\r\n        setShowForm(false);\r\n    }\r\n\r\n    const handleOpenForm = (event) => {\r\n        setShowForm(true);\r\n    }\r\n\r\n    const handleCancelForm = async (reqID) => {\r\n        console.log(reqID)\r\n        try {\r\n            const res = await axios.delete(`/ac/cancelCompensationLeaveRequest/${reqID}`);\r\n            await props.setComponentInMain(\"ac_compensationLeaveRequest\");\r\n            props.openAlert(\"Request has been cancelled successfully!\",\"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data)\r\n        }\r\n    }\r\n\r\n    const handleOpenAddReplacementRequest = async () => {\r\n        setShowForm(true);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    console.log(props.requests)\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n                </Paper>\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Compensation Leave Requests</b>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-haspopup=\"true\"\r\n                        color='primary'\r\n                        onClick={handleOpenAddReplacementRequest}\r\n                    >\r\n                        <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                        />\r\n                    </IconButton>\r\n                </Typography>\r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item>\r\n                        <Autocomplete\r\n                            id=\"filterChangeDayOff\"\r\n                            options={[\"all\", \"accepted\", \"rejected\", \"pending\"]}\r\n                            getOptionLabel={(option) => option}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Filter by request status\" variant=\"outlined\" />}\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue) {\r\n                                    setSelection(newValue);\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid container spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    {\r\n\r\n                        props.requests.map(req =>\r\n                            <Grid item xs style={(req.status != selection && selection != \"all\") ? { display: 'none' } : {}} >\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent >\r\n                                            <Box display=\"flex\" direction=\"row\" justifyContent=\"space-between\">\r\n                                                <Box>\r\n                                                    <Typography variant=\"subtitle1\" paragraph>\r\n                                                        <b>Sender Name:</b> {props.senderObj.name}<br />\r\n                                                        <b>Email:</b> <a href={\"mailto:\" + props.senderObj.email}>{props.senderObj.email} </a><br />\r\n                                                        <b>Message:</b> {req.msg}<br />\r\n                                                        <b>Absence date:</b> {(new Date(req.absenceDate)).toLocaleDateString('en-US')}<br />\r\n                                                        <b>Compensation date:</b> {(new Date(req.requestedDate)).toLocaleDateString('en-US')}<br />\r\n                                                        <b>Submission date:</b> {(new Date(req.submissionDate)).toLocaleDateString('en-US')}<br />\r\n                                                        <b>Status:</b> {req.status}<br />\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <Box  >\r\n                                                    <Tooltip title=\"Cancel the request\">\r\n                                                        <IconButton\r\n                                                            aria-label=\"account of current user\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color='primary'\r\n                                                            style={(req.status != \"pending\") ? { display: 'none' } : {}}\r\n                                                            onClick={() => { handleCancelForm(req.ID) }}\r\n                                                        >\r\n                                                            <CloseIcon\r\n                                                                onClick={(event) => {\r\n                                                                    event.stopPropagation();\r\n                                                                    handleCancelForm(req.ID)\r\n                                                                }}\r\n                                                                style={{ color: \"#cc0000\", fontSize: 25, opacity: 1 }}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </CardContent>\r\n\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n\r\n            </Container>\r\n            <Compensataion_Leave_Request_Card\r\n                open={showForm}\r\n                dayOff={props.senderObj.dayOff}\r\n                handleCloseForm={handleCloseForm}\r\n                senderObj={props.senderObj}\r\n                setComponentInMain={props.setComponentInMain}\r\n                missingDays={props.missingDays}\r\n                openAlert = {props.openAlert}\r\n            />\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Maternity_leave\\Maternity_Leave_List.js",["889","890","891","892","893","894","895","896","897"],"import Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport Maternity_Leave_Request_Card from \"./Maternity_Leave_Request_Card\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function MaternityLeaveRequest(props) {\r\n    const [showForm, setShowForm] = React.useState(false);\r\n    const [selection, setSelection] = React.useState(\"all\");\r\n    const [max_ID, setMax_ID] = React.useState(1);\r\n\r\n    const handleCloseForm = () => {\r\n        setShowForm(false);\r\n    }\r\n\r\n    const handleOpenForm = (event) => {\r\n        setShowForm(true);\r\n    }\r\n\r\n    const handleCancelForm = async (reqID) => {\r\n        console.log(reqID)\r\n        try {\r\n            const res = await axios.delete(`/ac/cancelMaternityLeaveRequest/${reqID}`);\r\n            await props.setComponentInMain(\"ac_maternityLeaveRequest\");\r\n            props.openAlert(\"Request has been cancelled successfully!\",\"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data)\r\n        }\r\n    }\r\n\r\n    const handleOpenAddReplacementRequest = async () => {\r\n        setShowForm(true);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    console.log(props.senderObj)\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n                </Paper>\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Maternity Leave Requests</b>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-haspopup=\"true\"\r\n                        color='primary'\r\n                        onClick={handleOpenAddReplacementRequest}\r\n                    >\r\n                        <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                        />\r\n                    </IconButton>\r\n                </Typography>\r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item>\r\n                        <Autocomplete\r\n                            id=\"filterChangeDayOff\"\r\n                            options={[\"all\", \"accepted\", \"rejected\", \"pending\"]}\r\n                            getOptionLabel={(option) => option}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Filter by request status\" variant=\"outlined\" />}\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue) {\r\n                                    setSelection(newValue);\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid container spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    {\r\n\r\n                        props.requests.map(req =>\r\n                            <Grid item xs style={(req.status != selection && selection != \"all\") ? { display: 'none' } : {}} >\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent >\r\n                                            <Box display=\"flex\" direction=\"row\" justifyContent=\"space-between\">\r\n                                                <Box>\r\n                                                    <Typography variant=\"subtitle1\" paragraph>\r\n                                                        <b>Sender Name:</b> {props.senderObj.name}<br />\r\n                                                        <b>Email:</b> <a href={\"mailto:\" + props.senderObj.email}>{props.senderObj.email} </a><br />\r\n                                                        <b>Message:</b> {req.msg}<br />\r\n                                                        <b>Documents URL:</b> <a href=\"url\">{req.documents}</a><br />\r\n                                                        <b>Start date:</b> {(new Date(req.startDate)).toLocaleDateString('en-US')}<br />\r\n                                                        <b>End date:</b> {(new Date(req.endDate)).toLocaleDateString('en-US')}<br />\r\n                                                        <b>Submission date:</b> {(new Date(req.submissionDate)).toLocaleDateString('en-US')}<br />\r\n                                                        <b>Status:</b> {req.status}<br />\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <Box  >\r\n                                                    <Tooltip title=\"Cancel the request\">\r\n                                                        <IconButton\r\n                                                            aria-label=\"account of current user\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color='primary'\r\n                                                            style={(req.status != \"pending\") ? { display: 'none' } : {}}\r\n                                                            onClick={() => { handleCancelForm(req.ID) }}\r\n                                                        >\r\n                                                            <CloseIcon\r\n                                                                onClick={(event) => {\r\n                                                                    event.stopPropagation();\r\n                                                                    handleCancelForm(req.ID)\r\n                                                                }}\r\n                                                                style={{ color: \"#cc0000\", fontSize: 25, opacity: 1 }}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </CardContent>\r\n\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n\r\n            </Container>\r\n            <Maternity_Leave_Request_Card\r\n                open={showForm}\r\n                dayOff={props.senderObj.dayOff}\r\n                handleCloseForm={handleCloseForm}\r\n                senderObj={props.senderObj}\r\n                setComponentInMain={props.setComponentInMain}\r\n                openAlert = {props.openAlert}\r\n            />\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\assignCourseCoordinatorForm.js",["898","899","900","901","902","903","904"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nexport default function AssignCourseCoordinatorForm(props) {\r\n    const [chosenInstructor, setChosenInstructor] = React.useState(null);\r\n\r\n    const handleClose = () => {\r\n        setChosenInstructor(null)\r\n        props.handleClose();\r\n    };\r\n    const handleAssignCoordinator = async () => {\r\n        const instructorID = chosenInstructor.ID;\r\n        console.log(\"The instructor ID is \", instructorID)\r\n        console.log(props.courseID, \"in handle assign coordinator form\")\r\n        const courseID = parseInt((props.courseID));\r\n        props.setBackdropIsOpen(true);\r\n        try {\r\n            const req = {\r\n                courseID: courseID,\r\n                academicMemberID: parseInt(instructorID)\r\n            };\r\n            const res = await axios.put('/ci/assignCourseCoordinator', req);\r\n            console.log(\"before call update\")\r\n            const departmentCourses = await props.updateCourseStaff({courseID:courseID});\r\n            props.setSelectedCourseCordinator(chosenInstructor.name)\r\n            props.setSelectedCourseCordinatorID(chosenInstructor.ID);\r\n            props.setComponentInMain(\"manageCourseStaff\");\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err.response.data);\r\n        }\r\n        props.setBackdropIsOpen(false);\r\n        handleClose();\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Assign course coordinator </DialogTitle>\r\n                <DialogContent>\r\n                    <Autocomplete\r\n                        id=\"AddCourseInstructorComboBox\"\r\n                        // options={(props.academicMembers).filter((mem)=>{\r\n                        //     if(!props.course)return true;\r\n                        //     return !props.course.instructor.map(x=>x.ID).includes(mem.ID)})}\r\n                        options={(props.academicMembers).filter((mem)=>{return mem.type == 3})}\r\n\r\n                        getOptionLabel={(option) => option.name}\r\n                        style={{ width: 300 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Academic Members\" variant=\"outlined\" />}\r\n                        onChange={(event, newValue) => {\r\n                            console.log(\"chosenInstructor\",chosenInstructor);\r\n                            setChosenInstructor(newValue);\r\n                        }}\r\n\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button disabled={chosenInstructor == null} onClick={handleAssignCoordinator} color=\"primary\">\r\n                        Add\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Sick_Leave\\Sick_Leave_List.js",["905","906","907","908","909","910","911","912"],"import Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport Sick_Leave_Request_Card from \"./Sick_Leave_Request_Card\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flex: '1 1 100%',\r\n        paddingBottom: '20px'\r\n    },\r\n    mainFeaturedPost: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.grey[800],\r\n        color: theme.palette.common.white,\r\n        marginBottom: theme.spacing(4),\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        backgroundColor: 'rgba(0,0,0,.3)',\r\n    },\r\n    mainFeaturedPostContent: {\r\n        position: 'relative',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n            paddingTop: theme.spacing(3),\r\n            paddingRight: 0,\r\n        },\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    cardDetails: {\r\n        flex: 1,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    cardMedia: {\r\n        width: 160,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function SickLeaveRequest(props) {\r\n    const [showForm, setShowForm] = React.useState(false);\r\n    const [selection, setSelection] = React.useState(\"all\");\r\n    const [max_ID, setMax_ID] = React.useState(1);\r\n\r\n    const handleCloseForm = () => {\r\n        setShowForm(false);\r\n    }\r\n\r\n    const handleOpenForm = (event) => {\r\n        setShowForm(true);\r\n    }\r\n\r\n    const handleCancelForm = async (reqID) => {\r\n        console.log(reqID)\r\n        try {\r\n            const res = await axios.delete(`/ac/cancelSickLeaveRequest/${reqID}`);\r\n            await props.setComponentInMain(\"ac_sickLeaveRequest\");\r\n            props.openAlert(\"Request has been cancelled successfully!\",\"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data)\r\n        }\r\n    }\r\n\r\n    const handleOpenAddReplacementRequest = async () => {\r\n        setShowForm(true);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    console.log(props.senderObj)\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\">\r\n                <Paper className={classes.mainFeaturedPost} style={{ backgroundImage: `url(https://i.pinimg.com/originals/94/f6/41/94f641161d1d124c6bfa2463c7feb8d4.jpg)` }}>\r\n                    <div className={classes.overlay} />\r\n                </Paper>\r\n                <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Sick Leave Requests</b>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-haspopup=\"true\"\r\n                        color='primary'\r\n                        onClick={handleOpenAddReplacementRequest}\r\n                    >\r\n                        <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                        />\r\n                    </IconButton>\r\n                </Typography>\r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item>\r\n                        <Autocomplete\r\n                            id=\"filterChangeDayOff\"\r\n                            options={[\"all\", \"accepted\", \"rejected\", \"pending\"]}\r\n                            getOptionLabel={(option) => option}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField {...params} label=\"Filter by request status\" variant=\"outlined\" />}\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue) {\r\n                                    setSelection(newValue);\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid container spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    {\r\n                        props.requests.map(req =>\r\n                            <Grid item xs style={(req.status != selection && selection != \"all\") ? { display: 'none' } : {}} >\r\n                                <Card className={classes.card}>\r\n                                    <div className={classes.cardDetails}>\r\n                                        <CardContent >\r\n                                            <Box display=\"flex\" direction=\"row\" justifyContent=\"space-between\">\r\n                                                <Box>\r\n                                                    <Typography variant=\"subtitle1\" paragraph>\r\n                                                        <b>Sender Name:</b> {props.senderObj.name}<br />\r\n                                                        <b>Email:</b> <a href={\"mailto:\" + props.senderObj.email}>{props.senderObj.email} </a><br />\r\n                                                        <b>Message:</b> {req.msg}<br />\r\n                                                        <b>Documents URL:</b> <a href=\"url\">{req.documents}</a><br />\r\n                                                        <b>Requested date:</b> {(new Date(req.requestedDate)).toLocaleDateString('en-US')}<br />\r\n                                                        <b>Submission date:</b> {(new Date(req.submissionDate)).toLocaleDateString('en-US')}<br />\r\n                                                        <b>Status:</b> {req.status}<br />\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                                <Box  >\r\n                                                    <Tooltip title=\"Cancel the request\">\r\n                                                        <IconButton\r\n                                                            aria-label=\"account of current user\"\r\n                                                            aria-haspopup=\"true\"\r\n                                                            color='primary'\r\n                                                            style={(req.status != \"pending\") ? { display: 'none' } : {}}\r\n                                                            onClick={() => { handleCancelForm(req.ID) }}\r\n                                                        >\r\n                                                            <CloseIcon\r\n                                                                onClick={(event) => {\r\n                                                                    event.stopPropagation();\r\n                                                                    handleCancelForm(req.ID)\r\n                                                                }}\r\n                                                                style={{ color: \"#cc0000\", fontSize: 25, opacity: 1 }}\r\n                                                            />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Box>\r\n\r\n                                            </Box>\r\n                                        </CardContent>\r\n\r\n                                    </div>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n            <Sick_Leave_Request_Card\r\n                open={showForm}\r\n                dayOff={props.senderObj.dayOff}\r\n                handleCloseForm={handleCloseForm}\r\n                senderObj={props.senderObj}\r\n                setComponentInMain={props.setComponentInMain}\r\n                openAlert = {props.openAlert}\r\n            />\r\n        </div >\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\deleteInstructorForm.js",["913","914","915","916","917"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nexport default function DeleteInstructorForm(props) {\r\n    const [chosenInstructor, setChosenInstructor] = React.useState(null);\r\n\r\n    const handleClose = () => {\r\n        setChosenInstructor(null);\r\n        props.handleClose();\r\n    };\r\n    const handleDelete = async () => {\r\n        const instructorID = JSON.stringify(chosenInstructor.ID);\r\n        const courseID =parseInt( JSON.stringify(props.course.ID));\r\n        console.log(courseID);\r\n        console.log(typeof courseID);\r\n        props.setBackdropIsOpen(true);\r\n        try {\r\n            const req = {\r\n                \"instructorID\": parseInt(instructorID)\r\n            };\r\n            console.log(req);\r\n            const res = await axios.delete(`/hod/deleteCourseInstructor/${courseID}`, {data: req});\r\n            props.setComponentInMain(\"manageCourseInstructors\");\r\n            props.openAlert(\"Course instructor deleted successfully.\", \"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n        props.setBackdropIsOpen(false)\r\n        handleClose();\r\n    }\r\n    return (\r\n            <div>\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Delete Course Instructor </DialogTitle>\r\n                <DialogContent>\r\n                <Autocomplete\r\n                    id=\"deleteCourseInstructorComboBox\"\r\n                    options={(props.academicMembers).filter((mem)=>{\r\n                        if(!props.course)return true;\r\n                        return props.course.instructor.map(x=>x.ID).includes(mem.ID)})}\r\n                  //  options={(props.academicMembers)}\r\n                   \r\n                    getOptionLabel={(option) => option.name}\r\n                    style={{ width: 300 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"Academic Members\" variant=\"outlined\" />}\r\n                    onChange={(event, newValue) => {\r\n                        setChosenInstructor(newValue);\r\n                    }}\r\n\r\n                />\r\n                   \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button disabled={chosenInstructor==null} onClick={handleDelete} color=\"primary\">\r\n                        Delete\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\assignInstructorForm.js",["918","919","920","921","922"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nexport default function AssignInstructorForm(props) {\r\n    const [chosenInstructor, setChosenInstructor] = React.useState(null);\r\n\r\n    const handleClose = () => {\r\n        setChosenInstructor(null);\r\n        props.handleClose();\r\n    };\r\n    const handleAdd = async () => {\r\n        const instructorID = chosenInstructor.ID;\r\n        const courseID = parseInt(JSON.stringify(props.course.ID));\r\n        \r\n        props.setBackdropIsOpen(true);\r\n        try {\r\n            const req = {\r\n                courseID: courseID,\r\n                instructorID: parseInt(instructorID)\r\n            };\r\n            const res = await axios.put('/hod/assignCourseInstructor', req);\r\n            props.setComponentInMain(\"manageCourseInstructors\");\r\n            props.openAlert(\"Course Instructor assigned successfully.\", \"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n        props.setBackdropIsOpen(false);\r\n        handleClose();\r\n    }\r\n    return (\r\n<div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add Course Instructor </DialogTitle>\r\n                <DialogContent>\r\n                <Autocomplete\r\n                    id=\"AssignAcademicMemberToSlotComboBox\"\r\n                    options={(props.academicMembers).filter((mem)=>{\r\n                        if(!props.course)return true;\r\n                        return !props.course.instructor.map(x=>x.ID).includes(mem.ID)})}\r\n                  //  options={(props.academicMembers)}\r\n                   \r\n                    getOptionLabel={(option) => option.name}\r\n                    style={{ width: 300 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"Academic Members\" variant=\"outlined\" />}\r\n                    onChange={(event, newValue) => {\r\n                        setChosenInstructor(newValue);\r\n                    }}\r\n\r\n                />\r\n                   \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button disabled={chosenInstructor==null }onClick={handleAdd} color=\"primary\">\r\n                        Add\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\slideBars\\AC_SlideBar.js",["923","924","925"],"import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport Academic_Member_List from '../routes/ac/ac_List.js';\r\nimport Course_Instructor_List from '../routes/ci/CI_List.js';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  accordionStyle: {\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n        </div>\r\n        <Divider />\r\n        <Academic_Member_List setComponentInMain={props.setComponentInMain}/>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\DropdownList_Attendance.js",[],"C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Schedule_Handler\\Schedule_Slot_Card.js",["926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FindReplaceIcon from '@material-ui/icons/FindReplace';\r\nimport Replacement_Request_Card from './Replacement_Request_Card';\r\nimport { Box, Collapse, Tooltip } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n    },\r\n    title: {\r\n    },\r\n    pos: {\r\n    },\r\n    pendingCard: {\r\n        backgroundColor: \"#ffffcc\",\r\n    },\r\n    acceptedCard: {\r\n        backgroundColor: \"#ccffcc\",\r\n    },\r\n    rejectedCard: {\r\n        backgroundColor: \"#ffcccc\",\r\n    }\r\n});\r\nexport default function SimpleCard(props) {\r\n    const classes = useStyles();\r\n    const [openReplacementRequestCard, setOpenReplacementRequestCard] = React.useState(false);\r\n    const [requestStatus, setRequestStatus] = React.useState('-');\r\n\r\n    useEffect(() => {\r\n        if (props.cardType == \"replacement\" && requestStatus == \"-\")\r\n            setRequestStatus(props.requestStatus)\r\n        console.log(\"mohamed\")\r\n    })\r\n\r\n    const handleOpenReplacementRequest = () => {\r\n        setOpenReplacementRequestCard(true);\r\n    }\r\n\r\n    const handleCloseReplacementRequest = () => {\r\n        setOpenReplacementRequestCard(false);\r\n    }\r\n\r\n    const handleAcceptReplacementRequest = async () => {\r\n        console.log(\"Accept\");\r\n        try {\r\n            setRequestStatus(\"accepted\")\r\n            const res = await axios.put('ac/respondToReplacementRequest',\r\n                { \"requestID\": props.requestID, \"response\": 1 }\r\n            );\r\n            props.openAlert(\"Request has been accepted Successfully!\" ,\"success\");\r\n        } catch (err) {\r\n            setRequestStatus(\"pending\")\r\n            props.openAlert(err.response.data);\r\n        }\r\n    }\r\n\r\n    const handleRejectReplacementRequest = async () => {\r\n        console.log(\"Reject\");\r\n        try {\r\n            setRequestStatus(\"rejected\")\r\n            const res = await axios.put('ac/respondToReplacementRequest',\r\n                { \"requestID\": props.requestID, \"response\": 0 }\r\n            );\r\n        } catch (err) {\r\n            setRequestStatus(\"pending\")\r\n            props.openAlert(err.response.data);\r\n        }\r\n    }\r\n    \r\n    const handleCancelReplacementRequest = async (reqID) => {\r\n        console.log(reqID)\r\n        props.setBackdropIsOpen(true);\r\n        try {\r\n            const res = await axios.delete(`/ac/cancelReplacementRequest/${reqID}`);\r\n            await props.setComponentInMain(\"personalSchedule\");\r\n            props.openAlert(\"Request has been cancelled successfully.\",\"success\");\r\n        } catch (err) {\r\n            props.setBackdropIsOpen(false);\r\n            props.openAlert(err.response.data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Tooltip title={\r\n                props.cardType == \"replacement_sent\" ? \"Sent Replacement Request\" :\r\n                    props.cardType == \"replacement\" ?\r\n                        (requestStatus == \"pending\" ? \"Pending Replacement Request\" :\r\n                            (requestStatus == \"accepted\" ? \"Accepted Replacement Request\" : \"Rejected Replacement Request\")) : \"Regular Slot\"}>\r\n\r\n                <Card className={classes.root} className={\r\n                    props.cardType == \"replacement\" ?\r\n                        (requestStatus == \"pending\" ? classes.pendingCard :\r\n                            (requestStatus == \"accepted\" ? classes.acceptedCard : classes.rejectedCard)) : \"\"}>\r\n                    <CardContent>\r\n                        <Box display=\"flex\" flexDirection=\"row\">\r\n                            <Box width=\"70%\">\r\n                                <Typography className={classes.pos} >\r\n                                    <b>{props.courseName}</b>\r\n                                </Typography>\r\n                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                    <b>Location:&nbsp;</b>{props.locationName}\r\n                                </Typography>\r\n                                <Collapse in={props.cardType == \"replacement\" || props.cardType == \"replacement_sent\"}>\r\n                                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                                        <b>Instructor:&nbsp;</b>{props.courseInstructor ? props.courseInstructor.name : \"\"}\r\n                                    </Typography>\r\n                                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                                        <b>Email:&nbsp;</b>{props.courseInstructor ? props.courseInstructor.email : \"\"}\r\n                                    </Typography>\r\n                                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                                        {props.courseInstructor ? (new Date(props.requestedDate)).toLocaleDateString('en-US') : \"\"}\r\n                                    </Typography>\r\n                                    <Collapse in={props.cardType == \"replacement_sent\"}>\r\n                                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                                            <b>Status:&nbsp;</b>{props.requestStatus}\r\n                                        </Typography>\r\n                                    </Collapse>\r\n                                </Collapse>\r\n                            </Box>\r\n                            <Box >\r\n                                {\r\n                                    props.cardType == \"regularSlot\" ? <CardActions>\r\n                                        <Tooltip title=\"Send Replacement Request\">\r\n                                            <Button size=\"small\" color=\"primary\" onClick={handleOpenReplacementRequest}><FindReplaceIcon /></Button>\r\n                                        </Tooltip>\r\n                                    </CardActions> : <div />\r\n                                }\r\n\r\n\r\n                                {\r\n                                    (props.cardType == \"replacement\" && requestStatus == \"pending\") ? (<div><CardActions>\r\n                                        <Tooltip title=\"Accept Replacement Request\">\r\n                                            <Button\r\n                                                size=\"small\"\r\n                                                style={{ color: \"green\" }}\r\n                                                onClick={handleAcceptReplacementRequest}\r\n                                            >\r\n                                                <CheckIcon />\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </CardActions>\r\n                                        <CardActions>\r\n                                            <Tooltip title=\"Reject Replacement Request\">\r\n                                                <Button\r\n                                                    size=\"small\"\r\n                                                    style={{ color: \"red\" }}\r\n                                                    onClick={handleRejectReplacementRequest}\r\n                                                ><CloseIcon />\r\n                                                </Button>\r\n                                            </Tooltip>\r\n                                        </CardActions></div>) : <div />\r\n                                }\r\n                                {\r\n                                    (props.cardType == \"replacement_sent\" && props.requestStatus == \"pending\") ? (<div><CardActions>\r\n\r\n                                    </CardActions>\r\n                                        <CardActions>\r\n                                            <Tooltip title=\"Cancel Replacement Request\">\r\n                                                <Button\r\n                                                    size=\"small\"\r\n                                                    style={{ color: \"red\" }}\r\n                                                    onClick={() => {\r\n                                                        handleCancelReplacementRequest(props.requestID)\r\n                                                    }}\r\n                                                ><CloseIcon />\r\n                                                </Button>\r\n                                            </Tooltip>\r\n                                        </CardActions></div>) : <div />\r\n                                }\r\n                            </Box>\r\n                        </Box>\r\n                    </CardContent>\r\n                    <Replacement_Request_Card\r\n                        open={openReplacementRequestCard}\r\n                        onClose={handleCloseReplacementRequest}\r\n                        courseID={props.courseID}\r\n                        slotNumber={props.slotNumber}\r\n                        slotDay={props.slotDay}\r\n                        slotID={props.slotID}\r\n                        openAlert = {props.openAlert}\r\n                        setComponentInMain = {props.setComponentInMain}\r\n\r\n                        setBackdropIsOpen={props.setBackdropIsOpen}\r\n                    />\r\n                </Card>\r\n            </Tooltip>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Accidental_Leave\\Accidental_Leave_Request_Card.js",["949","950","951","952"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\r\nimport {\r\n    DatePicker,\r\n    TimePicker,\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\n\r\nexport default function RequestForm(props) {\r\n    const [msg, setMsg] = React.useState(\" \");\r\n    const today = new Date()\r\n    const tomorrow = new Date(today)\r\n    tomorrow.setDate(tomorrow.getDate() + 1)\r\n    const [selectedDate, handleDateChange] = React.useState(tomorrow);\r\n\r\n    const handleClose = () => {\r\n        setMsg(\" \");\r\n        const today = new Date()\r\n        const tomorrow = new Date(today)\r\n        tomorrow.setDate(tomorrow.getDate() + 1)\r\n        handleDateChange(tomorrow);\r\n        props.handleCloseForm();\r\n    };\r\n\r\n    const handleSubmitRequest = async () => {\r\n        try {\r\n            const res = await axios.post(\"ac/sendAccidentalLeaveRequest\",\r\n                { \"requestedDate\": (new Date(selectedDate)).getTime(), \"msg\": msg });\r\n            handleClose();\r\n            await props.setComponentInMain(\"ac_accidentalLeaveRequest\");\r\n            props.openAlert('Request has been submitted successfully!',\"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Accidental Leave Request </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"requestFormMessage\"\r\n                        label=\"Write an optional message\"\r\n                        fullWidth\r\n                        onChange={(event) => { setMsg(event.target.value + \" \") }}\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <br /><br /><label> <div style={{ fontSize: \"18px\" }}>Requested Date:</div> </label>\r\n                        <DatePicker\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Back\r\n          </Button>\r\n                    <Button onClick={handleSubmitRequest} color=\"primary\">\r\n                        Submit request\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Sick_Leave\\Sick_Leave_Request_Card.js",["953"],"import DateFnsUtils from '@date-io/date-fns'; // choose your lib\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {\r\n    DatePicker,\r\n    MuiPickersUtilsProvider\r\n} from '@material-ui/pickers';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nexport default function RequestForm(props) {\r\n    const [msg, setMsg] = React.useState(\" \");\r\n    const [document, setDocument] = React.useState(\"\");\r\n\r\n    const today = new Date()\r\n    const tomorrow = new Date(today)\r\n    tomorrow.setDate(tomorrow.getDate() + 1)\r\n    const [selectedRequestedDate, handleRequestedDateChange] = React.useState(tomorrow);\r\n\r\n    const handleClose = () => {\r\n        setMsg(\" \");\r\n        setDocument(\"\");\r\n        const today = new Date()\r\n        const tomorrow = new Date(today)\r\n        tomorrow.setDate(tomorrow.getDate() + 1)\r\n        handleRequestedDateChange(tomorrow);\r\n        props.handleCloseForm();\r\n    };\r\n\r\n    const handleSubmitRequest = async () => {\r\n        try {\r\n            handleClose();\r\n            const res = await axios.post(\"ac/sendSickLeaveRequest\",\r\n                {\r\n                    \"requestedDate\": (new Date(selectedRequestedDate)).getTime(),\r\n                    \"msg\": msg,\r\n                    \"documents\": document,\r\n                });\r\n            await props.setComponentInMain(\"ac_sickLeaveRequest\");\r\n            props.openAlert('Request has been submitted successfully!',\"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n    }\r\n\r\n    function disablePast(date) {\r\n        const today = new Date()\r\n        const threeDaysBefore = new Date(today)\r\n        threeDaysBefore.setDate(tomorrow.getDate() - 4)\r\n        return date.getTime() <= new Date(threeDaysBefore);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Sick Leave Request </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"requestFormMessage\"\r\n                        label=\"Write an optional message\"\r\n                        fullWidth\r\n                        onChange={(event) => { setMsg(event.target.value + \" \") }}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        type=\"url\"\r\n                        margin=\"dense\"\r\n                        id=\"requestFormDocument\"\r\n                        label=\"Document URL\"\r\n                        fullWidth\r\n                        onChange={(event) => { setDocument(event.target.value + \" \") }}\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <br /><br /><label> <div style={{ fontSize: \"18px\" }}>Requested Date:</div> </label>\r\n                        <DatePicker\r\n                            value={selectedRequestedDate}\r\n                            shouldDisableDate={disablePast}\r\n                            onChange={handleRequestedDateChange}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Back\r\n          </Button>\r\n                    <Button onClick={handleSubmitRequest} color=\"primary\"\r\n                    disabled = {document == \" \" || document == \"\"}>\r\n                        Submit request\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Maternity_leave\\Maternity_Leave_Request_Card.js",["954"],"import DateFnsUtils from '@date-io/date-fns'; // choose your lib\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {\r\n    DatePicker,\r\n\r\n\r\n    MuiPickersUtilsProvider\r\n} from '@material-ui/pickers';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nexport default function RequestForm(props) {\r\n    const [msg, setMsg] = React.useState(\" \");\r\n    const [document, setDocument] = React.useState(\"\");\r\n\r\n    const today = new Date()\r\n    const tomorrow = new Date(today)\r\n    tomorrow.setDate(tomorrow.getDate() + 1)\r\n    const [selectedStartDate, handleStartDateChange] = React.useState(tomorrow);\r\n    const [selectedEndDate, handleEndDateChange] = React.useState(tomorrow);\r\n\r\n    const handleClose = () => {\r\n        setMsg(\" \");\r\n        setDocument(\"\");\r\n        const today = new Date()\r\n        const tomorrow = new Date(today)\r\n        tomorrow.setDate(tomorrow.getDate() + 1)\r\n        handleStartDateChange(tomorrow);\r\n        handleEndDateChange(tomorrow);\r\n        props.handleCloseForm();\r\n    };\r\n\r\n    const handleSubmitRequest = async () => {\r\n        try {\r\n            const res = await axios.post(\"ac/sendMaternityLeaveRequest\",\r\n                {\r\n                    \"startDate\": (new Date(selectedStartDate)).getTime(),\r\n                    \"endDate\": (new Date(selectedEndDate)).getTime(),\r\n                    \"msg\": msg,\r\n                    \"documents\": document,\r\n                });\r\n            handleClose();\r\n            await props.setComponentInMain(\"ac_maternityLeaveRequest\");\r\n            props.openAlert('Request has been submitted successfully!',\"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n    }\r\n\r\n    function disablePast(date) {\r\n        return date.getTime() <= new Date(Date.now());\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Maternity Leave Request</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"requestFormMessage\"\r\n                        label=\"Write an optional message\"\r\n                        fullWidth\r\n                        onChange={(event) => { setMsg(event.target.value + \" \") }}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        type=\"url\"\r\n                        margin=\"dense\"\r\n                        id=\"requestFormDocument\"\r\n                        label=\"Document URL\"\r\n                        fullWidth\r\n                        onChange={(event) => { setDocument(event.target.value + \" \") }}\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <br /><br /><label> <div style={{ fontSize: \"18px\" }}>Start Date:</div> </label>\r\n                        <DatePicker\r\n                            value={selectedStartDate}\r\n                            shouldDisableDate={disablePast}\r\n                            onChange={handleStartDateChange}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <br /><br /><label> <div style={{ fontSize: \"18px\" }}>End Date:</div> </label>\r\n                        <DatePicker\r\n                            value={selectedEndDate}\r\n                            shouldDisableDate={disablePast}\r\n                            onChange={handleEndDateChange}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Back\r\n          </Button>\r\n                    <Button onClick={handleSubmitRequest} color=\"primary\"\r\n                     disabled = {document == \" \" || document == \"\"}>\r\n                        Submit request\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\CI_List.js",["955","956","957"],"import Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport setAuthToken from \"../../../actions/setAuthToken\";\r\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\n\r\n\r\nconst requestUserProfile = async () => {\r\n    const userProfile = await axios.get('/viewProfile');\r\n    return userProfile.data;\r\n}\r\n\r\nconst requestAttendanceRecods = async () => {\r\n    const attendanceRecords = await axios.get('/viewAttendance');\r\n    return attendanceRecords.data;\r\n}\r\n\r\n     \r\nclass Course_Instructor_List extends Component {\r\n    state = {\r\n        isLoggedIn: 0,\r\n        componentInMain: <div />\r\n    }\r\n\r\n    handleInstructorCourses = async (event) => {\r\n        console.log(\"clicked on instructor courses\")\r\n\r\n        this.props.setComponentInMain(\"instructorCourses\")\r\n    }\r\n\r\n    handleViewStaffProfiles = () => {\r\n        console.log(\"clicked on view staff profile\")\r\n        this.props.updateRequestStaffProfile();\r\n        this.props.setComponentInMain(\"viewStaffProfiles\");\r\n    }\r\n    handleManageCourseStaff = async () => {\r\n        console.log(\"clicked on mange course staff\")\r\n        await this.props.updateRequestCourseStaff();\r\n        this.props.setComponentInMain(\"manageCourseStaff\");\r\n    }\r\n     \r\n    async componentDidMount() {\r\n        if (!localStorage.getItem('auth-token')) {\r\n            this.setState({ isLoggedIn: 1 });\r\n            return;\r\n        }\r\n        try {\r\n            setAuthToken(localStorage.getItem('auth-token'));\r\n            await axios.get('/authStaffMember');\r\n            this.setState({ isLoggedIn: 2 });\r\n        }\r\n        catch (err) {\r\n            this.setState({ isLoggedIn: 1 });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoggedIn === 0)\r\n            return <div />;\r\n        if (this.state.isLoggedIn === 1) {\r\n            return <Redirect to='/' />;\r\n        }\r\n        return (\r\n            <div >\r\n\r\n                <List style={(localStorage.getItem(\"academicMemberType\")!=0)?{display:'none'}:{}}>\r\n                <ListItem button  backgroundColor=\"primary\" onClick={this.props.handleHODFunctionalities} >\r\n                        <ListItemIcon><SwapHorizIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"HOD functionalities\" />\r\n                    </ListItem>\r\n                    </List>\r\n                      <Divider />\r\n\r\n                  <List> \r\n                       <ListItem button onClick={this.handleInstructorCourses} >\r\n                        <ListItemIcon><MenuBookIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Instructor courses\" />\r\n                    </ListItem>\r\n                    <ListItem button key=\"View Staff Profiles\" onClick={this.handleViewStaffProfiles}>\r\n                        <ListItemIcon> <SupervisorAccountIcon /></ListItemIcon>\r\n                        <ListItemText primary={\"View Staff Profiles\"}  />\r\n                    </ListItem>\r\n                    <ListItem button key=\"Manage Course Staff\" onClick={this.handleManageCourseStaff}>\r\n                        <ListItemIcon> <SupervisedUserCircleIcon /></ListItemIcon>\r\n                        <ListItemText primary={\"Manage Course Staff\"}  />\r\n                    </ListItem>\r\n\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Course_Instructor_List;","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Schedule_Handler\\Replacement_Request_Card.js",["958","959","960","961","962","963","964","965","966","967"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\n//Test\r\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\r\nimport {\r\n  DatePicker,\r\n  TimePicker,\r\n  DateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: '100%',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    width: '100%',\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst getCurDay = (date) => { // date entered as normal date not miliseconds\r\n  const days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\r\n  return days[date.getDay()];\r\n}\r\n\r\nexport default function MaxWidthDialog(props) {\r\n  const classes = useStyles();\r\n  const [academicMembers, setAcademicMembers] = React.useState([]);\r\n  const [selectedMem, setSelectedMem] = React.useState(null);\r\n  const [selectedDate, handleDateChange] = React.useState(new Date());\r\n\r\n  useEffect(async () => {\r\n    if (academicMembers.length == 0) {\r\n      let members = (await axios.post('ac/viewCourseMembers', { courseID: props.courseID })).data;\r\n      const userID = localStorage.getItem('ID');\r\n      const userObj = members.filter(m => m.ID == userID)[0];\r\n      members = members.filter(m => {\r\n        return m.ID != userID &&\r\n          userObj.ac.departmentID ==\r\n          m.ac.departmentID\r\n      });\r\n      setAcademicMembers(members);\r\n    }\r\n  });\r\n\r\n  function disableNonSlotDays(date) {\r\n    return getCurDay(date) != props.slotDay || date.getTime() < new Date(Date.now());\r\n  }\r\n\r\n  const handleClose = () => {\r\n    props.onClose();\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    try {\r\n      props.setBackdropIsOpen(true);\r\n      await axios.post('ac/sendReplacementRequest', {\r\n        replacementID: selectedMem, courseID: props.courseID,\r\n        slotID: props.slotID, requestedDate: selectedDate.getTime()\r\n      });\r\n      await props.setComponentInMain(\"personalSchedule\");\r\n      props.openAlert(\"Replacement Request submitted successfully!\",\"success\");\r\n    } catch (err) {\r\n      props.setBackdropIsOpen(false);\r\n      props.openAlert(err.response.data);\r\n    }\r\n\r\n    handleClose();\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Replacement Request</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Academic members available for replacement\r\n          </DialogContentText>\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"max-width\">Academic Members</InputLabel>\r\n              <Select\r\n                autoFocus\r\n                inputProps={{\r\n                  name: 'max-width',\r\n                  id: 'max-width',\r\n                }}\r\n                onChange={(event) => { setSelectedMem(event.target.value) }}\r\n              >\r\n                {\r\n                  academicMembers.map((ac) =>\r\n                    <MenuItem value={ac.ID}> {ac.name}</MenuItem>\r\n                  )\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <DatePicker\r\n              value={selectedDate}\r\n              shouldDisableDate={disableNonSlotDays}\r\n              onChange={handleDateChange}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\ac_List.js",["968","969","970","971","972","973"],"import List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport setAuthToken from \"../../../actions/setAuthToken\";\r\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\n\r\nconst requestUserProfile = async () => {\r\n    const userProfile = await axios.get('/viewProfile');\r\n    return userProfile.data;\r\n}\r\n\r\nconst requestAttendanceRecods = async () => {\r\n    const attendanceRecords = await axios.get('/viewAttendance');\r\n    return attendanceRecords.data;\r\n}\r\n\r\nconst styles = ((theme) => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        //   width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        //   width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        //   marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    accordionStyle: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nclass Academic_Member_List extends Component {\r\n    state = {\r\n        isLoggedIn: 0,\r\n    }\r\n\r\n    handlePersonalSchedule = async (event) => {\r\n        this.props.setComponentInMain(\"personalSchedule\")\r\n    }\r\n\r\n    handleAllCourseSchedule = async (event) => {\r\n        this.props.setComponentInMain(\"allCourseSchedule\")\r\n    }\r\n\r\n    handleChangeDayOffRequest = async (event) => {\r\n        this.props.setComponentInMain(\"ac_changeDayOffRequest\");\r\n    }\r\n    \r\n    handleAnnualLeaveRequest = async(event)=>{\r\n        this.props.setComponentInMain(\"ac_annualLeaveRequest\");\r\n    }\r\n\r\n    handleAccidentalLeaveRequest = async(event)=>{\r\n        this.props.setComponentInMain(\"ac_accidentalLeaveRequest\");\r\n    }\r\n\r\n    handleMaternityLeaveRequest = async(event)=>{\r\n        this.props.setComponentInMain(\"ac_maternityLeaveRequest\");\r\n    }\r\n\r\n    handleSickLeaveRequest = async(event)=>{\r\n        this.props.setComponentInMain(\"ac_sickLeaveRequest\");\r\n    }\r\n\r\n    handleCompensationLeaveRequest=async(event)=>{\r\n        console.log(\"2na hnaa?\")\r\n        this.props.setComponentInMain(\"ac_compensationLeaveRequest\");\r\n    }\r\n\r\n    // async componentDidMount() {\r\n    //     if (!localStorage.getItem('auth-token')) {\r\n    //         this.setState({ isLoggedIn: 1 });\r\n    //         return;\r\n    //     }\r\n    //     try {\r\n    //         setAuthToken(localStorage.getItem('auth-token'));\r\n    //         await axios.get('/authStaffMember');\r\n    //         this.setState({ isLoggedIn: 2 });\r\n    //     }\r\n    //     catch (err) {\r\n    //         this.setState({ isLoggedIn: 1 });\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        // if (this.state.isLoggedIn === 0)\r\n        //     return <div />;\r\n        // if (this.state.isLoggedIn === 1) {\r\n        //     return <Redirect to='/' />;\r\n        // }\r\n        return (\r\n            <div >\r\n                <List>\r\n                    <ListItem button onClick={this.handlePersonalSchedule}>\r\n                        <ListItemIcon><PermContactCalendarIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Personal Schedule\"  />\r\n                    </ListItem>\r\n                    <ListItem button onClick={this.handleAllCourseSchedule}>\r\n                        <ListItemIcon><DateRangeIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"All Course Schedules\"  />\r\n                    </ListItem>\r\n                </List>\r\n                <Accordion className={classes.accordionStyle}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <ListItemIcon ><CallReceivedIcon /></ListItemIcon>\r\n                        <ListItemText style={{ textAlign: \"left\" }}\r\n                            className={classes.menuButton}\r\n                            primary={\"Academic Requests\"} />\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <List>\r\n                            <ListItem button onClick={this.handleChangeDayOffRequest}>\r\n                                <ListItemText primary={\"Change day off\"}  />\r\n                            </ListItem>\r\n                            <ListItem button onClick={this.handleAnnualLeaveRequest} >\r\n                                <ListItemText primary={\"Annual leaves\"} />\r\n                            </ListItem>\r\n                            <ListItem button onClick={this.handleAccidentalLeaveRequest} >\r\n                                <ListItemText primary={\"Accidental leaves\" } />\r\n                            </ListItem>\r\n                            <ListItem button onClick={this.handleSickLeaveRequest} >\r\n                                <ListItemText primary={\"Sick leaves\"} />\r\n                            </ListItem>\r\n                            <ListItem button onClick={this.handleMaternityLeaveRequest}>\r\n                                <ListItemText primary={\"Maternity leaves\"} />\r\n                            </ListItem>\r\n                            <ListItem button  onClick={this.handleCompensationLeaveRequest}>\r\n                                <ListItemText primary={\"Compensation leaves\"}  />\r\n                            </ListItem>\r\n                        </List>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Academic_Member_List);","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Compensation_Leave\\Compensation_Leave_Request_Card.js",["974","975","976","977","978","979","980","981","982"],"import DateFnsUtils from '@date-io/date-fns'; // choose your lib\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {\r\n    DatePicker,\r\n\r\n\r\n    MuiPickersUtilsProvider\r\n} from '@material-ui/pickers';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nexport default function RequestForm(props) {\r\n    const [msg, setMsg] = React.useState(\" \");\r\n    const [selectedAbsenceDate, handleAbsenceDateChange] = React.useState(null);\r\n    const [selectedCompensationDate, handleCompensationDate] = React.useState(null);\r\n\r\n    const handleClose = () => {\r\n        setMsg(\" \");\r\n        handleAbsenceDateChange(null);\r\n        handleCompensationDate(null);\r\n        props.handleCloseForm();\r\n    };\r\n\r\n    const handleSubmitRequest = async () => {\r\n        try {\r\n            console.log(msg);\r\n            const res = await axios.post(\"ac/sendCompensationLeaveRequest\",\r\n                {\r\n                    \"absenceDate\": (new Date(selectedAbsenceDate)).getTime(),\r\n                    \"requestedDate\": (new Date(selectedCompensationDate)).getTime(),\r\n                    \"msg\": msg,\r\n                });\r\n            handleClose();\r\n            await props.setComponentInMain(\"ac_compensationLeaveRequest\");\r\n            props.openAlert(\"The Request has been submitted Successfully!\", \"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n    }\r\n\r\n    function disablePast(date) {\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth();\r\n        const day = date.getDate();\r\n\r\n        const currMonth = (new Date(Date.now())).getMonth();\r\n        const currYear = (new Date(Date.now())).getFullYear()\r\n        if (year < currYear - 1 || year > currYear + 1)\r\n            return true;\r\n\r\n        if (currMonth == month && day <= 10)\r\n            return true;\r\n        if (month == (currMonth + 1) % 12 && day >= 11)\r\n            return true;\r\n        for (const missing of props.missingDays) {\r\n            const m_year = (new Date(missing)).getFullYear();\r\n            const m_month = (new Date(missing)).getMonth();\r\n            const m_day = (new Date(missing)).getDate();\r\n\r\n\r\n            if (year == m_year &&\r\n                month == m_month &&\r\n                day == m_day) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function disablePastCompensation(date) {\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth();\r\n        const day = date.getDate();\r\n        var weekday = new Array(7);\r\n        weekday[0] = \"sunday\";\r\n        weekday[1] = \"monday\";\r\n        weekday[2] = \"tuesday\";\r\n        weekday[3] = \"wednesday\";\r\n        weekday[4] = \"thursday\";\r\n        weekday[5] = \"friday\";\r\n        weekday[6] = \"saturday\";\r\n        const currMonth = (new Date(Date.now())).getMonth();\r\n        const currYear = (new Date(Date.now())).getFullYear();\r\n        const currDay = (new Date(Date.now())).getDate();\r\n\r\n        console.log(props.senderObj.dayOff, date.getDay(), currDay, currMonth, month)\r\n        if (year < currYear - 1 || year > currYear + 1)\r\n            return true;\r\n        if (\r\n            (\r\n                (month == (currMonth + 1) % 12 && day <= 10) ||\r\n                (currMonth == month && day >= 11)\r\n            ) &&\r\n            weekday[date.getDay()] == props.senderObj.dayOff\r\n        )\r\n            return false;\r\n        return true;\r\n    }\r\n    console.log(\"missing days\", props.missingDays);\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Compensation Leave Request </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        required\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"requestFormMessage\"\r\n                        label=\"Write a message\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        onChange={(event) => { setMsg(event.target.value + \" \") }}\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <br /><br /><label> <div style={{ fontSize: \"18px\" }}>Absence Date:</div> </label>\r\n                        <DatePicker\r\n                            value={selectedAbsenceDate}\r\n                            shouldDisableDate={disablePast}\r\n                            onChange={handleAbsenceDateChange}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <br /><br /><label> <div style={{ fontSize: \"18px\" }}>Compensation Date:</div> </label>\r\n                        <DatePicker\r\n                            value={selectedCompensationDate}\r\n                            shouldDisableDate={disablePastCompensation}\r\n                            onChange={handleCompensationDate}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Back\r\n          </Button>\r\n                    <Button onClick={handleSubmitRequest} color=\"primary\">\r\n                        Submit request\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Change_Day_Off\\Change_Day_Off_Request_Card.js",["983","984","985"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function RequestForm(props) {\r\n    const [dayOff, setDayOff] = React.useState(\"\");\r\n    const [msg, setMsg] = React.useState(\" \");\r\n\r\n    const handleClose = () => {\r\n        setDayOff(\"\");\r\n        setMsg(\" \");\r\n        props.handleCloseForm();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!dayOff) {\r\n            setDayOff(props.dayOff);\r\n        }\r\n    });\r\n\r\n    const handleSubmitRequest = async () => {\r\n        try {\r\n            const res = await axios.post(\"ac/sendChangeDayOffRequest\", { \"newDayOff\": dayOff, \"msg\": msg });\r\n            props.setComponentInMain(\"ac_changeDayOffRequest\");\r\n            props.openAlert(\"Request has been submitted Successfully!\",\"success\");\r\n            handleClose();\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Change Day Off Request </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"requestFormMessage\"\r\n                        label=\"Write an optional message\"\r\n                        fullWidth\r\n                        onChange={(event) => { setMsg(event.target.value + \" \") }}\r\n                    />\r\n                    <label><b>Day Off</b></label>\r\n                    <RadioGroup row aria-label=\"position\" name=\"dayOff\" id=\"editDayOff\" defaultValue={props.dayOff} >\r\n                        <FormControlLabel onClick={() => { setDayOff(\"saturday\") }}\r\n                            value=\"saturday\" control={<Radio />} label=\"Saturday\" />\r\n                        <FormControlLabel onClick={() => { setDayOff(\"sunday\") }}\r\n                            value=\"sunday\" control={<Radio />} label=\"Sunday\" />\r\n                        <FormControlLabel onClick={() => { setDayOff(\"monday\") }}\r\n                            value=\"monday\" control={<Radio />} label=\"Monday\" />\r\n                        <FormControlLabel onClick={() => { setDayOff(\"tuesday\") }}\r\n                            value=\"tuesday\" control={<Radio />} label=\"Tuesday\" />\r\n                        <FormControlLabel onClick={() => { setDayOff(\"wednesday\") }}\r\n                            value=\"wednesday\" control={<Radio />} label=\"Wednesday\" />\r\n                        <FormControlLabel onClick={() => { setDayOff(\"thursday\") }}\r\n                            value=\"thursday\" control={<Radio />} label=\"Thursday\" />\r\n                    </RadioGroup>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Back\r\n          </Button>\r\n                    <Button onClick={handleSubmitRequest} color=\"primary\">\r\n                        Submit request\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\Academic_Requests\\Annual_Leave\\Annual_Leave_Request_Card.js",["986","987","988","989"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\r\nimport {\r\n    DatePicker,\r\n    TimePicker,\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\n\r\nexport default function RequestForm(props) {\r\n    const [msg, setMsg] = React.useState(\" \");\r\n    const today = new Date()\r\n    const tomorrow = new Date(today)\r\n    tomorrow.setDate(tomorrow.getDate() + 1)\r\n    const [selectedDate, handleDateChange] = React.useState(tomorrow);\r\n\r\n    const handleClose = () => {\r\n        setMsg(\" \");\r\n        const today = new Date()\r\n        const tomorrow = new Date(today)\r\n        tomorrow.setDate(tomorrow.getDate() + 1)\r\n        handleDateChange(tomorrow);\r\n        props.handleCloseForm();\r\n    };\r\n\r\n    const handleSubmitRequest = async () => {\r\n        try {\r\n            const res = await axios.post(\"ac/sendAnnualLeaveRequest\",\r\n                { \"requestedDate\": (new Date(selectedDate)).getTime(), \"msg\": msg });\r\n            handleClose();\r\n            console.log(\"props\",props)\r\n            await props.setComponentInMain(\"ac_annualLeaveRequest\");\r\n            props.openAlert('Request has been submitted successfully!',\"success\");\r\n        } catch (err) {\r\n            console.log(err);\r\n            props.openAlert(err.response.data);\r\n        }\r\n    }\r\n\r\n    function disablePast(date) {\r\n        return date.getTime() <= new Date(Date.now());\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Annual Leave Request </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"requestFormMessage\"\r\n                        label=\"Write an optional message\"\r\n                        fullWidth\r\n                        onChange={(event) => { setMsg(event.target.value + \" \") }}\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <br /><br /><label> <div style={{ fontSize: \"18px\" }}>Requested Date:</div> </label>\r\n                        <DatePicker\r\n                            value={selectedDate}\r\n                            shouldDisableDate={disablePast}\r\n                            onChange={handleDateChange}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Back\r\n          </Button>\r\n                    <Button onClick={handleSubmitRequest} color=\"primary\">\r\n                        Submit request\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ac\\All_Course_Schedule\\Course_Schedule_Card.js",["990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005"],"import { Box, Tooltip } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 1px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n    },\r\n    pos: {\r\n    },\r\n    pendingCard: {\r\n        backgroundColor: \"#ffffcc\",\r\n    },\r\n    acceptedCard: {\r\n        backgroundColor: \"#ccffcc\",\r\n    },\r\n    rejectedCard: {\r\n        backgroundColor: \"#ffcccc\",\r\n    }\r\n});\r\nexport default function SimpleCard(props) {\r\n    const classes = useStyles();\r\n    const [status, setStatus] = React.useState(\"-\");\r\n    const [instructorName, setInstructorName] = React.useState(\"Not yet assigned\");\r\n    const [instructorID, setInstructorID] = React.useState(\"\");\r\n    const [locationName, setLocationName] = React.useState(\"\");\r\n    const [isMe, setIsMe] = React.useState(false);\r\n    const [reqID, setReqID] = React.useState(null);\r\n    const [hasBeenCancelled, setHasBeenCanelled] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n        console.log(hasBeenCancelled)\r\n        if (status == '-' && !hasBeenCancelled && props.slotLinkingReq) {\r\n            setStatus(props.slotLinkingReq.status);\r\n        }\r\n        if (instructorName == 'Not yet assigned' && props.instructorName) {\r\n            setInstructorName(props.instructorName);\r\n        }\r\n        if (instructorID == '' && props.instructorID) {\r\n            setInstructorID(props.instructorID);\r\n        }\r\n        if (locationName == '' && props.locationName) {\r\n            setLocationName(props.locationName);\r\n        }\r\n        if (status != '-') {\r\n            setIsMe(true);\r\n        } else {\r\n            setIsMe(false);\r\n        }\r\n    });\r\n\r\n    const handleSlotLinkingRequest = async () => {\r\n        try {\r\n            console.log(props.courseID, props.slotID)\r\n            const res = await axios.post(\"ac/sendSlotLinkingRequest\", { courseID: props.courseID, slotID: props.slotID });\r\n            props.openAlert(\"Request has been sent Successfully!\",\"success\");\r\n            setReqID(res.data.data.reqID);\r\n            setStatus('pending');\r\n            setHasBeenCanelled(false);\r\n        } catch (err) {\r\n            // console.log({ courseID: props.courseID, slotID: props.slotID })\r\n            // console.log(err.response.data)\r\n            props.openAlert(err.response.data)\r\n        }\r\n    }\r\n\r\n    const handleCancelSlotLinkingRequest = async (reqID) => {\r\n        try {\r\n            const res = await axios.delete(`ac/cancelSlotLinkingRequest/${reqID}`);\r\n            props.openAlert(\"Request has been canceled Successfully!\",\"success\");\r\n            await setHasBeenCanelled(true);\r\n            await setStatus('-');\r\n            await setIsMe(false);\r\n        } catch (err) {\r\n            props.openAlert(err.response.data)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root} className={\r\n                (!isMe) ? \"\" : status == \"pending\" ? classes.pendingCard :\r\n                    status == \"accepted\" ? classes.acceptedCard : classes.rejectedCard\r\n            }>\r\n                <CardContent>\r\n                    <Box display=\"flex\" flexDirection=\"row\">\r\n                        <Box width=\"70%\">\r\n                            <Typography className={classes.pos} >\r\n                                <b>Instructor:&nbsp;</b>{instructorName}\r\n                            </Typography>\r\n                            {\r\n                                instructorID != \"\" ? (<Typography className={classes.pos} >\r\n                                    <b>ID:&nbsp;</b>{instructorID}\r\n                                </Typography>) : <div />\r\n                            }\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                <b>Location:</b> &nbsp;{locationName}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box>\r\n                            {\r\n                                (status == \"-\" && instructorName == \"Not yet assigned\") ||\r\n                                    (status == \"rejected\" && props.slotLinkingReq.senderID == props.instructorID)\r\n                                    ? <CardActions>\r\n                                        <Tooltip title=\"Send Slot Linking Request\">\r\n                                            <Button size=\"small\" color=\"primary\" onClick={handleSlotLinkingRequest}><CallReceivedIcon /></Button>\r\n                                        </Tooltip>\r\n                                    </CardActions> :\r\n                                    status == \"pending\" ?\r\n                                        <CardActions>\r\n                                            <Tooltip title=\"Cancel Slot Linking Request\">\r\n                                                <Button size=\"small\" style={{ color: \"red\" }} onClick={\r\n                                                    () => {\r\n                                                        let requestID = -1;\r\n                                                        if (props.slotLinkingReq) {\r\n                                                            requestID = props.slotLinkingReq.ID;\r\n                                                        } else {\r\n                                                            requestID = reqID;\r\n                                                        }\r\n                                                        handleCancelSlotLinkingRequest(requestID);\r\n                                                    }}><CloseIcon /></Button>\r\n                                            </Tooltip>\r\n                                        </CardActions>\r\n                                        : <div />\r\n                            }\r\n                        </Box>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hod\\departmentCoursesCard.js",["1006","1007","1008","1009","1010"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FindReplaceIcon from '@material-ui/icons/FindReplace';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 1px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n    },\r\n    pos: {\r\n    },\r\n    pendingCard: {\r\n        backgroundColor: \"#ffffcc\",\r\n    },\r\n    acceptedCard: {\r\n        backgroundColor: \"#ccffcc\",\r\n    },\r\n    rejectedCard: {\r\n        backgroundColor: \"#ffcccc\",\r\n    }\r\n});\r\nexport default function SimpleCard(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root} className={\r\n                props.instructorName == \"Not yet assigned\" ? classes.pendingCard : \"\"}>\r\n                <CardContent>\r\n                    <Typography className={classes.pos} >\r\n                        <b>Instructor:&nbsp;</b>{props.instructorName}\r\n                    </Typography>\r\n                    {\r\n                        props.instructorID ? (<Typography className={classes.pos} >\r\n                            <b>ID:&nbsp;</b>{props.instructorID}\r\n                        </Typography>) : <div />\r\n                    }\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                        <b>Location:&nbsp;</b>{props.locationName}\r\n                    </Typography>\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Location_Handler\\Edit_Location_Form.js",["1011","1012","1013"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nexport default function EditLocationForm(props) {\r\n    const [newType, setNewType] = React.useState(-1);\r\n\r\n    const handleClickOpen = () => {\r\n        props.handleOpenEdit();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.handleCloseEdit();\r\n    };\r\n    const handleUpdate = async () => {\r\n        const newName = document.getElementById(\"editName\").value;\r\n        const newCapacity = document.getElementById(\"editCapacity\").value;\r\n        try {\r\n            const req = {\r\n                name: newName,\r\n                capacity: newCapacity,\r\n                type: newType==-1? props.location.type: newType\r\n            };\r\n            const res = await axios.put(`hr/updateLocation/${props.location.ID}`, req);\r\n            props.handleLocations(res.data.newLocation,1);\r\n            props.setComponentInMain(\"location\");\r\n            props.openAlert(\"Location updated Successfully!\",\"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n        handleClose();\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Edit Location </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editName\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        defaultValue={props.location.name}\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        id=\"editCapacity\"\r\n                        label=\"Capacity\"\r\n                        type=\"number\"\r\n                        defaultValue={props.location.capacity}\r\n                        InputProps={{\r\n                            inputProps: {\r\n                                min: 0\r\n                            }\r\n                        }} fullWidth\r\n                    />\r\n                    <RadioGroup name=\"locationType\" id=\"editType\" defaultValue={props.location.type + \"\"}>\r\n                        <FormControlLabel onClick={() => { setNewType(0) }}\r\n                            value=\"0\" control={<Radio />} label=\"Hall\" />\r\n                        <FormControlLabel onClick={() => { setNewType(1) }}\r\n                            value=\"1\" control={<Radio />} label=\"Tutorial room\" />\r\n                        <FormControlLabel onClick={() => { setNewType(2) }}\r\n                            value=\"2\" control={<Radio />} label=\"Office\" />\r\n                        <FormControlLabel onClick={() => { setNewType(3) }}\r\n                            value=\"3\" control={<Radio />} label=\"Lab\" />\r\n                    </RadioGroup>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleUpdate} color=\"primary\">\r\n                        Update\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Location_Handler\\Add_Location_Form.js",["1014","1015"],"C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\StaffMember_Handler\\Add_Missing_SignIn_Out_Form.js",["1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport { Collapse } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\r\nimport {\r\n  DatePicker,\r\n  TimePicker,\r\n  DateTimePicker,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function AddStaffMemberForm(props) {\r\n    const classes = useStyles();\r\n\r\n   const [signIn , setSignIn] = React.useState({\r\n       date : null,\r\n       time : null\r\n   });\r\n   const [signOut , setSignOut] = React.useState({\r\n       date : null,\r\n       time : null\r\n   });\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        props.handleOpenUpdateSession();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setSignIn({date : null, time : null});\r\n        setSignOut({date : null, time : null});\r\n        props.handleCloseUpdateSession();\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n        try {\r\n            const req = {\r\n                ID : props.staffMember.ID,\r\n                type : props.staffMember.type,\r\n                signinYear : signIn.date.getFullYear(),signinMonth : signIn.date.getMonth(),signinDay : signIn.date.getDate(),\r\n                signinHour : signIn.time.getHours() ,signinMinute : signIn.time.getMinutes(),signinSec : signIn.time.getSeconds(),\r\n                signoutYear : signOut.date.getFullYear(),signoutMonth : signOut.date.getMonth(),signoutDay : signOut.date.getDate(),\r\n                signoutHour : signOut.time.getHours() ,signoutMinute : signOut.time.getMinutes(),signoutSec : signOut.time.getSeconds(),\r\n            };\r\n            const res = await axios.post(\"/hr/addMissingSignInOut\", req);\r\n            props.setComponentInMain(\"staffMember\");\r\n            props.openAlert(\"Session Added Successfully!\",\"success\");\r\n            handleClose();\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\"> Add Missing Session </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        disabled\r\n                        margin=\"dense\"\r\n                        id=\"editName\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        variant=\"filled\"\r\n                        value = {props.staffMember.name}\r\n                        style = {{marginBottom : \"20px\" , display : \"block\"}}\r\n                    />\r\n                    <label><b>Sign In Time</b></label>\r\n                    <Grid container justify=\"space-around\">\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                        <KeyboardDatePicker\r\n                            format=\"MM/dd/yyyy\"\r\n                            margin=\"normal\"\r\n                            style={{marginRight : \"20px\", marginTop : \"0px\",marginBottom:\"20px\"}}\r\n                            id=\"datePicker\"\r\n                            label=\"Date picker\"\r\n                            value={signIn.date}\r\n                            onChange={(date)=> setSignIn({...signIn,date : date })}\r\n                            KeyboardButtonProps={{\r\n                              'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardTimePicker\r\n                            margin=\"normal\"\r\n                            style={{marginRight : \"20px\", marginTop : \"0px\" ,marginBottom : \"20px\"}}\r\n                            id=\"timePicker\"\r\n                            label=\"Time picker\"\r\n                            value={signIn.time}\r\n                            onChange={(time)=> setSignIn({...signIn,time : time })}\r\n                            KeyboardButtonProps={{\r\n                              'aria-label': 'change time',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    </Grid>\r\n                    <label><b>Sign Out Time</b></label>\r\n                    <Grid container justify=\"space-around\">\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                        <KeyboardDatePicker\r\n                            format=\"MM/dd/yyyy\"\r\n                            margin=\"normal\"\r\n                            style={{marginRight : \"20px\", marginTop : \"0px\" ,marginBottom : \"20px\"}}\r\n                            id=\"datePicker\"\r\n                            label=\"Date picker\"\r\n                            value={signOut.date}\r\n                            onChange={(date)=> setSignOut({...signOut,date : date })}\r\n                            KeyboardButtonProps={{\r\n                              'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardTimePicker\r\n                            margin=\"normal\"\r\n                            style={{marginRight : \"20px\", marginTop : \"0px\" ,marginBottom : \"20px\"}}\r\n                            id=\"timePicker\"\r\n                            label=\"Time picker\"\r\n                            value={signOut.time}\r\n                            onChange={(time)=> setSignOut({...signOut,time : time })}\r\n                            KeyboardButtonProps={{\r\n                              'aria-label': 'change time',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button \r\n                    disabled = {signIn.date == null || signIn.time == null  || signOut.date == null || signOut.time == null}\r\n                    onClick={handleAdd} \r\n                    color=\"primary\">\r\n                        Update\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\StaffMember_Handler\\AttendanceRecord_Form.js",["1030","1031","1032","1033","1034","1035","1036","1037","1038"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Attendance_Card from '../../../Attendance';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nexport default function ViewAttendanceForm(props) {\r\n\r\n    const handleClickOpen = () => {\r\n        props.handleOpenAttendance();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.handleCloseAttendance();\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogContent>\r\n                    <Attendance_Card\r\n                    attendanceRecords = {props.attendanceRecords}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Ok\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\StaffMember_Handler\\Add_StaffMember_Form.js",["1039","1040","1041","1042","1043"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport { Collapse } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function AddStaffMemberForm(props) {\r\n    const classes = useStyles();\r\n\r\n    const [name , setName] = React.useState(null);\r\n    const [email , setEmail] = React.useState(null);\r\n    const [salary , setSalary] = React.useState(null);\r\n\r\n    const [dayOff , setDayOff] = React.useState(null);\r\n    const [gender , setGender] = React.useState(null);\r\n    const [office , setOffice] = React.useState(null);\r\n    const [type, setType] = React.useState(null);\r\n    const [department , setDepartment] = React.useState(null);\r\n    const [memberType , setMemberType] = React.useState(null);\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        props.handleOpenAdd();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setName(null);setEmail(null);setSalary(null);\r\n        setDayOff(null);setGender(null);\r\n        setOffice(null);setType(null);\r\n        setDepartment(null);setMemberType(null);\r\n        props.handleCloseAdd();\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n        const name = document.getElementById(\"editName\").value;\r\n        const email = document.getElementById(\"editEmail\").value;\r\n        const salary = document.getElementById(\"editSalary\").value;\r\n        const extraInfo = document.getElementById(\"editExtraInfo\").value;\r\n        try {\r\n            const req = {\r\n                name : name,\r\n                email : email,\r\n                type : type, \r\n                dayOff : dayOff,\r\n                gender : gender,\r\n                officeID : office,\r\n                salary : parseInt(salary),\r\n            };\r\n            if(type == 0){\r\n                req.departmentID = department;\r\n                if(memberType != null)\r\n                    req.memberType = parseInt(memberType);\r\n            }\r\n            if(extraInfo != null){\r\n                req.extraInfo = [extraInfo];\r\n            }\r\n            const res = await axios.post(\"/hr/addStaffMember\", req);\r\n            props.setComponentInMain(\"staffMember\");\r\n            props.openAlert(\"StaffMember Added Successfully\" , \"success\");\r\n            handleClose();\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add Staff Member </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        required\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editName\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        onChange={(event) => {setName(event.target.value)}}\r\n                    />\r\n                   <TextField\r\n                        required\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editEmail\"\r\n                        label=\"Email\"\r\n                        type=\"mail\"\r\n                        fullWidth\r\n                        style={{marginBottom:\"20px\"}}\r\n                        onChange={(event) => {setEmail(event.target.value)}}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editSalary\"\r\n                        label=\"Salary\"\r\n                        type=\"number\"\r\n                        InputProps={{\r\n                            inputProps: {\r\n                                min: 0\r\n                            }\r\n                        }} fullWidth\r\n                        style={{marginBottom:\"20px\"}}\r\n                        onChange={(event) => {setSalary(event.target.value)}}\r\n                    />\r\n                    <label><b>Gender</b></label>\r\n                    <RadioGroup row aria-label=\"position\" name=\"gender\" id=\"editGender\" >\r\n                        <FormControlLabel onClick={() => { setGender(\"male\") }}\r\n                            value=\"male\" control={<Radio required = {true} />} label=\"Male\"/>\r\n                        <FormControlLabel onClick={() => { setGender(\"female\") }}\r\n                            value=\"female\" control={<Radio required = {true} />} label=\"Female\" />\r\n                    </RadioGroup>\r\n                    <label><b>Day Off</b></label>\r\n                    <RadioGroup row aria-label=\"position\" name=\"dayOff\" id=\"editDayOff\" >\r\n                        <FormControlLabel onClick={() => { setDayOff(\"saturday\") }}\r\n                            value=\"saturday\" control={<Radio />} label=\"Saturday\" />\r\n                        <FormControlLabel onClick={() => { setDayOff(\"sunday\") }}\r\n                            value=\"sunday\" control={<Radio />} label=\"Sunday\" />\r\n                             <FormControlLabel onClick={() => { setDayOff(\"monday\") }}\r\n                            value=\"monday\" control={<Radio />} label=\"Monday\" />\r\n                        <FormControlLabel onClick={() => { setDayOff(\"tuesday\") }}\r\n                            value=\"tuesday\" control={<Radio />} label=\"Tuesday\" />\r\n                             <FormControlLabel onClick={() => { setDayOff(\"wednesday\") }}\r\n                            value=\"wednesday\" control={<Radio />} label=\"Wednesday\" />\r\n                        <FormControlLabel onClick={() => { setDayOff(\"thursday\") }}\r\n                            value=\"thursday\" control={<Radio />} label=\"Thursday\" />\r\n                    </RadioGroup>\r\n                    <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\" required>Office</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"office\"\r\n                            value={office}\r\n                            onChange={(event) => {setOffice(event.target.value)}}\r\n                        >\r\n                            {\r\n                                props.offices.map(\r\n                                    elm => {\r\n                                        return <MenuItem value={elm.ID}>{elm.name}</MenuItem>\r\n                                    }\r\n                                )\r\n                            }\r\n                        </Select>\r\n                    </FormControl><br/>\r\n                    <label><b>Type</b></label>\r\n                    <RadioGroup row aria-label=\"position\" name=\"type\" id=\"edittype\">\r\n                        <FormControlLabel onClick={() => { setType(0) }}\r\n                            value=\"0\" control={<Radio />} label=\"Academic Member\" />\r\n                        <FormControlLabel onClick={() => { setType(1) }}\r\n                            value=\"1\" control={<Radio />} label=\"HR\" />\r\n                    </RadioGroup>\r\n                    <Collapse in ={type == 0 }>\r\n                    <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Department</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"office\"\r\n                            value={department}\r\n                            onChange={(event) => {setDepartment(event.target.value)}}\r\n                        >\r\n                            {\r\n                                props.departments.map(\r\n                                    elm => {\r\n                                        return <MenuItem value={elm.ID}>{elm.name}</MenuItem>\r\n                                    }\r\n                                )\r\n                            }\r\n                        </Select>\r\n                    </FormControl><br/>\r\n                    <label><b>Member Type</b></label>\r\n                    <RadioGroup row aria-label=\"position\" name=\"type\" id=\"editMemberType\">\r\n                        <FormControlLabel onClick={() => { setMemberType(0) }}\r\n                            value=\"0\" control={<Radio />} label=\"Head of Department\" />\r\n                        <FormControlLabel onClick={() => { setMemberType(3) }}\r\n                            value=\"3\" control={<Radio />} label=\"Academic Member\" />\r\n                    </RadioGroup>\r\n                    </Collapse>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editExtraInfo\"\r\n                        label=\"Extra Info\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button \r\n                    disabled = {(name == null || email == null || salary == null\r\n                        || gender == null || dayOff == null || office == null || type == null || (type == 0 && department == null))}\r\n                    onClick={handleAdd} \r\n                    color=\"primary\">\r\n                        Add\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\StaffMember_Handler\\Edit_StaffMember_Form.js",["1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport { Collapse } from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function EditStaffMemberForm(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [name , setName] = React.useState(null);\r\n    const [salary , setSalary] = React.useState(null);\r\n    const [dayOff , setDayOff] = React.useState(null);\r\n    const [gender , setGender] = React.useState(null);\r\n    const [office , setOffice] = React.useState(null);\r\n    const [department , setDepartment] = React.useState(null);\r\n    const [memberType , setMemberType] = React.useState(null);\r\n    const [extraInfo , setExtraInfo] = React.useState(null);\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        props.handleOpenEdit();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setName(null);setSalary(null);\r\n        setDayOff(null);setGender(null);\r\n        setOffice(null);setDepartment(null);\r\n        setMemberType(null);setExtraInfo(null);\r\n        props.handleCloseEdit();\r\n    };\r\n    const handleUpdate = async () => {\r\n        try {\r\n            const req = {};\r\n            if(name != null) req.name = name;\r\n            if(dayOff != null ) req.dayOff = dayOff;\r\n            if(gender != null ) req.gender = gender;\r\n            if(office != null ) req.officeID = office;\r\n            if(salary != null ) req.salary = salary;\r\n            if(extraInfo != null ) req.extraInfo = extraInfo.split(',');\r\n            if(props.staffMember.type == 0){\r\n                if(department != null ) req.departmentID = department;\r\n                if(memberType != null) req.memberType = parseInt(memberType);\r\n            }\r\n            console.log(req)\r\n            const res = await axios.put(`/hr/updateStaffMember/${props.staffMember.ID}/${props.staffMember.type}`, req);\r\n            props.setComponentInMain(\"staffMember\");\r\n            props.openAlert(\"Staff Member has been updated Successfully!\",\"success\");\r\n            handleClose();\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n        handleClose();\r\n    }\r\n\r\n\r\n    const getDefaultOffice = async (ID) =>{\r\n        console.log(props.staffMember)\r\n        const office  = props.offices.filter(elm => elm.ID == ID)[0];\r\n        console.log(office);\r\n        return office;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Update Staff Member </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        required\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editName\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        defaultValue = {props.staffMember.name}\r\n                        onChange={(event) => {setName(event.target.value)}}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editSalary\"\r\n                        label=\"Salary\"\r\n                        type=\"number\"\r\n                        defaultValue = {props.staffMember.salary}\r\n                        InputProps={{\r\n                            inputProps: {\r\n                                min: 0\r\n                            }\r\n                        }} fullWidth\r\n                        style={{marginBottom:\"20px\"}}\r\n                        onChange={(event) => {setSalary(event.target.value)}}\r\n                    />\r\n                    <label><b>Gender</b></label>\r\n                    <RadioGroup row aria-label=\"position\" name=\"gender\" id=\"editGender\" defaultValue={props.staffMember.gender} >\r\n                        <FormControlLabel onClick={() => { setGender(\"male\") }}\r\n                            value=\"male\" control={<Radio required = {true} />} label=\"Male\"/>\r\n                        <FormControlLabel onClick={() => { setGender(\"female\") }}\r\n                            value=\"female\" control={<Radio required = {true} />} label=\"Female\" />\r\n                    </RadioGroup>\r\n                    <label><b>Day Off</b></label>\r\n                    <RadioGroup row aria-label=\"position\" name=\"dayOff\" id=\"editDayOff\" defaultValue = {props.staffMember.dayOff} >\r\n                        <FormControlLabel onClick={() => { setDayOff(\"saturday\") }}\r\n                            value=\"saturday\" control={<Radio />} label=\"Saturday\" />\r\n                        <FormControlLabel onClick={() => { setDayOff(\"sunday\") }}\r\n                            value=\"sunday\" control={<Radio />} label=\"Sunday\" />\r\n                             <FormControlLabel onClick={() => { setDayOff(\"monday\") }}\r\n                            value=\"monday\" control={<Radio />} label=\"Monday\" />\r\n                        <FormControlLabel onClick={() => { setDayOff(\"tuesday\") }}\r\n                            value=\"tuesday\" control={<Radio />} label=\"Tuesday\" />\r\n                             <FormControlLabel onClick={() => { setDayOff(\"wednesday\") }}\r\n                            value=\"wednesday\" control={<Radio />} label=\"Wednesday\" />\r\n                        <FormControlLabel onClick={() => { setDayOff(\"thursday\") }}\r\n                            value=\"thursday\" control={<Radio />} label=\"Thursday\" />\r\n                    </RadioGroup>\r\n                    <Autocomplete\r\n                        options={props.offices}\r\n                        getOptionLabel={(option) => option.name}\r\n                        defaultValue = {props.offices.find(elm =>elm.ID == props.staffMember.officeID)}\r\n                        onChange={(event, value) => {\r\n                            value = value.map(elm => elm.ID);\r\n                            setOffice(value);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                label=\"Office\"\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Collapse in ={props.staffMember.type == 0 }>\r\n                    <Autocomplete\r\n                        options={props.departments}\r\n                        getOptionLabel={(option) => option.name}\r\n                        defaultValue = {props.departments.find(elm =>elm.ID == props.staffMember.departmentID)}\r\n                        onChange={(event, value) => {\r\n                            value = value.map(elm => elm.ID);\r\n                            setOffice(value);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                label=\"Department\"\r\n                            />\r\n                        )}\r\n                    />\r\n                    <label><b>Member Type</b></label>\r\n                    <RadioGroup row aria-label=\"position\" name=\"type\" id=\"editMemberType\" defaultValue = {props.staffMember.memberType+\"\"}>\r\n                        <FormControlLabel onClick={() => { setMemberType(0) }}\r\n                            value=\"0\" control={<Radio />} label=\"Head of Department\" />\r\n                        <FormControlLabel onClick={() => { setMemberType(3) }}\r\n                            value=\"3\" control={<Radio />} label=\"Academic Member\" />\r\n                    </RadioGroup>\r\n                    </Collapse>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editExtraInfo\"\r\n                        label=\"Extra Info\"\r\n                        type=\"text\"\r\n                        defaultValue = {props.staffMember.extraInfo}\r\n                        onChange={(event) => {setExtraInfo(event.target.value)}}\r\n                        fullWidth\r\n                        helperText=\"Enter the Extra info separated by comma\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button \r\n                    onClick={handleUpdate} \r\n                    color=\"primary\">\r\n                        Update\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Department_Handler\\Edit_Department_Form.js",["1057","1058","1059","1060","1061","1062"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function EditDepartmentForm(props) {\r\n    const classes = useStyles();\r\n    const [newHOD, setNewHOD] = React.useState(null);\r\n    const [newMembers, setNewMembers] = React.useState(null);\r\n\r\n    const handleChange = (event) => {\r\n        setNewHOD(event.target.value);\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        props.handleOpenEdit();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.handleCloseEdit();\r\n        setNewHOD(null);\r\n        setNewMembers(null);\r\n    };\r\n\r\n    const handleEditDepartment = async () => {\r\n        const newName = document.getElementById(\"editName\").value;\r\n        try {\r\n            const req = {\r\n                name: newName,\r\n            };\r\n            if (newHOD != null) req.hodID = newHOD;\r\n            if (newMembers.length != null) req.members = newMembers;\r\n            console.log(newMembers);\r\n            const res = await axios.put(`/hr/updateDepartment/${props.department.ID}`, req);\r\n            props.setComponentInMain(\"department\");\r\n            props.openAlert(\"Department updated Successfully!\" ,\"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n        handleClose();\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Edit Department </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editName\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        defaultValue={props.department.name}\r\n                        fullWidth\r\n                    />\r\n                    <FormControl className={classes.formControl}>\r\n                        <Autocomplete\r\n                            options={props.academicMembers}\r\n                            getOptionLabel={(option) => option.name}\r\n                            onChange={(event, value) => {\r\n                                value = value.ID;\r\n                                setNewHOD(value);\r\n                            }}\r\n                            disableClearable={true}\r\n                            defaultValue={props.department.HODName}\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    variant=\"standard\"\r\n                                    label=\"Head of Department\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Autocomplete\r\n                            multiple\r\n                            options={props.academicMembers}\r\n                            getOptionLabel={(option) => option.name}\r\n                            defaultValue={props.department.memberNames}\r\n                            onChange={(event, value) => {\r\n                                value = value.map(v => v.ID);\r\n                                const copy = [];\r\n                                for (const v of value) {\r\n                                    if (!copy.includes(v)) copy.push(v);\r\n                                }\r\n                                setNewMembers(copy);\r\n                            }}\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    variant=\"standard\"\r\n                                    label=\"Members\"\r\n                                />\r\n                            )}\r\n                        />\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleEditDepartment} color=\"primary\">\r\n                        Edit\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Department_Handler\\Add_Department_Form.js",["1063","1064"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function AddDepartmentForm(props) {\r\n    const classes = useStyles();\r\n    const [newHOD, setNewHOD] = React.useState(null);\r\n    const [newMembers, setNewMembers] = React.useState([]);\r\n    const [newName , setNewName] = React.useState.apply(null);\r\n\r\n    const handleChange = (event) => {\r\n        setNewHOD(event.target.value);\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        props.handleOpenAdd();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.handleCloseAdd();\r\n        setNewHOD(null);\r\n        setNewMembers([]);\r\n        setNewName(null);\r\n    };\r\n\r\n    const handleAddDepartment = async () => {\r\n        try {\r\n            const req = {\r\n                name: newName,\r\n            };\r\n            if (newHOD != null) req.hodID = newHOD;\r\n            if (newMembers.length > 0) req.members = newMembers;\r\n            const res = await axios.post(`/hr/createDepartment`, req);\r\n            props.setComponentInMain(\"department\");\r\n            props.openAlert(\"Department Added Successfully!\" , \"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n        handleClose();\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add Department </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editName\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        onChange={(event) => {setNewName(event.target.value)}}\r\n                        fullWidth\r\n                    />\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Head of Department</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"hod\"\r\n                            value={newHOD}\r\n                            onChange={handleChange}\r\n                        >\r\n                            {\r\n                                props.academicMembers.map(\r\n                                    elm => {\r\n                                        return <MenuItem value={elm.ID}>{elm.name}</MenuItem>\r\n                                    }\r\n                                )\r\n                            }\r\n                        </Select>\r\n                        <Autocomplete\r\n                            multiple\r\n                            options={props.academicMembers}\r\n                            getOptionLabel={(option) => option.name}\r\n                            onChange={(event, value) => {\r\n                                value = value.map(elm => elm.ID);\r\n                                setNewMembers(value);\r\n                            }}\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    variant=\"standard\"\r\n                                    label=\"Members\"\r\n                                />\r\n                            )}\r\n                        />\r\n                    </FormControl>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button \r\n                    disabled = {newName == null}\r\n                    onClick={handleAddDepartment} color=\"primary\">\r\n                        Add\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Faculty_Handler\\Edit_Faculty_Form.js",["1065","1066"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\n\r\nexport default function EditFacultyForm(props) {\r\n    const [newDepartments, setNewDepartments] = React.useState(null);\r\n\r\n    const handleClickOpen = () => {\r\n        props.handleOpenEdit();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.handleCloseEdit();\r\n        setNewDepartments(null);\r\n    };\r\n    const handleUpdate = async () => {\r\n        const newName = document.getElementById(\"editName\").value;\r\n        try {\r\n            const req = {\r\n                name: newName,\r\n            };\r\n            if(newDepartments != null) req.departments = newDepartments;\r\n            const res = await axios.put(`hr/updateFaculty/${props.faculty.name}`, req);\r\n            // const newFaculty = res.data.newFaculty;\r\n            // newFaculty.oldName = props.faculty.name;\r\n            // props.handleFaculties(newFaculty,1);\r\n            props.setComponentInMain(\"faculty\");\r\n            props.openAlert(\"Faculty updated Successfully!\",\"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Update Faculty </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editName\"\r\n                        defaultValue = {props.faculty.name}\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <Autocomplete\r\n                        multiple\r\n                        options={props.departments}\r\n                        getOptionLabel={(option) => option.name}\r\n                        defaultValue = {props.faculty.departments}\r\n                        onChange={(event, value) => {\r\n                            value = value.map(elm => elm.ID);\r\n                            setNewDepartments(value);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                label=\"Departments\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleUpdate} color=\"primary\">\r\n                        Update\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Course_Handler\\Edit_Course_Form.js",["1067","1068","1069","1070","1071","1072","1073"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 200,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nexport default function EditCourseForm(props) {\r\n    const classes = useStyles();\r\n    const [newDepartment, setNewDepartments] = React.useState(null);\r\n\r\n    const handleClickOpen = () => {\r\n        props.handleOpenEdit();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.handleCloseEdit();\r\n    };\r\n    const handleUpdate = async () => {\r\n        const newName = document.getElementById(\"editName\").value;\r\n        const newCode  = document.getElementById(\"editCode\").value;\r\n        const newDescription  = document.getElementById(\"editDescription\").value;\r\n        try {\r\n            const req = {\r\n                name: newName,\r\n                code : newCode,\r\n                description : newDescription,\r\n            };\r\n            if (newDepartment != null) {\r\n                req.department = newDepartment;\r\n            }\r\n            const res = await axios.put(`hr/updateCourse/${props.course.ID}`, req);\r\n            props.setComponentInMain(\"course\");\r\n            props.openAlert(\"Course updated Successfully!\" , \"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n        handleClose();\r\n    }\r\n\r\n    const getDefaultDepartments = () =>{\r\n        if(props.course.department != null )\r\n            return props.departments.filter(elm => props.course.department.includes(elm.ID));\r\n    }\r\n\r\n    if (props.course == null)\r\n        return <div />;\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Update Course </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editName\"\r\n                        defaultValue={props.course.name}\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editCode\"\r\n                        defaultValue={props.course.code}\r\n                        label=\"Code\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                   <Autocomplete\r\n                        multiple\r\n                        options={props.departments}\r\n                        getOptionLabel={(option) => option.name}\r\n                        defaultValue = {getDefaultDepartments()}\r\n                        onChange={(event, value) => {\r\n                            value = value.map(elm => elm.ID);\r\n                            setNewDepartments(value);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                label=\"Departments\"\r\n                            />\r\n                        )}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editDescription\"\r\n                        defaultValue={props.course.description}\r\n                        label=\"Description\"\r\n                        multiline\r\n                        rowsMax = {4}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleUpdate} color=\"primary\">\r\n                        Update\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Faculty_Handler\\Add_Faculty_Form.js",["1074","1075"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nexport default function AddFacultyForm(props) {\r\n    const [newDepartments, setNewDepartments] = React.useState([]);\r\n    const [newName , setNewName] = React.useState(null);\r\n\r\n    const handleClickOpen = () => {\r\n        props.handleOpenAdd();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setNewName(null);\r\n        setNewDepartments([]);\r\n        props.handleCloseAdd();\r\n    };\r\n\r\n    const handleAddFaculty = async () => {\r\n        console.log(newDepartments);\r\n        try {\r\n            const req = {\r\n                name: newName,\r\n                departments: newDepartments,\r\n            };\r\n            const res = await axios.post(`/hr/createFaculty`, req);\r\n            // const obj = res.data;\r\n\r\n            // props.handleFaculties(res.data,0);\r\n            props.setComponentInMain(\"faculty\");\r\n            props.openAlert(\"Faculty Added Successfully!\" , \"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n        handleClose();\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add Faculty </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editName\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        onChange={(event) => {setNewName(event.target.value)}}\r\n                        fullWidth\r\n                    />\r\n                    <Autocomplete\r\n                        multiple\r\n                        id=\"editDepartments\"\r\n                        options={props.departments}\r\n                        getOptionLabel={(option) => option.name}\r\n                        onChange={(event, value) => {\r\n                            value = value.map(elm => elm.ID);\r\n                            setNewDepartments(value);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                label=\"Departments\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button \r\n                    disabled = {newName == null}\r\n                    onClick={handleAddFaculty} color=\"primary\">\r\n                        Add\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\addExtraInfoForm.js",["1076","1077"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nexport default function addExtraInfoForm(props) {\r\n    const handleClickOpen = () => {\r\n        props.handleOpenEdit();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.handleCloseEdit();\r\n    };\r\n    const handleAddExtraInfo = async () => {\r\n        const newInfo = document.getElementById(\"addExtraInfo\").value;\r\n        try {\r\n            const req = {\r\n                extraInfo: [\r\n                    ...props.profile.extraInfo, newInfo\r\n                ]\r\n            };\r\n            const res = await axios.post('updateMyProfile', req);\r\n            props.openAlert(\"Profile Updated Successfully\",\"success\");\r\n            props.setComponentInMain(\"profile\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data,\"error\");\r\n        }\r\n        handleClose();\r\n}\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add extra information </DialogTitle>\r\n\r\n                <DialogContent>\r\n\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"addExtraInfo\"\r\n                        label=\"extra information\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleAddExtraInfo} color=\"primary\">\r\n                        Add\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\hr\\Course_Handler\\Add_Course_Form.js",["1078","1079","1080","1081"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 200,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nexport default function AddCourseForm(props) {\r\n    const classes = useStyles();\r\n    const [newDepartments , setNewDepartments] = React.useState(null);\r\n\r\n    const handleChange = (event) =>{\r\n        setNewDepartments(event.target.value);\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        props.handleOpenAdd();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.handleCloseAdd();\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n        const newName = document.getElementById(\"editName\").value;\r\n        const newCode  = document.getElementById(\"editCode\").value;\r\n        const newDescription  = document.getElementById(\"editDescription\").value;\r\n        try {\r\n            const req = {\r\n                name: newName,\r\n                code : newCode,\r\n            };\r\n            if (newDepartments != null) {\r\n                req.department = newDepartments;\r\n            }\r\n            if(newDescription.length > 0){\r\n                req.description = newDescription;\r\n            }\r\n            const res = await axios.post(`/hr/createCourse`, req);\r\n            props.setComponentInMain(\"course\");\r\n            props.openAlert(\"Course Added Successfully!\" , \"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add Course </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editName\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editCode\"\r\n                        label=\"Code\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                   <Autocomplete\r\n                        multiple\r\n                        options={props.departments}\r\n                        getOptionLabel={(option) => option.name}\r\n                        onChange={(event, value) => {\r\n                            value = value.map(elm => elm.ID);\r\n                            setNewDepartments(value);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                label=\"Departments\"\r\n                            />\r\n                        )}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editDescription\"\r\n                        label=\"Description\"\r\n                        multiline\r\n                        rowsMax = {4}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleAdd} color=\"primary\">\r\n                        Add\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\editProfileForm.js",["1082","1083"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport AlertMessage from './Alert_Message.js';\r\n\r\nexport default function EditProfileForm(props) {\r\n    const handleClickOpen = () => {\r\n        props.handleOpenEdit();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.handleCloseEdit();\r\n    };\r\n\r\n    const handleUpdate = async () => {\r\n        const newMail = document.getElementById(\"editEmail\").value;\r\n        try {\r\n            const req = { email: newMail };\r\n            const res = await axios.post('updateMyProfile', req);\r\n            await props.setComponentInMain(\"profile\");\r\n            props.openAlert(res.data , \"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data,\"error\");\r\n        }\r\n        handleClose();\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Edit Profile </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"editEmail\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleUpdate} color=\"primary\">\r\n                        update\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\updateAcademicMemberForm.js",["1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nexport default function UpdateInstructorForm(props) {\r\n    const [chosenSlot, setChosenSlot] = React.useState(null);\r\n\r\n    const handleClose = () => {\r\n        setChosenSlot(null);\r\n        props.handleClose();\r\n    };\r\n    const handleUpdate = async () => {\r\n\r\n       \r\n        console.log(props.courseID,props.slotID, \"in handle add form\")\r\n        \r\n        // old info\r\n        console.log(props.instructorID,\" the instructor ID\");\r\n        \r\n        const instructorID=parseInt((props.instructorID).split(\"-\")[1]);\r\n        const courseID = parseInt((props.courseID));\r\n        const slotID = parseInt((props.slotID));\r\n        //new info\r\n        //const newCourseID = parseInt(chosenCourse.ID)\r\n        const newSlotID = parseInt(chosenSlot.slotID)\r\n        \r\n        props.setBackdropIsOpen(true);\r\n        \r\n\r\n        try {\r\n            const req = {\r\n                courseID: courseID,\r\n                oldSlotID:slotID,\r\n                newSlotID:newSlotID,\r\n                academicMemberID: parseInt(instructorID)\r\n            };\r\n            const res = await axios.put('/ci/updateAcademicMemberslotAssignment', req);\r\n            console.log(\"before call update\")\r\n             const departmentCourses=await props.updateDepartmentCourses();\r\n       \r\n            if(props.selectedCourse.courseID!=\"loading ID\"){\r\n                const sc = departmentCourses.find((c) => {\r\n                    return c.courseID == props.selectedCourseID\r\n                });\r\n                props.setSelectedCourse(sc);\r\n                \r\n                \r\n\r\n                props.mapToScheduleObj(sc?.courseSlots, props.setCurrentSlot, props.setCurrentCourse\r\n                    , props.setOpenAssignAcademicMemberForm,props.setCurrentInstructorID, props.setOpenUpdateAcademicMemberForm,\r\n                    props.handleDeleteAssignMemberToSlot,props.openAlert)\r\n            }else{\r\n                console.log(\"initially\")\r\n            }\r\n\r\n\r\n            props.setComponentInMain(\"instructorCourses\");\r\n        } catch (err) {\r\n            console.log(err);\r\n            props.openAlert(err.response.data);\r\n        }\r\n        props.setBackdropIsOpen(false)\r\n        \r\n        handleClose();\r\n    }\r\n    return (\r\n<div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Update academic member slot assignment </DialogTitle>\r\n                <DialogContent>\r\n                <Autocomplete\r\n                    id=\"UpdateAcademicMemberAssignmentComboBox\"\r\n                    // options={(props.academicMembers).filter((mem)=>{\r\n                    //     if(!props.course)return true;\r\n                    //     return !props.course.instructor.map(x=>x.ID).includes(mem.ID)})}\r\n                  options={(props.selectedCourse.courseSlots).filter((slot)=>{return slot.instructorID==\"\"}).sort((a,b)=>{\r\n                    const getDayNumber=(day)=>{\r\n                    if(day==\"saturday\")\r\n                    return 0;\r\n                    if(day==\"sunday\")\r\n                    return 1;\r\n                    if(day==\"monday\")\r\n                    return 2;\r\n                    if(day==\"tuesday\")\r\n                    return 3;\r\n                    if(day==\"wednesday\")\r\n                    return 4;\r\n                    if(day==\"thursday\")\r\n                    return 5;\r\n                    if(day==\"friday\")\r\n                    return 6;\r\n                return -1;    \r\n                }\r\n                      return (a.day==b.day)?a.slotNumber-b.slotNumber:(getDayNumber(a.day)-getDayNumber(b.day));\r\n                  })}\r\n                    getOptionLabel={(option) =>(\" Day: \"+ option.day+\" Slot Number: \" + option.slotNumber + \" Location: \"+ option.locationName )}\r\n                    style={{ width: 400 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"Course Slots\" variant=\"outlined\" />}\r\n                    onChange={(event, newValue) => {\r\n                        setChosenSlot(newValue);\r\n                    }}\r\n\r\n                />\r\n                   \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button disabled={chosenSlot==null } onClick={handleUpdate} color=\"primary\">\r\n                        Update\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\CICoursesCard.js",["1100","1101","1102"],"import Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 1px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n    },\r\n    pos: {\r\n    },\r\n});\r\nexport default function SimpleCard(props) {\r\n    const classes = useStyles();\r\n\r\n    const handleOpenAssignMemberToSlot = (event) => {\r\n        const courseID = event.currentTarget.id.split('_')[3];\r\n        const slotID = event.currentTarget.id.split('_')[5];\r\n        // const courseID = props.currentCourse;\r\n        // const slotID = props.currentSlot;    \r\n\r\n        console.log(event.currentTarget.id.split('_'));\r\n        console.log(courseID, \"in handle add\");\r\n        props.setCurrentCourse(courseID)\r\n        props.setCurrentSlot(slotID)\r\n        props.setOpenAssignAcademicMemberForm(true);\r\n    }\r\n    const handleUpdateAssignMemberToSlot = (event) => {\r\n        const currentInstructorID=event.currentTarget.id.split('_')[1];\r\n        const courseID = event.currentTarget.id.split('_')[3];\r\n        const slotID = event.currentTarget.id.split('_')[5];\r\n        // const courseID = props.currentCourse;\r\n        // const slotID = props.currentSlot;    \r\n        \r\n        console.log(event.currentTarget.id.split('_'));\r\n        console.log(courseID, \"in handle update\");\r\n        props.setCurrentCourse(courseID)\r\n        props.setCurrentSlot(slotID)\r\n        props.setCurrentInstructorID(currentInstructorID);\r\n        props.setOpenUpdateAcademicMemberForm(true);\r\n    }\r\n\r\n    const handleDeleteAssignMemberToSlot = async (event) => {\r\n        const currentInstructorID=event.currentTarget.id.split('_')[1];\r\n        const courseID = event.currentTarget.id.split('_')[3];\r\n        const slotID = event.currentTarget.id.split('_')[5];\r\n    \r\n        console.log(event.currentTarget.id.split('_'));\r\n        console.log(courseID, \"in handle delete\");\r\n        try{\r\n       await props.handleDeleteAssignMemberToSlot (slotID,courseID,currentInstructorID);\r\n        }catch(err){\r\n      //      alert(err.response.data)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Typography className={classes.pos} >\r\n                        <b>{props.instructorName}</b>\r\n                    </Typography>\r\n\r\n                    <Typography className={classes.pos} >\r\n                        <b>{props.instructorID}</b>\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                        {props.locationName}\r\n                    </Typography>\r\n                    <Tooltip title=\"Assign an academic member\">\r\n                        <IconButton\r\n                            style={props.instructorID!=\"\"?{display:'none'}:{}}\r\n                            aria-label=\"account of current user\"\r\n                            aria-haspopup=\"true\"\r\n                            color='primary'\r\n                            id={\"ACDEMICMEMBERID_\" + props.instructorID + \"_COURSEID_\" + props.courseID + \"_slotID_\" + props.slotID}\r\n                            onClick={handleOpenAssignMemberToSlot}\r\n                        >\r\n                            <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }} />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"update an academic member\">\r\n                        <IconButton\r\n                            style={props.instructorID==\"\"?{display:'none'}:{}}\r\n                            aria-label=\"account of current user\"\r\n                            aria-haspopup=\"true\"\r\n                            color='primary'\r\n                            id={\"UPDATEACDEMICMEMBERID_\" + props.instructorID + \"_COURSEID_\" + props.courseID + \"_slotID_\" + props.slotID}\r\n                            onClick={handleUpdateAssignMemberToSlot}\r\n                        >\r\n                            <EditIcon style={{ fontSize: 25, opacity: 0.8 }} />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip title=\"delete an academic member\">\r\n                        <IconButton\r\n                            style={props.instructorID==\"\"?{display:'none'}:{}}\r\n                            aria-label=\"account of current user\"\r\n                            aria-haspopup=\"true\"\r\n                            color='primary'\r\n                            id={\"DELETEACDEMICMEMBERID_\" + props.instructorID + \"_COURSEID_\" + props.courseID + \"_slotID_\" + props.slotID}\r\n                            onClick={handleDeleteAssignMemberToSlot}\r\n                        >\r\n                            <DeleteIcon style={{ fontSize: 25, opacity: 0.8 }} />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\ci\\assignAcademicMemberForm.js",["1103","1104","1105","1106","1107","1108","1109"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nexport default function AssignInstructorForm(props) {\r\n    const [chosenInstructor, setChosenInstructor] = React.useState(null);\r\n\r\n    const handleClose = () => {\r\n        setChosenInstructor(null);\r\n        props.handleClose();\r\n    };\r\n    const handleAdd = async () => {\r\n        const instructorID = chosenInstructor.ID;\r\n\r\n        console.log(props.courseID, props.slotID, \"in handle add form\")\r\n        const courseID = parseInt((props.courseID));\r\n        const slotID = parseInt((props.slotID));\r\n       props.setBackdropIsOpen(true)\r\n        \r\n        try {\r\n            const req = {\r\n                courseID: courseID,\r\n                slotID: slotID,\r\n                academicMemberID: parseInt(instructorID)\r\n            };\r\n            const res = await axios.post('/ci/assignAcademicMemberToSlot', req);\r\n            console.log(\"before call update\")\r\n            const departmentCourses = await props.updateDepartmentCourses();\r\n\r\n            if (props.selectedCourse.courseID != \"loading ID\") {\r\n                const sc = departmentCourses.find((c) => {\r\n                    return c.courseID == props.selectedCourseID\r\n                });\r\n                props.setSelectedCourse(sc);\r\n\r\n                props.mapToScheduleObj(sc?.courseSlots, props.setCurrentSlot, props.setCurrentCourse,\r\n                    props.setOpenAssignAcademicMemberForm, props.setCurrentInstructorID, props.setOpenUpdateAcademicMemberForm,\r\n                    props.handleDeleteAssignMemberToSlot,props.openAlert)\r\n            } else {\r\n                console.log(\"initially\")\r\n            }\r\n\r\n\r\n            props.setComponentInMain(\"instructorCourses\");\r\n        } catch (err) {\r\n            console.log(err);\r\n            props.openAlert(err.response.data);\r\n        }\r\n        props.setBackdropIsOpen(false)\r\n        \r\n        handleClose();\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Assign academic member to this slot </DialogTitle>\r\n                <DialogContent>\r\n                    <Autocomplete\r\n                        id=\"AddCourseInstructorComboBox\"\r\n                        // options={(props.academicMembers).filter((mem)=>{\r\n                        //     if(!props.course)return true;\r\n                        //     return !props.course.instructor.map(x=>x.ID).includes(mem.ID)})}\r\n                        options={(props.academicMembers)}\r\n\r\n                        getOptionLabel={(option) => option.name}\r\n                        style={{ width: 300 }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Academic Members\" variant=\"outlined\" />}\r\n                        onChange={(event, newValue) => {\r\n                            setChosenInstructor(newValue);\r\n                        }}\r\n\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button disabled={chosenInstructor == null} onClick={handleAdd} color=\"primary\">\r\n                        Add\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\cc\\Slot_Linking_Request\\Schedule_Requests_Card.js",["1110","1111","1112","1113","1114"],"import { Box, Container } from \"@material-ui/core\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from \"react\";\r\nimport Schedule_Slot_Card from \"./Schedule_Slot_Card\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.common.black,\r\n    },\r\n    body: {\r\n        \"&:first-child \": {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        fontSize: 14\r\n    },\r\n\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        \"&:nth-of-type(odd)\": {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    }\r\n}))(TableRow);\r\n\r\n\r\nlet scheduleObj = {\r\n    'saturday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'sunday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'monday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'tuesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'wednesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'thursday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'friday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n}\r\n\r\nconst makeCard = (arrayOfCards) => {\r\n    //return (<Box></Box>)\r\n    if (!arrayOfCards) return (<Box></Box>)\r\n    const g = (<Grid container display=\"flex\" direction=\"column\" justifyContent=\"space-between\">\r\n        {arrayOfCards.map((card) => (\r\n            <Grid item>{card}<br /></Grid>)\r\n        )\r\n        }\r\n    </Grid>);\r\n    return g;\r\n}\r\n\r\nfunction mapToScheduleObj(props) {\r\n    \r\n    scheduleObj = {\r\n        'saturday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'sunday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'monday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'tuesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'wednesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'thursday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'friday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    }\r\n    \r\n    scheduleRow = [];\r\n    for (const entry of props.requests) {\r\n        console.log(entry);\r\n        const slot = (props.slots.filter(elm => elm.ID == entry.slotID))[0];\r\n        console.log(slot);\r\n        const card = <Schedule_Slot_Card\r\n            slot = {slot} // slot model\r\n            courseID = {props.courseID}\r\n            request = {entry}\r\n            cardType=\"replacement\"\r\n            locations = {props.locations}\r\n            academicMembers = {props.academicMembers}\r\n            handleSlotLinkingRequest = {props.handleSlotLinkingRequest}\r\n            handleSlots = {props.handleSlots}\r\n            openAlert = {props.openAlert}\r\n            setComponentInMain={props.setComponentInMain}\r\n        />;\r\n        scheduleObj[slot.day][slot.slotNumber - 1].push(card);\r\n    }\r\n\r\n    for (const entry in scheduleObj) {\r\n        scheduleRow.push(createData(entry, makeCard(scheduleObj[entry][0]), makeCard(scheduleObj[entry][1]),\r\n            makeCard(scheduleObj[entry][2]), makeCard(scheduleObj[entry][3]), makeCard(scheduleObj[entry][4]),\r\n            makeCard(scheduleObj[entry][5]), makeCard(scheduleObj[entry][6])));\r\n    }\r\n\r\n    return scheduleRow;\r\n}\r\n\r\nfunction createData(day, first, second, third, fourth, fifth) {\r\n    return { day, first, second, third, fourth, fifth };\r\n}\r\n\r\nlet scheduleRow = [];\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700\r\n    },\r\n    tableRightBorder:\r\n        { borderWidth: 1, borderColor: 'rgba(128,128,128,0.2)', borderStyle: 'solid' }\r\n});\r\n\r\nexport default function CustomizedTables(props) {\r\n    const classes = useStyles();\r\n    scheduleRow =  mapToScheduleObj(props);\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{ marginTop: \"30px\" }} >\r\n            <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Slot Linking Requests</b>\r\n                </Typography><br/>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>&nbsp;</StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>First Period</b></StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>Second Period</b></StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>Third Period</b></StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>Fourth Period</b></StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>Fifth Period</b></StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(scheduleRow).map((row) => (\r\n                            <StyledTableRow key={row.name}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    <b>{row.day.charAt(0).toUpperCase() + row.day.slice(1)}</b>\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.first}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.second}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.third}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.fourth}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.fifth}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Container>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\cc\\Slot_Handler\\Slot_Card.js",["1115","1116","1117","1118","1119"],"import { Box, Container } from \"@material-ui/core\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\nimport Schedule_Slot_Card from \"./Schedule_SLot_Card.js\";\r\nimport AddSlotForm from './Add_Slot_Form';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.common.black,\r\n    },\r\n    body: {\r\n        \"&:first-child \": {\r\n            backgroundColor: theme.palette.primary.light,\r\n        },\r\n        fontSize: 14\r\n    },\r\n\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        \"&:nth-of-type(odd)\": {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    }\r\n}))(TableRow);\r\n\r\nlet scheduleObj = {\r\n    'saturday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'sunday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'monday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'tuesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'wednesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'thursday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    'friday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n}\r\n\r\nconst makeCard = (arrayOfCards) => {\r\n    //return (<Box></Box>)\r\n    if (!arrayOfCards) return (<Box></Box>)\r\n    const g = (<Grid container display=\"flex\" direction=\"column\" justifyContent=\"space-between\">\r\n        {arrayOfCards.map((card) => (\r\n            <Grid item>{card}<br /></Grid>)\r\n        )\r\n        }\r\n    </Grid>);\r\n    return g;\r\n}\r\n\r\nfunction mapToScheduleObj(prop) {\r\n    \r\n    scheduleObj = {\r\n        'saturday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'sunday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'monday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'tuesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'wednesday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'thursday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n        'friday': [[<div />], [<div />], [<div />], [<div />], [<div />]],\r\n    }\r\n    \r\n    if (!prop.schedule || !scheduleObj) return;\r\n\r\n    scheduleRow = [];\r\n    for (const entry of prop.schedule) {\r\n        console.log(entry);\r\n        const card = <Schedule_Slot_Card\r\n            slot = {entry}\r\n            courseID = {prop.courseID}\r\n            cardType=\"regularSlot\"\r\n            locations = {prop.locations}\r\n            academicMembers = {prop.academicMembers}\r\n            handleSlots = {prop.handleSlots}\r\n            openAlert = {prop.openAlert}\r\n            setComponentInMain={prop.setComponentInMain}\r\n        />;\r\n        scheduleObj[entry.day][entry.slotNumber - 1].push(card);\r\n    }\r\n\r\n    for (const entry in scheduleObj) {\r\n        scheduleRow.push(createData(entry, makeCard(scheduleObj[entry][0]), makeCard(scheduleObj[entry][1]),\r\n            makeCard(scheduleObj[entry][2]), makeCard(scheduleObj[entry][3]), makeCard(scheduleObj[entry][4]),\r\n            makeCard(scheduleObj[entry][5]), makeCard(scheduleObj[entry][6])));\r\n    }\r\n    return scheduleRow;\r\n}\r\nfunction createData(day, first, second, third, fourth, fifth) {\r\n    return { day, first, second, third, fourth, fifth };\r\n}\r\n\r\nlet scheduleRow = [];\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700\r\n    },\r\n    tableRightBorder:\r\n        { borderWidth: 1, borderColor: 'rgba(128,128,128,0.2)', borderStyle: 'solid' }\r\n});\r\n\r\nexport default function CustomizedTables(props) {\r\n    const classes = useStyles();\r\n    scheduleRow = mapToScheduleObj(props);\r\n    const [openAddSlot, setOpenAddSlot] = React.useState(false);\r\n\r\n    const handleOpenAdd = () => {\r\n        setOpenAddSlot(true);\r\n    }\r\n\r\n    const handleCloseAdd = () => {\r\n        setOpenAddSlot(false);\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{ marginTop: \"30px\" }} >\r\n            <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                    <b>Course Slots</b>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-haspopup=\"true\"\r\n                        color='primary'\r\n                        onClick={handleOpenAdd}\r\n                    >\r\n                        <AddCircleIcon style={{ fontSize: 25, opacity: 0.8 }}\r\n                        />\r\n                    </IconButton>\r\n                </Typography><br/>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>&nbsp;</StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>First Period</b></StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>Second Period</b></StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>Third Period</b></StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>Fourth Period</b></StyledTableCell>\r\n                            <StyledTableCell align=\"center\"><b>Fifth Period</b></StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(scheduleRow).map((row) => (\r\n                            <StyledTableRow key={row.name}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    <b>{row.day.charAt(0).toUpperCase() + row.day.slice(1)}</b>\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.first}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.second}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.third}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.fourth}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\" className={classes.tableRightBorder}>{row.fifth}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <AddSlotForm\r\n                open={openAddSlot}\r\n                handleOpenAdd={handleOpenAdd}\r\n                handleCloseAdd={handleCloseAdd}\r\n                handleSlots = {props.handleSlots}\r\n                locations = {props.locations}\r\n                courseID = {props.courseID}\r\n                openAlert = {props.openAlert}\r\n                setComponentInMain={props.setComponentInMain} />\r\n        </Container>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\slideBars\\HR_SlideBar.js",["1120","1121","1122","1123"],"import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AddLocationIcon from '@material-ui/icons/AddLocation';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport React from 'react';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleLocation = () => {\r\n        props.setComponentInMain(\"location\");\r\n    }\r\n\r\n    const handleFaculties = () => {\r\n        props.setComponentInMain(\"faculty\");\r\n    }\r\n\r\n    const handleDepartments= () => {\r\n        props.setComponentInMain(\"department\");\r\n    }\r\n\r\n    const handleCourses= () => {\r\n        props.setComponentInMain(\"course\");\r\n    }\r\n\r\n    const handleStaffMembers = () =>{\r\n        props.setComponentInMain(\"staffMember\");\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={props.open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button onClick={handleLocation}>\r\n                        <ListItemIcon><AddLocationIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Locations\"  />\r\n                    </ListItem>\r\n                    <ListItem button onClick={handleFaculties}>\r\n                        <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Faculties\"  />\r\n                    </ListItem>\r\n                    <ListItem button onClick={handleDepartments}>\r\n                        <ListItemIcon><LocalLibraryIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Departments\"  />\r\n                    </ListItem>\r\n                    <ListItem button onClick={handleCourses}>\r\n                        <ListItemIcon><MenuBookIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Courses\"  />\r\n                    </ListItem>\r\n                    <ListItem button onClick={handleStaffMembers}>\r\n                        <ListItemIcon><PeopleAltIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"Staff Members\"  />\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\slideBars\\Hod_SlideBar.js",["1124","1125","1126","1127","1128","1129"],"import Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport React from 'react';\r\nimport Academic_Member_List from '../routes/ac/ac_List.js';\r\nimport Course_Instructor_List from '../routes/ci/CI_List.js';\r\nimport {useHistory} from 'react-router-dom'\r\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\n\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  accordionStyle: {\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCourseInsructor = () => {\r\n    props.setComponentInMain(\"manageCourseInstructors\");\r\n  }\r\n\r\n  const handleViewStaffProfiles = () => {\r\n    console.log(\"clicked on view staff profile\")\r\n    props.updateRequestStaffProfile();\r\n    props.setComponentInMain(\"viewStaffProfiles\");\r\n  }\r\n\r\n  const handleChangeDayOff = async () => {\r\n    console.log(\"cliked on change day off\")\r\n    await (props.updateRequests());\r\n    props.setComponentInMain(\"changeDayOffRequest\");\r\n  }\r\n\r\n  const handleAnnualLeaveRequest = async () => {\r\n    console.log(\"cliked on annual leave request\")\r\n    await (props.updateRequests());\r\n    props.setComponentInMain(\"annualLeaveRequest\");\r\n  }\r\n\r\n  const handleAccidentalLeaveRequest = async () => {\r\n    console.log(\"cliked on accidental leave request\")\r\n    await (props.updateRequests());\r\n    props.setComponentInMain(\"accidentalLeaveRequest\");\r\n  }\r\n\r\n  const handleSickLeaveRequest = async () => {\r\n    console.log(\"cliked on Sick leave request\")\r\n    await (props.updateRequests());\r\n    props.setComponentInMain(\"sickLeaveRequest\");\r\n  }\r\n\r\n  const handleMaternityLeaveRequest = async () => {\r\n    console.log(\"cliked on maternity leave request\")\r\n    await (props.updateRequests());\r\n    props.setComponentInMain(\"maternityLeaveRequest\");\r\n  }\r\n\r\n  const handleCompensationLeaveRequest = async () => {\r\n    console.log(\"cliked on Compensation leave request\")\r\n    await (props.updateRequests());\r\n    props.setComponentInMain(\"compensationLeaveRequest\");\r\n  }\r\n\r\n  const handleDepartmentCourses = async () => {\r\n    console.log(\"cliked on handle department courses\")\r\n   // await (props.requestAllDepartmentCourses());\r\n    props.setComponentInMain(\"departmentCourses\");\r\n    console.log(\"passed set comp in main\")\r\n  }\r\n  const history = useHistory();\r\n  const handleCIFunctionalities=()=>{\r\n    let path='/ci';\r\n    history.push(path);\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n        </div>\r\n       <List>\r\n        <ListItem button key=\"Course Instructor Functionalities\" color=\"primary\" onClick={handleCIFunctionalities}>\r\n            <ListItemIcon> <SwapHorizIcon /></ListItemIcon>\r\n            <ListItemText primary={\"Course Instructor Functionalities\"} />\r\n          </ListItem>\r\n          </List>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button key=\"Manage Course Instructors\" onClick={handleCourseInsructor}>\r\n            <ListItemIcon> <AssignmentIndIcon /></ListItemIcon>\r\n            <ListItemText primary={\"Manage Course Instructors\"} />\r\n          </ListItem>\r\n          <ListItem button key=\"View Staff Profiles\" onClick={handleViewStaffProfiles}>\r\n            <ListItemIcon> <SupervisorAccountIcon /></ListItemIcon>\r\n            <ListItemText primary={\"View Staff Profiles\"} />\r\n          </ListItem>\r\n          <ListItem button key=\"Department courses\" onClick={handleDepartmentCourses}>\r\n            <ListItemIcon> <MenuBookIcon /></ListItemIcon>\r\n            <ListItemText primary={\"Department courses\"} />\r\n          </ListItem>\r\n        </List>\r\n        <Accordion className={classes.accordionStyle}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n          >\r\n            <ListItemIcon ><CallReceivedIcon /></ListItemIcon>\r\n            <ListItemText style={{ textAlign: \"left\" }} className={classes.menuButton} primary={\"Requests\"} />\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n              <ListItem button key=\"test1\" onClick={handleChangeDayOff}>\r\n                <ListItemText primary={\"Change day off\"} />\r\n              </ListItem>\r\n              <ListItem button key=\"test 2\" onClick={handleAnnualLeaveRequest}>\r\n                <ListItemText primary={\"Annual leaves\"} />\r\n              </ListItem>\r\n              <ListItem button key=\"test 3\" onClick={handleAccidentalLeaveRequest}>\r\n                <ListItemText primary={\"Accidental leaves\"} />\r\n              </ListItem>\r\n              <ListItem button key=\"test 4\" onClick={handleSickLeaveRequest}>\r\n                <ListItemText primary={\"Sick leaves\"} />\r\n              </ListItem>\r\n              <ListItem button key=\"test 5\" onClick={handleMaternityLeaveRequest}>\r\n                <ListItemText primary={\"Maternity leaves\"} />\r\n              </ListItem>\r\n              <ListItem button key=\"test 6\" onClick={handleCompensationLeaveRequest}>\r\n                <ListItemText primary={\"Compensation leaves\"} />\r\n              </ListItem>\r\n            </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        <Academic_Member_List setComponentInMain={props.setComponentInMain} />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\slideBars\\CI_SlideBar.js",["1130","1131","1132"],"import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport Academic_Member_List from '../routes/ac/ac_List.js';\r\nimport Course_Instructor_List from '../routes/ci/CI_List.js';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  accordionStyle: {\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history=useHistory();\r\n  const handleHODFunctionalities=()=>{\r\n   let path='/hod';\r\n   history.push(path);\r\n }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n        </div>\r\n        <Divider />\r\n        <Course_Instructor_List setComponentInMain={props.setComponentInMain} updateRequestStaffProfile={props.updateRequestStaffProfile} updateRequestCourseStaff={props.updateRequestCourseStaff} handleHODFunctionalities={handleHODFunctionalities}/>\r\n        <Academic_Member_List setComponentInMain={props.setComponentInMain}/>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\DropdownList_NavBar.js",["1133","1134"],"import IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport setAuthToken from \"../actions/setAuthToken.js\";\r\n\r\nexport default function SimpleMenu(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [isLoggedOut, setIsLoggedOut] = React.useState(false);\r\n    const [resetPasswordFlag , setResetPasswordFlag] = React.useState(false);\r\n\r\n   \r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleResetPassword = (event) =>{\r\n        setResetPasswordFlag(true);\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleClose = async (event) => {\r\n        let res;\r\n        try {\r\n            switch (event.target.id) {\r\n                case \"signIn\": {\r\n                    res = await axios.post('/signIn');\r\n                    props.openAlert(\"Signing in Successfully !\" ,\"success\");\r\n                    break;\r\n                }\r\n                case \"signOut\": {\r\n                    res = await axios.post('/signOut');\r\n                    props.openAlert(\"Signing out Successfully !\" ,\"success\");\r\n                    break;\r\n                }\r\n                case \"logout\": {\r\n                    res = await axios.post('/logout');\r\n                    setIsLoggedOut(true);\r\n                    localStorage.removeItem('auth-token');\r\n                    setAuthToken();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        catch (err) {\r\n            props.openAlert(err.response.data,\"error\");\r\n        }\r\n        setAnchorEl(null);\r\n    };\r\n    if (isLoggedOut) {\r\n        return <Redirect to='/' />;\r\n    }\r\n    if(resetPasswordFlag){\r\n        return <Redirect to='/resetPassword' />;\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div>\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                    onClick={handleClick}\r\n                >\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    <MenuItem id=\"resetPassword\" onClick={handleResetPassword}>Reset Password</MenuItem>\r\n                    <MenuItem id=\"signIn\" onClick={handleClose}>Sign in</MenuItem>\r\n                    <MenuItem id=\"signOut\" onClick={handleClose}>Sign out</MenuItem>\r\n                    <MenuItem id=\"logout\" onClick={handleClose}>Logout</MenuItem>\r\n                </Menu>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\slideBars\\CC_SlideBar.js",["1135","1136","1137","1138","1139"],"import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport React from 'react';\r\nimport Academic_Member_List from '../routes/ac/ac_List.js';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  accordionStyle: {\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSlots = () => {\r\n    props.setComponentInMain(\"slot\");\r\n  }\r\n\r\n  const handleSlotLinkingRequests = () => {\r\n    props.setComponentInMain(\"slotLinkingRequest\");\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={handleSlots}>\r\n            <ListItemIcon> <MenuBookIcon /></ListItemIcon>\r\n            <ListItemText primary={\"Course Slots\"}  />\r\n          </ListItem>\r\n          <ListItem button onClick={handleSlotLinkingRequests}>\r\n            <ListItemIcon> <CallReceivedIcon /></ListItemIcon>\r\n            <ListItemText primary={\"Slot Linking Requests\"} />\r\n          </ListItem>\r\n        </List>\r\n        <Academic_Member_List setComponentInMain={props.setComponentInMain} />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\DropdownList_Notifications.js",["1140","1141","1142"],"import Badge from '@material-ui/core/Badge';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function SimpleMenu() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [isLoggedOut, setIsLoggedOut] = React.useState(false);\r\n    const [notifications, setNotifications] = React.useState([]);\r\n\r\n    const handleClick = async (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        const res = await axios.get('ac/getAllNotifications');\r\n        setNotifications(res.data.sort((a, b) => b.date > a.date));\r\n    };\r\n\r\n    const periodic = (() => {\r\n        setInterval(async () => {\r\n            let res = await axios.get('ac/getAllNotifications');\r\n            res = res.data.sort((a, b) => b.date > a.date);\r\n            const resJSON = JSON.stringify(res);\r\n            if (resJSON != JSON.stringify(notifications))\r\n                setNotifications(res);\r\n\r\n        }, 10_000)\r\n    })();\r\n\r\n    const handleClose = async (event) => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    if (isLoggedOut) {\r\n        return <Redirect to='/' />;\r\n    }\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                onClick={handleClick}\r\n                aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                <Badge badgeContent={0} color=\"secondary\">\r\n                    <NotificationsIcon />\r\n                </Badge>\r\n            </IconButton>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {\r\n                    notifications.map((mem) => {\r\n                        return (\r\n                            <div>\r\n                                <MenuItem>\r\n                                    <p>\r\n                                        <b>{mem.senderName + \" : \"}\r\n                                        </b>\r\n                                    </p>\r\n                                    <p>{mem.msg}</p>\r\n                                </MenuItem>\r\n                            </div>);\r\n                    })\r\n                }\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\cc\\Slot_Handler\\Schedule_SLot_Card.js",["1143","1144","1145","1146","1147","1148","1149","1150","1151"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FindReplaceIcon from '@material-ui/icons/FindReplace';\r\nimport { Box, Collapse, Tooltip } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport EditSlotForm from './Edit_Slot_Form';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width : 160\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n    },\r\n    title: {\r\n    },\r\n    pos: {\r\n    },\r\n    pendingCard: {\r\n        backgroundColor: \"#ffffcc\",\r\n    },\r\n    acceptedCard: {\r\n        backgroundColor: \"#ccffcc\",\r\n    },\r\n    rejectedCard: {\r\n        backgroundColor: \"#ffcccc\",\r\n    }\r\n});\r\n\r\nconst getInstructorName = (academicMembers,ID) =>{\r\n    const member = academicMembers.filter(elm => elm.ID == ID);\r\n    return member.length > 0 ? member[0].name : \"\";\r\n}\r\n\r\nexport default function SimpleCard(props) {\r\n    const classes = useStyles();\r\n    const [openUpdateSlot, setOpenUpdateSlot] = React.useState(false);    \r\n    const [updatedSlot, setUpdatedSlot] = React.useState({});\r\n\r\n    const handleOpenEdit = (event) => {\r\n        setOpenUpdateSlot(true);\r\n    }\r\n    const handleCloseEdit = () => {\r\n        setOpenUpdateSlot(false);\r\n    }\r\n    const handleDeleteSlot = async (event) => {\r\n        const slotID = event.currentTarget.id.split('_')[1];\r\n        const res = await axios.delete(`/cc/deleteSlot/${props.courseID}/${slotID}`);\r\n        props.handleSlots({slotID : slotID},2);\r\n        props.setComponentInMain(\"slot\");\r\n        props.openAlert(\"Slot has been deleted Successfully!\",\"success\");\r\n    }\r\n    const handleUpdateSlot = async (event) => {\r\n        const slotID = event.currentTarget.id.split('_')[1];\r\n        setUpdatedSlot(props.slot);\r\n        setOpenUpdateSlot(true);\r\n    }\r\n\r\n    const getSlotLocation = (ID) => {\r\n        const locations = props.locations.filter(elm => elm.ID == ID);\r\n        return (locations.length > 0 )? locations[0].name : undefined;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n                <Card className={classes.root}>\r\n                    <CardContent style={{margin : \"0px\",padding : \"7px\"}} >\r\n                        <Box display=\"flex\" flexDirection=\"row\" style={{margin : \"0px\",padding : \"0px\"}}>\r\n                            <Box style={{margin : \"0px\",padding : \"0px\"}}>\r\n                                <Typography className={classes.pos} >\r\n                                    <b>{props.slot.courseName}</b>\r\n                                </Typography>\r\n                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                    {getSlotLocation(props.slot.locationID)}\r\n                                </Typography>\r\n                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                    {getInstructorName(props.academicMembers,props.slot.instructor)}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box style={{margin : \"0px\",padding : \"0px\"}} >\r\n                                    <CardActions style={{margin : \"0px\",padding : \"0px\"}}>\r\n                                        <Tooltip title=\"Update Slot\">\r\n                                            <Button\r\n                                            id = {\"UPDATE_\" + props.slot.ID}\r\n                                            style={{margin : \"0px\",padding : \"0px\" , minWidth : \"40px\"}} \r\n                                            size=\"small\" color=\"primary\"\r\n                                            onClick={handleUpdateSlot}><EditIcon />\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                        <Tooltip title=\"Delete Slot\">\r\n                                            <Button \r\n                                            id = {\"DELETE_\" + props.slot.ID}\r\n                                            style={{margin : \"0px\",padding : \"0px\", minWidth : \"40px\"}} \r\n                                            size=\"small\" color=\"primary\" \r\n                                            onClick={handleDeleteSlot}><DeleteIcon />\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </CardActions>\r\n                            </Box>\r\n                        </Box>\r\n                    </CardContent>\r\n                    <EditSlotForm\r\n                        open={openUpdateSlot}\r\n                        slot = {updatedSlot}\r\n                        handleOpen = {handleOpenEdit}\r\n                        handleClose={handleCloseEdit}\r\n                        locations = {props.locations}\r\n                        handleSlots = {props.handleSlots}\r\n                        openAlert = {props.openAlert}\r\n                        setComponentInMain={props.setComponentInMain}\r\n                    />\r\n                </Card>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\cc\\Slot_Handler\\Add_Slot_Form.js",["1152","1153"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function AddSlotForm(props) {\r\n    const classes = useStyles();\r\n\r\n    const [day, setDay] = React.useState(null);\r\n    const [slotNumber , setSlotNumber] = React.useState(null);\r\n    const [location , setLocation] = React.useState(null);\r\n\r\n    const handleClickOpen = () => {\r\n        props.handleOpenAdd();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setDay(null);setSlotNumber(null);setLocation(null);\r\n        props.handleCloseAdd();\r\n    };\r\n\r\n    const handleAddSlot = async () => {\r\n        try {\r\n            const req = {\r\n                courseID : props.courseID,\r\n                slot : {\r\n                    slotNumber : slotNumber,\r\n                    day : day ,\r\n                    locationID : location\r\n                }\r\n            };\r\n            const res = await axios.post(`/cc/createSlot`, req);\r\n            console.log(res.data);\r\n            await props.handleSlots(res.data,0);\r\n            await props.setComponentInMain(\"slot\");\r\n            props.openAlert(\"Slot has been deleted Successfully!\",\"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n        handleClose();\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add Slot </DialogTitle>\r\n                <DialogContent>\r\n                    <label><b>Slot Timing</b></label>\r\n                    <RadioGroup row name=\"slotNumber\" id=\"editSlotNumber\">\r\n                        <FormControlLabel onClick={() => { setSlotNumber(1) }}\r\n                            value=\"1\" control={<Radio />} label=\"First\" />\r\n                        <FormControlLabel onClick={() => { setSlotNumber(2) }}\r\n                            value=\"2\" control={<Radio />} label=\"Second\" />\r\n                        <FormControlLabel onClick={() => { setSlotNumber(3) }}\r\n                            value=\"3\" control={<Radio />} label=\"Third\" />\r\n                        <FormControlLabel onClick={() => { setSlotNumber(4) }}\r\n                            value=\"4\" control={<Radio />} label=\"Fourth\" />\r\n                        <FormControlLabel onClick={() => { setSlotNumber(5) }}\r\n                            value=\"5\" control={<Radio />} label=\"Fifth\" />\r\n                    </RadioGroup>\r\n                </DialogContent>\r\n                <DialogContent>\r\n                    <label><b>Day</b></label>\r\n                <RadioGroup row aria-label=\"position\" name=\"day\" id=\"editDay\" >\r\n                        <FormControlLabel onClick={() => { setDay(\"saturday\") }}\r\n                            value=\"saturday\" control={<Radio />} label=\"Saturday\" />\r\n                        <FormControlLabel onClick={() => { setDay(\"sunday\") }}\r\n                            value=\"sunday\" control={<Radio />} label=\"Sunday\" />\r\n                             <FormControlLabel onClick={() => { setDay(\"monday\") }}\r\n                            value=\"monday\" control={<Radio />} label=\"Monday\" />\r\n                        <FormControlLabel onClick={() => { setDay(\"tuesday\") }}\r\n                            value=\"tuesday\" control={<Radio />} label=\"Tuesday\" />\r\n                             <FormControlLabel onClick={() => { setDay(\"wednesday\") }}\r\n                            value=\"wednesday\" control={<Radio />} label=\"Wednesday\" />\r\n                        <FormControlLabel onClick={() => { setDay(\"thursday\") }}\r\n                            value=\"thursday\" control={<Radio />} label=\"Thursday\" />\r\n                    </RadioGroup>\r\n                </DialogContent>\r\n                <FormControl className={classes.formControl} style={{marginLeft : \"25px\"}}>\r\n                    <InputLabel id=\"demo-simple-select-label\" required>Location</InputLabel>\r\n                        <Select\r\n                            style={{width : \"200px\"}}\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"office\"\r\n                            value={location}\r\n                            onChange={(event) => {setLocation(event.target.value)}}\r\n                        >\r\n                            {\r\n                                props.locations.map(\r\n                                    elm => {\r\n                                        return <MenuItem value={elm.ID}>{elm.name}</MenuItem>\r\n                                    }\r\n                                )\r\n                            }\r\n                        </Select>\r\n                    </FormControl><br/>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                    <Button \r\n                    disabled = {day == null || slotNumber == null || location == null}\r\n                    onClick={handleAddSlot} color=\"primary\">Add</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\cc\\Slot_Linking_Request\\Schedule_Slot_Card.js",["1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box, Collapse, Tooltip } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width : 160\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        // margin: '0 1px',\r\n        // transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n    },\r\n    pos: {\r\n    },\r\n    pendingCard: {\r\n        backgroundColor: \"#ffffcc\",\r\n    },\r\n    acceptedCard: {\r\n        backgroundColor: \"#ccffcc\",\r\n    },\r\n    rejectedCard: {\r\n        backgroundColor: \"#ffcccc\",\r\n    }\r\n});\r\n\r\nconst getInstructorName = (academicMembers,ID) =>{\r\n    const member = academicMembers.filter(elm => elm.ID == ID);\r\n    return member.length > 0 ? member[0].name : \"\";\r\n}\r\n\r\n\r\nexport default function SimpleCard(props) {\r\n    const classes = useStyles();\r\n    const [requestStatus, setRequestStatus] = React.useState('-');\r\n\r\n    useEffect(() => {\r\n        if (props.cardType == \"replacement\" && requestStatus == \"-\")\r\n            setRequestStatus(props.request.status)\r\n    })\r\n\r\n\r\n    const handleAcceptRequest = async () => {\r\n        console.log(\"Accept\");\r\n        try {\r\n            setRequestStatus(\"accepted\")\r\n            const res = await axios.post('/cc/handleSlotLinkingRequest',\r\n                { requestID: props.request.ID, decision: 1 }\r\n            );\r\n            props.openAlert(\"Request has been accepted Successfully!\",\"success\");\r\n            await props.handleSlotLinkingRequest(props.request.ID ,1);\r\n        } catch (err) {\r\n            setRequestStatus(\"pending\")\r\n            props.openAlert(err.response.data);\r\n        }\r\n\r\n    }\r\n\r\n    const handleRejectRequest = async () => {\r\n        console.log(\"Reject\");\r\n        try {\r\n            setRequestStatus(\"rejected\")\r\n            const res = await axios.post('/cc/handleSlotLinkingRequest',\r\n                { requestID: props.request.ID, decision: 0 }\r\n            );\r\n            props.openAlert(\"Request has been rejected Successfully!\",\"success\");\r\n            await props.handleSlotLinkingRequest(props.request.ID ,0);\r\n        } catch (err) {\r\n            setRequestStatus(\"pending\")\r\n            props.openAlert(err.response.data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Tooltip title={\r\n                props.cardType == \"replacement\" ?\r\n                    (requestStatus == \"pending\" ? \"Pending Slot Linking Request\" :\r\n                        (requestStatus == \"accepted\" ? \"Accepted Slot Linking Request\" : \"Rejected Slot Linking Request\")) : \"Regular Slot\"}>\r\n\r\n                <Card className={classes.root} className={\r\n                    props.cardType == \"replacement\" ?\r\n                        (requestStatus == \"pending\" ? classes.pendingCard :\r\n                            (requestStatus == \"accepted\" ? classes.acceptedCard : classes.rejectedCard)) : \"\"}>\r\n                    <CardContent style={{margin : \"0px\",padding : \"7px\"}}>\r\n                        <Box display=\"flex\" flexDirection=\"row\"  style={{margin : \"0px\",padding : \"0px\"}}>\r\n                            <Box width=\"70%\">\r\n                                <Typography className={classes.pos} >\r\n                                    <b>{props.slot.courseName}</b>\r\n                                </Typography>\r\n                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                    <b>Location:&nbsp;</b>{props.locations.filter(elm => elm.ID == props.slot.locationID)[0].name}\r\n                                </Typography>\r\n                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                    <b>Instructor:&nbsp;</b>{getInstructorName(props.academicMembers,props.request.senderID)}\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box >\r\n                                {\r\n                                    (props.cardType == \"replacement\" && requestStatus == \"pending\") ? (<div><CardActions>\r\n                                        <Tooltip title=\"Accept\">\r\n                                            <Button\r\n                                                size=\"small\"\r\n                                                style={{ color: \"green\" }}\r\n                                                onClick={handleAcceptRequest}\r\n                                            >\r\n                                                <CheckIcon />\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </CardActions>\r\n                                        <CardActions>\r\n                                            <Tooltip title=\"Reject\">\r\n                                                <Button\r\n                                                    size=\"small\"\r\n                                                    style={{ color: \"red\" }}\r\n                                                    onClick={handleRejectRequest}\r\n                                                ><CloseIcon />\r\n                                                </Button>\r\n                                            </Tooltip>\r\n                                        </CardActions></div>) : <div />\r\n                                }\r\n                            </Box>\r\n                        </Box>\r\n                    </CardContent>\r\n                </Card>\r\n            </Tooltip>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\lenovo\\Documents\\GitHub\\-div-elopers\\client\\src\\components\\routes\\cc\\Slot_Handler\\Edit_Slot_Form.js",["1171","1172","1173","1174","1175","1176","1177"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function AddSlotForm(props) {\r\n    const classes = useStyles();\r\n\r\n    const [day, setDay] = React.useState(null);\r\n    const [slotNumber , setSlotNumber] = React.useState(null);\r\n    const [location , setLocation] = React.useState(null);\r\n\r\n    const handleClickOpen = () => {\r\n        props.handleOpen();\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setDay(null);setSlotNumber(null);\r\n        setLocation(null);\r\n        props.handleClose();\r\n    };\r\n\r\n    const handleEditSlot = async () => {\r\n        try {\r\n            const req = {};\r\n            if( day != null ){ req.day = day;}\r\n            if( slotNumber != null ) {req.slotNumber = slotNumber;}\r\n            if( location != null ) {req.location = location;}\r\n            const res = await axios.put(`/cc/updateSlot/${props.slot.courseID}/${props.slot.ID}`, req);\r\n            console.log(res.data);\r\n            const obj = res.data;\r\n            obj.courseID = props.slot.courseID;\r\n            obj.courseName = props.slot.courseName;\r\n            await props.handleSlots(obj,1);\r\n            await props.setComponentInMain(\"slot\");\r\n            props.openAlert(\"Slot has been updated Successfully\",\"success\");\r\n        } catch (err) {\r\n            props.openAlert(err.response.data);\r\n        }\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\"><b>Edit Slot</b></DialogTitle>\r\n                <DialogContent>\r\n                    <label><b>Slot Timing</b></label>\r\n                    <RadioGroup row name=\"slotNumber\" id=\"editSlotNumber\" defaultValue = {props.slot.slotNumber+\"\"}>\r\n                        <FormControlLabel onClick={() => { setSlotNumber(1) }}\r\n                            value=\"1\" control={<Radio />} label=\"First\" />\r\n                        <FormControlLabel onClick={() => { setSlotNumber(2) }}\r\n                            value=\"2\" control={<Radio />} label=\"Second\" />\r\n                        <FormControlLabel onClick={() => { setSlotNumber(3) }}\r\n                            value=\"3\" control={<Radio />} label=\"Third\" />\r\n                        <FormControlLabel onClick={() => { setSlotNumber(4) }}\r\n                            value=\"4\" control={<Radio />} label=\"Fourth\" />\r\n                        <FormControlLabel onClick={() => { setSlotNumber(5) }}\r\n                            value=\"5\" control={<Radio />} label=\"Fifth\" />\r\n                    </RadioGroup>\r\n                </DialogContent>\r\n                <DialogContent>\r\n                    <label><b>Day</b></label>\r\n                <RadioGroup row aria-label=\"position\" name=\"day\" id=\"editDay\" defaultValue = {props.slot.day}>\r\n                        <FormControlLabel onClick={() => { setDay(\"saturday\") }}\r\n                            value=\"saturday\" control={<Radio />} label=\"Saturday\" />\r\n                        <FormControlLabel onClick={() => { setDay(\"sunday\") }}\r\n                            value=\"sunday\" control={<Radio />} label=\"Sunday\" />\r\n                             <FormControlLabel onClick={() => { setDay(\"monday\") }}\r\n                            value=\"monday\" control={<Radio />} label=\"Monday\" />\r\n                        <FormControlLabel onClick={() => { setDay(\"tuesday\") }}\r\n                            value=\"tuesday\" control={<Radio />} label=\"Tuesday\" />\r\n                             <FormControlLabel onClick={() => { setDay(\"wednesday\") }}\r\n                            value=\"wednesday\" control={<Radio />} label=\"Wednesday\" />\r\n                        <FormControlLabel onClick={() => { setDay(\"thursday\") }}\r\n                            value=\"thursday\" control={<Radio />} label=\"Thursday\" />\r\n                    </RadioGroup>\r\n                </DialogContent>\r\n                <Autocomplete\r\n                        style = {{width : \"200px\",marginLeft: \"20px\"}}\r\n                        options={props.locations}\r\n                        getOptionLabel={(option) => option.name}\r\n                        defaultValue = {props.locations.find(elm =>elm.ID == props.slot.locationID)}\r\n                        onChange={(event, value) => {\r\n                            value = value.map(elm => elm.ID);\r\n                            setLocation(value);\r\n                        }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                label=\"Location\"\r\n                            />\r\n                        )}\r\n                    />\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                    <Button \r\n                    onClick={handleEditSlot} color=\"primary\">Update</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}",{"ruleId":"1178","replacedBy":"1179"},{"ruleId":"1180","replacedBy":"1181"},{"ruleId":"1182","severity":1,"message":"1183","line":2,"column":25,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":31},{"ruleId":"1182","severity":1,"message":"1186","line":11,"column":8,"nodeType":"1184","messageId":"1185","endLine":11,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1187","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":24},{"ruleId":"1182","severity":1,"message":"1188","line":16,"column":10,"nodeType":"1184","messageId":"1185","endLine":16,"endColumn":20},{"ruleId":"1182","severity":1,"message":"1189","line":6,"column":8,"nodeType":"1184","messageId":"1185","endLine":6,"endColumn":24},{"ruleId":"1182","severity":1,"message":"1190","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1191","line":8,"column":8,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":12},{"ruleId":"1182","severity":1,"message":"1192","line":9,"column":8,"nodeType":"1184","messageId":"1185","endLine":9,"endColumn":12},{"ruleId":"1193","severity":1,"message":"1194","line":58,"column":64,"nodeType":"1195","messageId":"1196","endLine":58,"endColumn":66},{"ruleId":"1182","severity":1,"message":"1197","line":65,"column":19,"nodeType":"1184","messageId":"1185","endLine":65,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1194","line":75,"column":48,"nodeType":"1195","messageId":"1196","endLine":75,"endColumn":50},{"ruleId":"1193","severity":1,"message":"1194","line":122,"column":76,"nodeType":"1195","messageId":"1196","endLine":122,"endColumn":78},{"ruleId":"1193","severity":1,"message":"1194","line":51,"column":48,"nodeType":"1195","messageId":"1196","endLine":51,"endColumn":50},{"ruleId":"1193","severity":1,"message":"1194","line":67,"column":55,"nodeType":"1195","messageId":"1196","endLine":67,"endColumn":57},{"ruleId":"1193","severity":1,"message":"1194","line":147,"column":23,"nodeType":"1195","messageId":"1196","endLine":147,"endColumn":25},{"ruleId":"1193","severity":1,"message":"1194","line":153,"column":23,"nodeType":"1195","messageId":"1196","endLine":153,"endColumn":25},{"ruleId":"1193","severity":1,"message":"1198","line":154,"column":70,"nodeType":"1195","messageId":"1196","endLine":154,"endColumn":72},{"ruleId":"1193","severity":1,"message":"1194","line":159,"column":23,"nodeType":"1195","messageId":"1196","endLine":159,"endColumn":25},{"ruleId":"1193","severity":1,"message":"1198","line":160,"column":70,"nodeType":"1195","messageId":"1196","endLine":160,"endColumn":72},{"ruleId":"1193","severity":1,"message":"1194","line":174,"column":23,"nodeType":"1195","messageId":"1196","endLine":174,"endColumn":25},{"ruleId":"1193","severity":1,"message":"1194","line":180,"column":23,"nodeType":"1195","messageId":"1196","endLine":180,"endColumn":25},{"ruleId":"1193","severity":1,"message":"1198","line":181,"column":72,"nodeType":"1195","messageId":"1196","endLine":181,"endColumn":74},{"ruleId":"1193","severity":1,"message":"1194","line":187,"column":23,"nodeType":"1195","messageId":"1196","endLine":187,"endColumn":25},{"ruleId":"1193","severity":1,"message":"1198","line":188,"column":72,"nodeType":"1195","messageId":"1196","endLine":188,"endColumn":74},{"ruleId":"1193","severity":1,"message":"1194","line":232,"column":15,"nodeType":"1195","messageId":"1196","endLine":232,"endColumn":17},{"ruleId":"1193","severity":1,"message":"1194","line":241,"column":20,"nodeType":"1195","messageId":"1196","endLine":241,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1194","line":251,"column":22,"nodeType":"1195","messageId":"1196","endLine":251,"endColumn":24},{"ruleId":"1199","severity":1,"message":"1200","line":254,"column":11,"nodeType":"1201","endLine":259,"endColumn":13},{"ruleId":"1193","severity":1,"message":"1194","line":262,"column":22,"nodeType":"1195","messageId":"1196","endLine":262,"endColumn":24},{"ruleId":"1193","severity":1,"message":"1194","line":272,"column":22,"nodeType":"1195","messageId":"1196","endLine":272,"endColumn":24},{"ruleId":"1199","severity":1,"message":"1202","line":275,"column":11,"nodeType":"1201","endLine":281,"endColumn":13},{"ruleId":"1193","severity":1,"message":"1194","line":284,"column":22,"nodeType":"1195","messageId":"1196","endLine":284,"endColumn":24},{"ruleId":"1199","severity":1,"message":"1203","line":287,"column":11,"nodeType":"1201","endLine":292,"endColumn":13},{"ruleId":"1193","severity":1,"message":"1194","line":295,"column":22,"nodeType":"1195","messageId":"1196","endLine":295,"endColumn":24},{"ruleId":"1199","severity":1,"message":"1204","line":298,"column":11,"nodeType":"1201","endLine":304,"endColumn":13},{"ruleId":"1193","severity":1,"message":"1194","line":307,"column":22,"nodeType":"1195","messageId":"1196","endLine":307,"endColumn":24},{"ruleId":"1199","severity":1,"message":"1205","line":310,"column":11,"nodeType":"1201","endLine":318,"endColumn":13},{"ruleId":"1199","severity":1,"message":"1206","line":354,"column":11,"nodeType":"1201","endLine":358,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1207","line":3,"column":10,"nodeType":"1184","messageId":"1185","endLine":3,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1208","line":3,"column":17,"nodeType":"1184","messageId":"1185","endLine":3,"endColumn":27},{"ruleId":"1182","severity":1,"message":"1209","line":39,"column":8,"nodeType":"1184","messageId":"1185","endLine":39,"endColumn":10},{"ruleId":"1193","severity":1,"message":"1194","line":94,"column":20,"nodeType":"1195","messageId":"1196","endLine":94,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1194","line":97,"column":27,"nodeType":"1195","messageId":"1196","endLine":97,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":102,"column":27,"nodeType":"1195","messageId":"1196","endLine":102,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":105,"column":45,"nodeType":"1195","messageId":"1196","endLine":105,"endColumn":47},{"ruleId":"1193","severity":1,"message":"1194","line":222,"column":55,"nodeType":"1195","messageId":"1196","endLine":222,"endColumn":57},{"ruleId":"1193","severity":1,"message":"1194","line":232,"column":37,"nodeType":"1195","messageId":"1196","endLine":232,"endColumn":39},{"ruleId":"1193","severity":1,"message":"1194","line":237,"column":33,"nodeType":"1195","messageId":"1196","endLine":237,"endColumn":35},{"ruleId":"1193","severity":1,"message":"1194","line":240,"column":32,"nodeType":"1195","messageId":"1196","endLine":240,"endColumn":34},{"ruleId":"1193","severity":1,"message":"1194","line":256,"column":19,"nodeType":"1195","messageId":"1196","endLine":256,"endColumn":21},{"ruleId":"1193","severity":1,"message":"1194","line":267,"column":24,"nodeType":"1195","messageId":"1196","endLine":267,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":275,"column":26,"nodeType":"1195","messageId":"1196","endLine":275,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":285,"column":24,"nodeType":"1195","messageId":"1196","endLine":285,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":299,"column":24,"nodeType":"1195","messageId":"1196","endLine":299,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":312,"column":26,"nodeType":"1195","messageId":"1196","endLine":312,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":318,"column":83,"nodeType":"1195","messageId":"1196","endLine":318,"endColumn":85},{"ruleId":"1193","severity":1,"message":"1194","line":323,"column":26,"nodeType":"1195","messageId":"1196","endLine":323,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":328,"column":83,"nodeType":"1195","messageId":"1196","endLine":328,"endColumn":85},{"ruleId":"1193","severity":1,"message":"1194","line":333,"column":26,"nodeType":"1195","messageId":"1196","endLine":333,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":338,"column":83,"nodeType":"1195","messageId":"1196","endLine":338,"endColumn":85},{"ruleId":"1193","severity":1,"message":"1194","line":344,"column":26,"nodeType":"1195","messageId":"1196","endLine":344,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":349,"column":83,"nodeType":"1195","messageId":"1196","endLine":349,"endColumn":85},{"ruleId":"1193","severity":1,"message":"1194","line":354,"column":26,"nodeType":"1195","messageId":"1196","endLine":354,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":359,"column":83,"nodeType":"1195","messageId":"1196","endLine":359,"endColumn":85},{"ruleId":"1193","severity":1,"message":"1194","line":364,"column":26,"nodeType":"1195","messageId":"1196","endLine":364,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":369,"column":83,"nodeType":"1195","messageId":"1196","endLine":369,"endColumn":85},{"ruleId":"1193","severity":1,"message":"1194","line":374,"column":26,"nodeType":"1195","messageId":"1196","endLine":374,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":384,"column":24,"nodeType":"1195","messageId":"1196","endLine":384,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":401,"column":24,"nodeType":"1195","messageId":"1196","endLine":401,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1210","line":405,"column":34,"nodeType":"1201","endLine":411,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":414,"column":24,"nodeType":"1195","messageId":"1196","endLine":414,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1211","line":418,"column":34,"nodeType":"1201","endLine":423,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":426,"column":24,"nodeType":"1195","messageId":"1196","endLine":426,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1212","line":431,"column":34,"nodeType":"1201","endLine":436,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":439,"column":24,"nodeType":"1195","messageId":"1196","endLine":439,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1213","line":444,"column":34,"nodeType":"1201","endLine":449,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":452,"column":24,"nodeType":"1195","messageId":"1196","endLine":452,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1214","line":456,"column":34,"nodeType":"1201","endLine":461,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":464,"column":24,"nodeType":"1195","messageId":"1196","endLine":464,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1215","line":468,"column":34,"nodeType":"1201","endLine":473,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":476,"column":24,"nodeType":"1195","messageId":"1196","endLine":476,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1216","line":480,"column":34,"nodeType":"1201","endLine":486,"endColumn":19},{"ruleId":"1199","severity":1,"message":"1206","line":525,"column":17,"nodeType":"1201","endLine":531,"endColumn":19},{"ruleId":"1182","severity":1,"message":"1207","line":3,"column":10,"nodeType":"1184","messageId":"1185","endLine":3,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1208","line":3,"column":17,"nodeType":"1184","messageId":"1185","endLine":3,"endColumn":27},{"ruleId":"1193","severity":1,"message":"1194","line":122,"column":20,"nodeType":"1195","messageId":"1196","endLine":122,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1194","line":126,"column":27,"nodeType":"1195","messageId":"1196","endLine":126,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":130,"column":27,"nodeType":"1195","messageId":"1196","endLine":130,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":132,"column":80,"nodeType":"1195","messageId":"1196","endLine":132,"endColumn":82},{"ruleId":"1193","severity":1,"message":"1194","line":145,"column":22,"nodeType":"1195","messageId":"1196","endLine":145,"endColumn":24},{"ruleId":"1193","severity":1,"message":"1194","line":248,"column":26,"nodeType":"1195","messageId":"1196","endLine":248,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":272,"column":19,"nodeType":"1195","messageId":"1196","endLine":272,"endColumn":21},{"ruleId":"1193","severity":1,"message":"1194","line":280,"column":26,"nodeType":"1195","messageId":"1196","endLine":280,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":289,"column":26,"nodeType":"1195","messageId":"1196","endLine":289,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":298,"column":24,"nodeType":"1195","messageId":"1196","endLine":298,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":313,"column":24,"nodeType":"1195","messageId":"1196","endLine":313,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":327,"column":24,"nodeType":"1195","messageId":"1196","endLine":327,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":342,"column":26,"nodeType":"1195","messageId":"1196","endLine":342,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":357,"column":24,"nodeType":"1195","messageId":"1196","endLine":357,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1210","line":361,"column":34,"nodeType":"1201","endLine":367,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":370,"column":24,"nodeType":"1195","messageId":"1196","endLine":370,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1211","line":374,"column":34,"nodeType":"1201","endLine":380,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":383,"column":24,"nodeType":"1195","messageId":"1196","endLine":383,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1212","line":388,"column":34,"nodeType":"1201","endLine":394,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":397,"column":24,"nodeType":"1195","messageId":"1196","endLine":397,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1213","line":402,"column":34,"nodeType":"1201","endLine":408,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":411,"column":24,"nodeType":"1195","messageId":"1196","endLine":411,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1214","line":415,"column":34,"nodeType":"1201","endLine":421,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":424,"column":24,"nodeType":"1195","messageId":"1196","endLine":424,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1215","line":428,"column":34,"nodeType":"1201","endLine":434,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":437,"column":24,"nodeType":"1195","messageId":"1196","endLine":437,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1216","line":441,"column":34,"nodeType":"1201","endLine":448,"endColumn":19},{"ruleId":"1199","severity":1,"message":"1206","line":500,"column":17,"nodeType":"1201","endLine":506,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":119,"column":26,"nodeType":"1195","messageId":"1196","endLine":119,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1198","line":120,"column":82,"nodeType":"1195","messageId":"1196","endLine":120,"endColumn":84},{"ruleId":"1193","severity":1,"message":"1194","line":121,"column":82,"nodeType":"1195","messageId":"1196","endLine":121,"endColumn":84},{"ruleId":"1193","severity":1,"message":"1194","line":127,"column":26,"nodeType":"1195","messageId":"1196","endLine":127,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1198","line":128,"column":82,"nodeType":"1195","messageId":"1196","endLine":128,"endColumn":84},{"ruleId":"1193","severity":1,"message":"1194","line":129,"column":82,"nodeType":"1195","messageId":"1196","endLine":129,"endColumn":84},{"ruleId":"1193","severity":1,"message":"1198","line":132,"column":65,"nodeType":"1195","messageId":"1196","endLine":132,"endColumn":67},{"ruleId":"1193","severity":1,"message":"1194","line":133,"column":72,"nodeType":"1195","messageId":"1196","endLine":133,"endColumn":74},{"ruleId":"1193","severity":1,"message":"1198","line":149,"column":58,"nodeType":"1195","messageId":"1196","endLine":149,"endColumn":60},{"ruleId":"1193","severity":1,"message":"1194","line":161,"column":27,"nodeType":"1195","messageId":"1196","endLine":161,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":166,"column":27,"nodeType":"1195","messageId":"1196","endLine":166,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1198","line":168,"column":65,"nodeType":"1195","messageId":"1196","endLine":168,"endColumn":67},{"ruleId":"1193","severity":1,"message":"1194","line":172,"column":27,"nodeType":"1195","messageId":"1196","endLine":172,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1198","line":173,"column":65,"nodeType":"1195","messageId":"1196","endLine":173,"endColumn":67},{"ruleId":"1193","severity":1,"message":"1194","line":192,"column":19,"nodeType":"1195","messageId":"1196","endLine":192,"endColumn":21},{"ruleId":"1193","severity":1,"message":"1194","line":200,"column":26,"nodeType":"1195","messageId":"1196","endLine":200,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":209,"column":25,"nodeType":"1195","messageId":"1196","endLine":209,"endColumn":27},{"ruleId":"1193","severity":1,"message":"1194","line":218,"column":23,"nodeType":"1195","messageId":"1196","endLine":218,"endColumn":25},{"ruleId":"1199","severity":1,"message":"1217","line":221,"column":34,"nodeType":"1201","endLine":229,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":232,"column":23,"nodeType":"1195","messageId":"1196","endLine":232,"endColumn":25},{"ruleId":"1199","severity":1,"message":"1218","line":236,"column":34,"nodeType":"1201","endLine":246,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":249,"column":24,"nodeType":"1195","messageId":"1196","endLine":249,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":264,"column":24,"nodeType":"1195","messageId":"1196","endLine":264,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1210","line":268,"column":34,"nodeType":"1201","endLine":274,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":277,"column":24,"nodeType":"1195","messageId":"1196","endLine":277,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1211","line":281,"column":34,"nodeType":"1201","endLine":286,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":289,"column":24,"nodeType":"1195","messageId":"1196","endLine":289,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1212","line":294,"column":34,"nodeType":"1201","endLine":299,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":302,"column":24,"nodeType":"1195","messageId":"1196","endLine":302,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1213","line":307,"column":34,"nodeType":"1201","endLine":312,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":315,"column":24,"nodeType":"1195","messageId":"1196","endLine":315,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1214","line":319,"column":34,"nodeType":"1201","endLine":324,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":327,"column":24,"nodeType":"1195","messageId":"1196","endLine":327,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1215","line":331,"column":34,"nodeType":"1201","endLine":336,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":339,"column":24,"nodeType":"1195","messageId":"1196","endLine":339,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1216","line":343,"column":34,"nodeType":"1201","endLine":349,"endColumn":19},{"ruleId":"1199","severity":1,"message":"1206","line":386,"column":17,"nodeType":"1201","endLine":388,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":100,"column":19,"nodeType":"1195","messageId":"1196","endLine":100,"endColumn":21},{"ruleId":"1193","severity":1,"message":"1194","line":108,"column":26,"nodeType":"1195","messageId":"1196","endLine":108,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":118,"column":24,"nodeType":"1195","messageId":"1196","endLine":118,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":127,"column":24,"nodeType":"1195","messageId":"1196","endLine":127,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":143,"column":24,"nodeType":"1195","messageId":"1196","endLine":143,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1210","line":147,"column":34,"nodeType":"1201","endLine":153,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":156,"column":24,"nodeType":"1195","messageId":"1196","endLine":156,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1211","line":160,"column":34,"nodeType":"1201","endLine":165,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":168,"column":24,"nodeType":"1195","messageId":"1196","endLine":168,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1212","line":173,"column":34,"nodeType":"1201","endLine":178,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":181,"column":24,"nodeType":"1195","messageId":"1196","endLine":181,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1213","line":186,"column":34,"nodeType":"1201","endLine":191,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":194,"column":24,"nodeType":"1195","messageId":"1196","endLine":194,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1214","line":198,"column":34,"nodeType":"1201","endLine":203,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":206,"column":24,"nodeType":"1195","messageId":"1196","endLine":206,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1215","line":210,"column":34,"nodeType":"1201","endLine":215,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1194","line":218,"column":24,"nodeType":"1195","messageId":"1196","endLine":218,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1216","line":222,"column":34,"nodeType":"1201","endLine":228,"endColumn":19},{"ruleId":"1199","severity":1,"message":"1206","line":266,"column":17,"nodeType":"1201","endLine":268,"endColumn":19},{"ruleId":"1182","severity":1,"message":"1191","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":12},{"ruleId":"1182","severity":1,"message":"1219","line":1,"column":10,"nodeType":"1184","messageId":"1185","endLine":1,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1220","line":3,"column":8,"nodeType":"1184","messageId":"1185","endLine":3,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1221","line":15,"column":8,"nodeType":"1184","messageId":"1185","endLine":15,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1222","line":17,"column":8,"nodeType":"1184","messageId":"1185","endLine":17,"endColumn":21},{"ruleId":"1182","severity":1,"message":"1223","line":56,"column":11,"nodeType":"1184","messageId":"1185","endLine":56,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1224","line":56,"column":20,"nodeType":"1184","messageId":"1185","endLine":56,"endColumn":36},{"ruleId":"1182","severity":1,"message":"1225","line":56,"column":54,"nodeType":"1184","messageId":"1185","endLine":56,"endColumn":65},{"ruleId":"1182","severity":1,"message":"1226","line":56,"column":67,"nodeType":"1184","messageId":"1185","endLine":56,"endColumn":75},{"ruleId":"1182","severity":1,"message":"1227","line":57,"column":9,"nodeType":"1184","messageId":"1185","endLine":57,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1228","line":162,"column":16,"nodeType":"1184","messageId":"1185","endLine":162,"endColumn":23},{"ruleId":"1182","severity":1,"message":"1229","line":163,"column":9,"nodeType":"1184","messageId":"1185","endLine":163,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1230","line":188,"column":9,"nodeType":"1184","messageId":"1185","endLine":188,"endColumn":20},{"ruleId":"1182","severity":1,"message":"1231","line":249,"column":25,"nodeType":"1184","messageId":"1185","endLine":249,"endColumn":32},{"ruleId":"1182","severity":1,"message":"1232","line":22,"column":9,"nodeType":"1184","messageId":"1185","endLine":22,"endColumn":20},{"ruleId":"1182","severity":1,"message":"1233","line":22,"column":21,"nodeType":"1184","messageId":"1185","endLine":22,"endColumn":31},{"ruleId":"1234","severity":1,"message":"1235","line":125,"column":92,"nodeType":"1236","endLine":125,"endColumn":118},{"ruleId":"1193","severity":1,"message":"1194","line":158,"column":72,"nodeType":"1195","messageId":"1196","endLine":158,"endColumn":74},{"ruleId":"1199","severity":1,"message":"1237","line":159,"column":37,"nodeType":"1201","endLine":159,"endColumn":67},{"ruleId":"1199","severity":1,"message":"1238","line":174,"column":29,"nodeType":"1201","endLine":177,"endColumn":31},{"ruleId":"1193","severity":1,"message":"1194","line":182,"column":55,"nodeType":"1195","messageId":"1196","endLine":182,"endColumn":57},{"ruleId":"1199","severity":1,"message":"1239","line":183,"column":29,"nodeType":"1201","endLine":185,"endColumn":78},{"ruleId":"1193","severity":1,"message":"1194","line":186,"column":73,"nodeType":"1195","messageId":"1196","endLine":186,"endColumn":75},{"ruleId":"1193","severity":1,"message":"1194","line":186,"column":92,"nodeType":"1195","messageId":"1196","endLine":186,"endColumn":94},{"ruleId":"1199","severity":1,"message":"1240","line":187,"column":33,"nodeType":"1201","endLine":194,"endColumn":39},{"ruleId":"1193","severity":1,"message":"1194","line":195,"column":79,"nodeType":"1195","messageId":"1196","endLine":195,"endColumn":81},{"ruleId":"1193","severity":1,"message":"1194","line":195,"column":129,"nodeType":"1195","messageId":"1196","endLine":195,"endColumn":131},{"ruleId":"1199","severity":1,"message":"1241","line":197,"column":37,"nodeType":"1201","endLine":203,"endColumn":39},{"ruleId":"1193","severity":1,"message":"1194","line":205,"column":81,"nodeType":"1195","messageId":"1196","endLine":205,"endColumn":83},{"ruleId":"1199","severity":1,"message":"1242","line":206,"column":41,"nodeType":"1201","endLine":208,"endColumn":90},{"ruleId":"1199","severity":1,"message":"1243","line":209,"column":41,"nodeType":"1201","endLine":212,"endColumn":43},{"ruleId":"1182","severity":1,"message":"1244","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1245","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1246","line":11,"column":8,"nodeType":"1184","messageId":"1185","endLine":11,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":21},{"ruleId":"1182","severity":1,"message":"1248","line":18,"column":8,"nodeType":"1184","messageId":"1185","endLine":18,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1197","line":98,"column":19,"nodeType":"1184","messageId":"1185","endLine":98,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1197","line":118,"column":19,"nodeType":"1184","messageId":"1185","endLine":118,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":177,"column":61,"nodeType":"1195","messageId":"1196","endLine":177,"endColumn":63},{"ruleId":"1193","severity":1,"message":"1198","line":177,"column":83,"nodeType":"1195","messageId":"1196","endLine":177,"endColumn":85},{"ruleId":"1193","severity":1,"message":"1198","line":221,"column":68,"nodeType":"1195","messageId":"1196","endLine":221,"endColumn":70},{"ruleId":"1193","severity":1,"message":"1198","line":235,"column":67,"nodeType":"1195","messageId":"1196","endLine":235,"endColumn":69},{"ruleId":"1182","severity":1,"message":"1244","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1245","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1246","line":11,"column":8,"nodeType":"1184","messageId":"1185","endLine":11,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":21},{"ruleId":"1182","severity":1,"message":"1197","line":98,"column":19,"nodeType":"1184","messageId":"1185","endLine":98,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1197","line":117,"column":19,"nodeType":"1184","messageId":"1185","endLine":117,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":175,"column":61,"nodeType":"1195","messageId":"1196","endLine":175,"endColumn":63},{"ruleId":"1193","severity":1,"message":"1198","line":175,"column":83,"nodeType":"1195","messageId":"1196","endLine":175,"endColumn":85},{"ruleId":"1193","severity":1,"message":"1198","line":199,"column":68,"nodeType":"1195","messageId":"1196","endLine":199,"endColumn":70},{"ruleId":"1193","severity":1,"message":"1198","line":212,"column":67,"nodeType":"1195","messageId":"1196","endLine":212,"endColumn":69},{"ruleId":"1182","severity":1,"message":"1244","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1220","line":6,"column":8,"nodeType":"1184","messageId":"1185","endLine":6,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1245","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1246","line":11,"column":8,"nodeType":"1184","messageId":"1185","endLine":11,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":21},{"ruleId":"1182","severity":1,"message":"1221","line":13,"column":8,"nodeType":"1184","messageId":"1185","endLine":13,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1249","line":15,"column":8,"nodeType":"1184","messageId":"1185","endLine":15,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1250","line":20,"column":8,"nodeType":"1184","messageId":"1185","endLine":20,"endColumn":28},{"ruleId":"1182","severity":1,"message":"1251","line":21,"column":8,"nodeType":"1184","messageId":"1185","endLine":21,"endColumn":28},{"ruleId":"1182","severity":1,"message":"1252","line":22,"column":8,"nodeType":"1184","messageId":"1185","endLine":22,"endColumn":28},{"ruleId":"1182","severity":1,"message":"1253","line":75,"column":27,"nodeType":"1184","messageId":"1185","endLine":75,"endColumn":44},{"ruleId":"1193","severity":1,"message":"1194","line":104,"column":84,"nodeType":"1195","messageId":"1196","endLine":104,"endColumn":86},{"ruleId":"1193","severity":1,"message":"1194","line":105,"column":48,"nodeType":"1195","messageId":"1196","endLine":105,"endColumn":50},{"ruleId":"1193","severity":1,"message":"1194","line":113,"column":51,"nodeType":"1195","messageId":"1196","endLine":113,"endColumn":53},{"ruleId":"1193","severity":1,"message":"1194","line":113,"column":71,"nodeType":"1195","messageId":"1196","endLine":113,"endColumn":73},{"ruleId":"1182","severity":1,"message":"1244","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1245","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1246","line":11,"column":8,"nodeType":"1184","messageId":"1185","endLine":11,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":21},{"ruleId":"1182","severity":1,"message":"1197","line":98,"column":19,"nodeType":"1184","messageId":"1185","endLine":98,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1197","line":118,"column":19,"nodeType":"1184","messageId":"1185","endLine":118,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":177,"column":61,"nodeType":"1195","messageId":"1196","endLine":177,"endColumn":63},{"ruleId":"1193","severity":1,"message":"1198","line":177,"column":83,"nodeType":"1195","messageId":"1196","endLine":177,"endColumn":85},{"ruleId":"1193","severity":1,"message":"1198","line":201,"column":68,"nodeType":"1195","messageId":"1196","endLine":201,"endColumn":70},{"ruleId":"1193","severity":1,"message":"1198","line":214,"column":67,"nodeType":"1195","messageId":"1196","endLine":214,"endColumn":69},{"ruleId":"1182","severity":1,"message":"1244","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1245","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1246","line":11,"column":8,"nodeType":"1184","messageId":"1185","endLine":11,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":21},{"ruleId":"1182","severity":1,"message":"1197","line":98,"column":19,"nodeType":"1184","messageId":"1185","endLine":98,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1197","line":118,"column":19,"nodeType":"1184","messageId":"1185","endLine":118,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":177,"column":61,"nodeType":"1195","messageId":"1196","endLine":177,"endColumn":63},{"ruleId":"1193","severity":1,"message":"1198","line":177,"column":83,"nodeType":"1195","messageId":"1196","endLine":177,"endColumn":85},{"ruleId":"1193","severity":1,"message":"1198","line":202,"column":68,"nodeType":"1195","messageId":"1196","endLine":202,"endColumn":70},{"ruleId":"1193","severity":1,"message":"1198","line":215,"column":67,"nodeType":"1195","messageId":"1196","endLine":215,"endColumn":69},{"ruleId":"1182","severity":1,"message":"1244","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1245","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1246","line":11,"column":8,"nodeType":"1184","messageId":"1185","endLine":11,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":21},{"ruleId":"1182","severity":1,"message":"1197","line":98,"column":19,"nodeType":"1184","messageId":"1185","endLine":98,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1197","line":118,"column":19,"nodeType":"1184","messageId":"1185","endLine":118,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":177,"column":61,"nodeType":"1195","messageId":"1196","endLine":177,"endColumn":63},{"ruleId":"1193","severity":1,"message":"1198","line":177,"column":83,"nodeType":"1195","messageId":"1196","endLine":177,"endColumn":85},{"ruleId":"1193","severity":1,"message":"1198","line":203,"column":68,"nodeType":"1195","messageId":"1196","endLine":203,"endColumn":70},{"ruleId":"1193","severity":1,"message":"1198","line":216,"column":67,"nodeType":"1195","messageId":"1196","endLine":216,"endColumn":69},{"ruleId":"1193","severity":1,"message":"1194","line":157,"column":55,"nodeType":"1195","messageId":"1196","endLine":157,"endColumn":57},{"ruleId":"1182","severity":1,"message":"1244","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1245","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1246","line":11,"column":8,"nodeType":"1184","messageId":"1185","endLine":11,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":21},{"ruleId":"1182","severity":1,"message":"1197","line":98,"column":19,"nodeType":"1184","messageId":"1185","endLine":98,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1197","line":118,"column":19,"nodeType":"1184","messageId":"1185","endLine":118,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":181,"column":61,"nodeType":"1195","messageId":"1196","endLine":181,"endColumn":63},{"ruleId":"1193","severity":1,"message":"1198","line":181,"column":83,"nodeType":"1195","messageId":"1196","endLine":181,"endColumn":85},{"ruleId":"1193","severity":1,"message":"1198","line":206,"column":68,"nodeType":"1195","messageId":"1196","endLine":206,"endColumn":70},{"ruleId":"1193","severity":1,"message":"1198","line":219,"column":67,"nodeType":"1195","messageId":"1196","endLine":219,"endColumn":69},{"ruleId":"1182","severity":1,"message":"1244","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":21},{"ruleId":"1182","severity":1,"message":"1254","line":14,"column":8,"nodeType":"1184","messageId":"1185","endLine":14,"endColumn":11},{"ruleId":"1182","severity":1,"message":"1255","line":72,"column":12,"nodeType":"1184","messageId":"1185","endLine":72,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1253","line":72,"column":28,"nodeType":"1184","messageId":"1185","endLine":72,"endColumn":45},{"ruleId":"1182","severity":1,"message":"1256","line":73,"column":12,"nodeType":"1184","messageId":"1185","endLine":73,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1257","line":73,"column":24,"nodeType":"1184","messageId":"1185","endLine":73,"endColumn":37},{"ruleId":"1182","severity":1,"message":"1197","line":107,"column":19,"nodeType":"1184","messageId":"1185","endLine":107,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1194","line":111,"column":44,"nodeType":"1195","messageId":"1196","endLine":111,"endColumn":46},{"ruleId":"1193","severity":1,"message":"1194","line":167,"column":53,"nodeType":"1195","messageId":"1196","endLine":167,"endColumn":55},{"ruleId":"1193","severity":1,"message":"1194","line":186,"column":101,"nodeType":"1195","messageId":"1196","endLine":186,"endColumn":103},{"ruleId":"1193","severity":1,"message":"1198","line":195,"column":73,"nodeType":"1195","messageId":"1196","endLine":195,"endColumn":75},{"ruleId":"1193","severity":1,"message":"1194","line":242,"column":79,"nodeType":"1195","messageId":"1196","endLine":242,"endColumn":81},{"ruleId":"1182","severity":1,"message":"1244","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1220","line":6,"column":8,"nodeType":"1184","messageId":"1185","endLine":6,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1245","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1246","line":11,"column":8,"nodeType":"1184","messageId":"1185","endLine":11,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1247","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":21},{"ruleId":"1182","severity":1,"message":"1221","line":13,"column":8,"nodeType":"1184","messageId":"1185","endLine":13,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1249","line":15,"column":8,"nodeType":"1184","messageId":"1185","endLine":15,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1253","line":71,"column":27,"nodeType":"1184","messageId":"1185","endLine":71,"endColumn":44},{"ruleId":"1193","severity":1,"message":"1194","line":100,"column":84,"nodeType":"1195","messageId":"1196","endLine":100,"endColumn":86},{"ruleId":"1193","severity":1,"message":"1194","line":101,"column":48,"nodeType":"1195","messageId":"1196","endLine":101,"endColumn":50},{"ruleId":"1193","severity":1,"message":"1194","line":109,"column":51,"nodeType":"1195","messageId":"1196","endLine":109,"endColumn":53},{"ruleId":"1193","severity":1,"message":"1194","line":109,"column":71,"nodeType":"1195","messageId":"1196","endLine":109,"endColumn":73},{"ruleId":"1182","severity":1,"message":"1230","line":24,"column":9,"nodeType":"1184","messageId":"1185","endLine":24,"endColumn":20},{"ruleId":"1193","severity":1,"message":"1198","line":20,"column":38,"nodeType":"1195","messageId":"1196","endLine":20,"endColumn":40},{"ruleId":"1182","severity":1,"message":"1244","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1249","line":15,"column":8,"nodeType":"1184","messageId":"1185","endLine":15,"endColumn":13},{"ruleId":"1193","severity":1,"message":"1194","line":92,"column":55,"nodeType":"1195","messageId":"1196","endLine":92,"endColumn":57},{"ruleId":"1193","severity":1,"message":"1194","line":99,"column":55,"nodeType":"1195","messageId":"1196","endLine":99,"endColumn":57},{"ruleId":"1193","severity":1,"message":"1194","line":106,"column":55,"nodeType":"1195","messageId":"1196","endLine":106,"endColumn":57},{"ruleId":"1182","severity":1,"message":"1258","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1190","line":16,"column":8,"nodeType":"1184","messageId":"1185","endLine":16,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1259","line":22,"column":8,"nodeType":"1184","messageId":"1185","endLine":22,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1223","line":60,"column":11,"nodeType":"1184","messageId":"1185","endLine":60,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1224","line":60,"column":20,"nodeType":"1184","messageId":"1185","endLine":60,"endColumn":36},{"ruleId":"1182","severity":1,"message":"1225","line":60,"column":54,"nodeType":"1184","messageId":"1185","endLine":60,"endColumn":65},{"ruleId":"1182","severity":1,"message":"1226","line":60,"column":67,"nodeType":"1184","messageId":"1185","endLine":60,"endColumn":75},{"ruleId":"1182","severity":1,"message":"1227","line":61,"column":9,"nodeType":"1184","messageId":"1185","endLine":61,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1260","line":141,"column":13,"nodeType":"1201","endLine":141,"endColumn":73},{"ruleId":"1193","severity":1,"message":"1194","line":183,"column":14,"nodeType":"1195","messageId":"1196","endLine":183,"endColumn":16},{"ruleId":"1193","severity":1,"message":"1194","line":184,"column":27,"nodeType":"1195","messageId":"1196","endLine":184,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":187,"column":45,"nodeType":"1195","messageId":"1196","endLine":187,"endColumn":47},{"ruleId":"1182","severity":1,"message":"1230","line":214,"column":9,"nodeType":"1184","messageId":"1185","endLine":214,"endColumn":20},{"ruleId":"1182","severity":1,"message":"1231","line":275,"column":25,"nodeType":"1184","messageId":"1185","endLine":275,"endColumn":32},{"ruleId":"1182","severity":1,"message":"1261","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":29},{"ruleId":"1182","severity":1,"message":"1221","line":13,"column":8,"nodeType":"1184","messageId":"1185","endLine":13,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1247","line":14,"column":8,"nodeType":"1184","messageId":"1185","endLine":14,"endColumn":21},{"ruleId":"1182","severity":1,"message":"1220","line":15,"column":8,"nodeType":"1184","messageId":"1185","endLine":15,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1262","line":60,"column":5,"nodeType":"1184","messageId":"1185","endLine":60,"endColumn":9},{"ruleId":"1182","severity":1,"message":"1263","line":92,"column":12,"nodeType":"1184","messageId":"1185","endLine":92,"endColumn":40},{"ruleId":"1182","severity":1,"message":"1264","line":101,"column":12,"nodeType":"1184","messageId":"1185","endLine":101,"endColumn":38},{"ruleId":"1182","severity":1,"message":"1265","line":101,"column":40,"nodeType":"1184","messageId":"1185","endLine":101,"endColumn":69},{"ruleId":"1182","severity":1,"message":"1266","line":102,"column":12,"nodeType":"1184","messageId":"1185","endLine":102,"endColumn":38},{"ruleId":"1182","severity":1,"message":"1267","line":102,"column":40,"nodeType":"1184","messageId":"1185","endLine":102,"endColumn":69},{"ruleId":"1182","severity":1,"message":"1197","line":165,"column":19,"nodeType":"1184","messageId":"1185","endLine":165,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":168,"column":39,"nodeType":"1195","messageId":"1196","endLine":168,"endColumn":41},{"ruleId":"1193","severity":1,"message":"1194","line":170,"column":39,"nodeType":"1195","messageId":"1196","endLine":170,"endColumn":41},{"ruleId":"1182","severity":1,"message":"1268","line":198,"column":11,"nodeType":"1184","messageId":"1185","endLine":198,"endColumn":40},{"ruleId":"1193","severity":1,"message":"1194","line":232,"column":55,"nodeType":"1195","messageId":"1196","endLine":232,"endColumn":57},{"ruleId":"1182","severity":1,"message":"1244","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1269","line":20,"column":8,"nodeType":"1184","messageId":"1185","endLine":20,"endColumn":20},{"ruleId":"1193","severity":1,"message":"1198","line":92,"column":18,"nodeType":"1195","messageId":"1196","endLine":92,"endColumn":20},{"ruleId":"1270","severity":1,"message":"1271","line":113,"column":12,"nodeType":"1201","endLine":113,"endColumn":47},{"ruleId":"1193","severity":1,"message":"1194","line":122,"column":44,"nodeType":"1195","messageId":"1196","endLine":122,"endColumn":46},{"ruleId":"1193","severity":1,"message":"1198","line":166,"column":67,"nodeType":"1195","messageId":"1196","endLine":166,"endColumn":69},{"ruleId":"1182","severity":1,"message":"1272","line":68,"column":12,"nodeType":"1184","messageId":"1185","endLine":68,"endColumn":20},{"ruleId":"1182","severity":1,"message":"1273","line":68,"column":22,"nodeType":"1184","messageId":"1185","endLine":68,"endColumn":33},{"ruleId":"1182","severity":1,"message":"1274","line":75,"column":11,"nodeType":"1184","messageId":"1185","endLine":75,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1197","line":91,"column":15,"nodeType":"1184","messageId":"1185","endLine":91,"endColumn":18},{"ruleId":"1193","severity":1,"message":"1194","line":98,"column":55,"nodeType":"1195","messageId":"1196","endLine":98,"endColumn":57},{"ruleId":"1193","severity":1,"message":"1194","line":105,"column":61,"nodeType":"1195","messageId":"1196","endLine":105,"endColumn":63},{"ruleId":"1193","severity":1,"message":"1194","line":110,"column":67,"nodeType":"1195","messageId":"1196","endLine":110,"endColumn":69},{"ruleId":"1182","severity":1,"message":"1272","line":68,"column":12,"nodeType":"1184","messageId":"1185","endLine":68,"endColumn":20},{"ruleId":"1182","severity":1,"message":"1273","line":68,"column":22,"nodeType":"1184","messageId":"1185","endLine":68,"endColumn":33},{"ruleId":"1182","severity":1,"message":"1197","line":93,"column":15,"nodeType":"1184","messageId":"1185","endLine":93,"endColumn":18},{"ruleId":"1193","severity":1,"message":"1194","line":101,"column":60,"nodeType":"1195","messageId":"1196","endLine":101,"endColumn":62},{"ruleId":"1182","severity":1,"message":"1272","line":68,"column":12,"nodeType":"1184","messageId":"1185","endLine":68,"endColumn":20},{"ruleId":"1182","severity":1,"message":"1273","line":68,"column":22,"nodeType":"1184","messageId":"1185","endLine":68,"endColumn":33},{"ruleId":"1182","severity":1,"message":"1274","line":75,"column":11,"nodeType":"1184","messageId":"1185","endLine":75,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1197","line":91,"column":15,"nodeType":"1184","messageId":"1185","endLine":91,"endColumn":18},{"ruleId":"1193","severity":1,"message":"1194","line":98,"column":63,"nodeType":"1195","messageId":"1196","endLine":98,"endColumn":65},{"ruleId":"1193","severity":1,"message":"1194","line":106,"column":54,"nodeType":"1195","messageId":"1196","endLine":106,"endColumn":56},{"ruleId":"1193","severity":1,"message":"1194","line":107,"column":24,"nodeType":"1195","messageId":"1196","endLine":107,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1244","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1275","line":18,"column":8,"nodeType":"1184","messageId":"1185","endLine":18,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1272","line":84,"column":12,"nodeType":"1184","messageId":"1185","endLine":84,"endColumn":20},{"ruleId":"1182","severity":1,"message":"1273","line":84,"column":22,"nodeType":"1184","messageId":"1185","endLine":84,"endColumn":33},{"ruleId":"1182","severity":1,"message":"1197","line":140,"column":19,"nodeType":"1184","messageId":"1185","endLine":140,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1194","line":152,"column":60,"nodeType":"1195","messageId":"1196","endLine":152,"endColumn":62},{"ruleId":"1193","severity":1,"message":"1194","line":152,"column":82,"nodeType":"1195","messageId":"1196","endLine":152,"endColumn":84},{"ruleId":"1193","severity":1,"message":"1194","line":160,"column":60,"nodeType":"1195","messageId":"1196","endLine":160,"endColumn":62},{"ruleId":"1193","severity":1,"message":"1194","line":160,"column":82,"nodeType":"1195","messageId":"1196","endLine":160,"endColumn":84},{"ruleId":"1193","severity":1,"message":"1194","line":175,"column":59,"nodeType":"1195","messageId":"1196","endLine":175,"endColumn":61},{"ruleId":"1193","severity":1,"message":"1194","line":180,"column":60,"nodeType":"1195","messageId":"1196","endLine":180,"endColumn":62},{"ruleId":"1193","severity":1,"message":"1194","line":255,"column":94,"nodeType":"1195","messageId":"1196","endLine":255,"endColumn":96},{"ruleId":"1193","severity":1,"message":"1194","line":310,"column":68,"nodeType":"1195","messageId":"1196","endLine":310,"endColumn":70},{"ruleId":"1193","severity":1,"message":"1194","line":310,"column":118,"nodeType":"1195","messageId":"1196","endLine":310,"endColumn":120},{"ruleId":"1182","severity":1,"message":"1244","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1272","line":65,"column":12,"nodeType":"1184","messageId":"1185","endLine":65,"endColumn":20},{"ruleId":"1182","severity":1,"message":"1273","line":65,"column":22,"nodeType":"1184","messageId":"1185","endLine":65,"endColumn":33},{"ruleId":"1182","severity":1,"message":"1197","line":89,"column":15,"nodeType":"1184","messageId":"1185","endLine":89,"endColumn":18},{"ruleId":"1193","severity":1,"message":"1194","line":97,"column":59,"nodeType":"1195","messageId":"1196","endLine":97,"endColumn":61},{"ruleId":"1199","severity":1,"message":"1276","line":104,"column":22,"nodeType":"1201","endLine":116,"endColumn":11},{"ruleId":"1199","severity":1,"message":"1276","line":127,"column":17,"nodeType":"1201","endLine":144,"endColumn":19},{"ruleId":"1199","severity":1,"message":"1276","line":153,"column":17,"nodeType":"1201","endLine":170,"endColumn":19},{"ruleId":"1182","severity":1,"message":"1249","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1277","line":5,"column":8,"nodeType":"1184","messageId":"1185","endLine":5,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1189","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":24},{"ruleId":"1182","severity":1,"message":"1278","line":8,"column":8,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1279","line":9,"column":8,"nodeType":"1184","messageId":"1185","endLine":9,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1197","line":35,"column":19,"nodeType":"1184","messageId":"1185","endLine":35,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1261","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":62,"column":60,"nodeType":"1195","messageId":"1196","endLine":62,"endColumn":62},{"ruleId":"1193","severity":1,"message":"1194","line":63,"column":27,"nodeType":"1195","messageId":"1196","endLine":63,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":66,"column":26,"nodeType":"1195","messageId":"1196","endLine":66,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":70,"column":26,"nodeType":"1195","messageId":"1196","endLine":70,"endColumn":28},{"ruleId":"1199","severity":1,"message":"1280","line":76,"column":13,"nodeType":"1201","endLine":84,"endColumn":15},{"ruleId":"1193","severity":1,"message":"1194","line":163,"column":55,"nodeType":"1195","messageId":"1196","endLine":163,"endColumn":57},{"ruleId":"1182","severity":1,"message":"1281","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":17},{"ruleId":"1182","severity":1,"message":"1282","line":71,"column":12,"nodeType":"1184","messageId":"1185","endLine":71,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1283","line":71,"column":20,"nodeType":"1184","messageId":"1185","endLine":71,"endColumn":29},{"ruleId":"1182","severity":1,"message":"1284","line":77,"column":11,"nodeType":"1184","messageId":"1185","endLine":77,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1197","line":84,"column":19,"nodeType":"1184","messageId":"1185","endLine":84,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":146,"column":62,"nodeType":"1195","messageId":"1196","endLine":146,"endColumn":64},{"ruleId":"1193","severity":1,"message":"1198","line":146,"column":88,"nodeType":"1195","messageId":"1196","endLine":146,"endColumn":90},{"ruleId":"1193","severity":1,"message":"1198","line":167,"column":80,"nodeType":"1195","messageId":"1196","endLine":167,"endColumn":82},{"ruleId":"1199","severity":1,"message":"1285","line":192,"column":13,"nodeType":"1201","endLine":199,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1281","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":17},{"ruleId":"1182","severity":1,"message":"1284","line":76,"column":11,"nodeType":"1184","messageId":"1185","endLine":76,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1197","line":82,"column":19,"nodeType":"1184","messageId":"1185","endLine":82,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":147,"column":62,"nodeType":"1195","messageId":"1196","endLine":147,"endColumn":64},{"ruleId":"1193","severity":1,"message":"1198","line":147,"column":88,"nodeType":"1195","messageId":"1196","endLine":147,"endColumn":90},{"ruleId":"1193","severity":1,"message":"1198","line":169,"column":80,"nodeType":"1195","messageId":"1196","endLine":169,"endColumn":82},{"ruleId":"1199","severity":1,"message":"1286","line":193,"column":13,"nodeType":"1201","endLine":200,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1281","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":17},{"ruleId":"1182","severity":1,"message":"1282","line":71,"column":12,"nodeType":"1184","messageId":"1185","endLine":71,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1283","line":71,"column":20,"nodeType":"1184","messageId":"1185","endLine":71,"endColumn":29},{"ruleId":"1182","severity":1,"message":"1284","line":77,"column":11,"nodeType":"1184","messageId":"1185","endLine":77,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1197","line":84,"column":19,"nodeType":"1184","messageId":"1185","endLine":84,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":147,"column":62,"nodeType":"1195","messageId":"1196","endLine":147,"endColumn":64},{"ruleId":"1193","severity":1,"message":"1198","line":147,"column":88,"nodeType":"1195","messageId":"1196","endLine":147,"endColumn":90},{"ruleId":"1193","severity":1,"message":"1198","line":168,"column":80,"nodeType":"1195","messageId":"1196","endLine":168,"endColumn":82},{"ruleId":"1199","severity":1,"message":"1287","line":193,"column":13,"nodeType":"1201","endLine":200,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1281","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":17},{"ruleId":"1182","severity":1,"message":"1282","line":71,"column":12,"nodeType":"1184","messageId":"1185","endLine":71,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1283","line":71,"column":20,"nodeType":"1184","messageId":"1185","endLine":71,"endColumn":29},{"ruleId":"1182","severity":1,"message":"1284","line":77,"column":11,"nodeType":"1184","messageId":"1185","endLine":77,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1197","line":84,"column":19,"nodeType":"1184","messageId":"1185","endLine":84,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":147,"column":62,"nodeType":"1195","messageId":"1196","endLine":147,"endColumn":64},{"ruleId":"1193","severity":1,"message":"1198","line":147,"column":88,"nodeType":"1195","messageId":"1196","endLine":147,"endColumn":90},{"ruleId":"1193","severity":1,"message":"1198","line":169,"column":80,"nodeType":"1195","messageId":"1196","endLine":169,"endColumn":82},{"ruleId":"1199","severity":1,"message":"1288","line":194,"column":13,"nodeType":"1201","endLine":202,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1281","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":17},{"ruleId":"1182","severity":1,"message":"1282","line":71,"column":12,"nodeType":"1184","messageId":"1185","endLine":71,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1283","line":71,"column":20,"nodeType":"1184","messageId":"1185","endLine":71,"endColumn":29},{"ruleId":"1182","severity":1,"message":"1284","line":77,"column":11,"nodeType":"1184","messageId":"1185","endLine":77,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1197","line":84,"column":19,"nodeType":"1184","messageId":"1185","endLine":84,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":147,"column":62,"nodeType":"1195","messageId":"1196","endLine":147,"endColumn":64},{"ruleId":"1193","severity":1,"message":"1198","line":147,"column":88,"nodeType":"1195","messageId":"1196","endLine":147,"endColumn":90},{"ruleId":"1193","severity":1,"message":"1198","line":170,"column":80,"nodeType":"1195","messageId":"1196","endLine":170,"endColumn":82},{"ruleId":"1199","severity":1,"message":"1289","line":195,"column":13,"nodeType":"1201","endLine":202,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1277","line":5,"column":8,"nodeType":"1184","messageId":"1185","endLine":5,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1189","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":24},{"ruleId":"1182","severity":1,"message":"1278","line":8,"column":8,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1279","line":9,"column":8,"nodeType":"1184","messageId":"1185","endLine":9,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1197","line":33,"column":19,"nodeType":"1184","messageId":"1185","endLine":33,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1290","line":35,"column":19,"nodeType":"1184","messageId":"1185","endLine":35,"endColumn":36},{"ruleId":"1193","severity":1,"message":"1194","line":57,"column":89,"nodeType":"1195","messageId":"1196","endLine":57,"endColumn":91},{"ruleId":"1182","severity":1,"message":"1282","line":70,"column":12,"nodeType":"1184","messageId":"1185","endLine":70,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1283","line":70,"column":20,"nodeType":"1184","messageId":"1185","endLine":70,"endColumn":29},{"ruleId":"1182","severity":1,"message":"1284","line":76,"column":11,"nodeType":"1184","messageId":"1185","endLine":76,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1197","line":83,"column":19,"nodeType":"1184","messageId":"1185","endLine":83,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":145,"column":62,"nodeType":"1195","messageId":"1196","endLine":145,"endColumn":64},{"ruleId":"1193","severity":1,"message":"1198","line":145,"column":88,"nodeType":"1195","messageId":"1196","endLine":145,"endColumn":90},{"ruleId":"1193","severity":1,"message":"1198","line":167,"column":80,"nodeType":"1195","messageId":"1196","endLine":167,"endColumn":82},{"ruleId":"1199","severity":1,"message":"1291","line":191,"column":13,"nodeType":"1201","endLine":198,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1277","line":5,"column":8,"nodeType":"1184","messageId":"1185","endLine":5,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1189","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":24},{"ruleId":"1182","severity":1,"message":"1278","line":8,"column":8,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1279","line":9,"column":8,"nodeType":"1184","messageId":"1185","endLine":9,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1197","line":33,"column":19,"nodeType":"1184","messageId":"1185","endLine":33,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1277","line":5,"column":8,"nodeType":"1184","messageId":"1185","endLine":5,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1189","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":24},{"ruleId":"1182","severity":1,"message":"1278","line":8,"column":8,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1279","line":9,"column":8,"nodeType":"1184","messageId":"1185","endLine":9,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1197","line":32,"column":19,"nodeType":"1184","messageId":"1185","endLine":32,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1292","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":30},{"ruleId":"1182","severity":1,"message":"1293","line":72,"column":9,"nodeType":"1184","messageId":"1185","endLine":72,"endColumn":14},{"ruleId":"1199","severity":1,"message":"1294","line":90,"column":9,"nodeType":"1201","endLine":90,"endColumn":78},{"ruleId":"1295","severity":1,"message":"1296","line":40,"column":5,"nodeType":"1184","endLine":40,"endColumn":14,"suggestions":"1297"},{"ruleId":"1193","severity":1,"message":"1194","line":41,"column":28,"nodeType":"1195","messageId":"1196","endLine":41,"endColumn":30},{"ruleId":"1193","severity":1,"message":"1194","line":41,"column":62,"nodeType":"1195","messageId":"1196","endLine":41,"endColumn":64},{"ruleId":"1182","severity":1,"message":"1197","line":58,"column":19,"nodeType":"1184","messageId":"1185","endLine":58,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1197","line":72,"column":19,"nodeType":"1184","messageId":"1185","endLine":72,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1197","line":85,"column":19,"nodeType":"1184","messageId":"1185","endLine":85,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1194","line":97,"column":32,"nodeType":"1195","messageId":"1196","endLine":97,"endColumn":34},{"ruleId":"1193","severity":1,"message":"1194","line":98,"column":36,"nodeType":"1195","messageId":"1196","endLine":98,"endColumn":38},{"ruleId":"1193","severity":1,"message":"1194","line":99,"column":40,"nodeType":"1195","messageId":"1196","endLine":99,"endColumn":42},{"ruleId":"1193","severity":1,"message":"1194","line":100,"column":44,"nodeType":"1195","messageId":"1196","endLine":100,"endColumn":46},{"ruleId":"1234","severity":1,"message":"1235","line":102,"column":48,"nodeType":"1236","endLine":105,"endColumn":111},{"ruleId":"1193","severity":1,"message":"1194","line":103,"column":36,"nodeType":"1195","messageId":"1196","endLine":103,"endColumn":38},{"ruleId":"1193","severity":1,"message":"1194","line":104,"column":40,"nodeType":"1195","messageId":"1196","endLine":104,"endColumn":42},{"ruleId":"1193","severity":1,"message":"1194","line":105,"column":44,"nodeType":"1195","messageId":"1196","endLine":105,"endColumn":46},{"ruleId":"1193","severity":1,"message":"1194","line":115,"column":62,"nodeType":"1195","messageId":"1196","endLine":115,"endColumn":64},{"ruleId":"1193","severity":1,"message":"1194","line":115,"column":97,"nodeType":"1195","messageId":"1196","endLine":115,"endColumn":99},{"ruleId":"1193","severity":1,"message":"1194","line":125,"column":66,"nodeType":"1195","messageId":"1196","endLine":125,"endColumn":68},{"ruleId":"1193","severity":1,"message":"1194","line":134,"column":52,"nodeType":"1195","messageId":"1196","endLine":134,"endColumn":54},{"ruleId":"1193","severity":1,"message":"1194","line":143,"column":53,"nodeType":"1195","messageId":"1196","endLine":143,"endColumn":55},{"ruleId":"1193","severity":1,"message":"1194","line":143,"column":87,"nodeType":"1195","messageId":"1196","endLine":143,"endColumn":89},{"ruleId":"1193","severity":1,"message":"1194","line":166,"column":53,"nodeType":"1195","messageId":"1196","endLine":166,"endColumn":55},{"ruleId":"1193","severity":1,"message":"1194","line":166,"column":98,"nodeType":"1195","messageId":"1196","endLine":166,"endColumn":100},{"ruleId":"1199","severity":1,"message":"1298","line":185,"column":21,"nodeType":"1201","endLine":196,"endColumn":23},{"ruleId":"1182","severity":1,"message":"1299","line":8,"column":17,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1300","line":12,"column":5,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1301","line":13,"column":5,"nodeType":"1184","messageId":"1185","endLine":13,"endColumn":19},{"ruleId":"1182","severity":1,"message":"1197","line":35,"column":19,"nodeType":"1184","messageId":"1185","endLine":35,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1197","line":37,"column":19,"nodeType":"1184","messageId":"1185","endLine":37,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1197","line":40,"column":19,"nodeType":"1184","messageId":"1185","endLine":40,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1302","line":16,"column":7,"nodeType":"1184","messageId":"1185","endLine":16,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1303","line":21,"column":7,"nodeType":"1184","messageId":"1185","endLine":21,"endColumn":30},{"ruleId":"1193","severity":1,"message":"1198","line":74,"column":73,"nodeType":"1195","messageId":"1196","endLine":74,"endColumn":75},{"ruleId":"1182","severity":1,"message":"1304","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":17},{"ruleId":"1182","severity":1,"message":"1300","line":19,"column":3,"nodeType":"1184","messageId":"1185","endLine":19,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1301","line":20,"column":3,"nodeType":"1184","messageId":"1185","endLine":20,"endColumn":17},{"ruleId":"1295","severity":1,"message":"1305","line":61,"column":3,"nodeType":"1184","endLine":61,"endColumn":12,"suggestions":"1306"},{"ruleId":"1295","severity":1,"message":"1307","line":61,"column":13,"nodeType":"1308","endLine":73,"endColumn":4},{"ruleId":"1193","severity":1,"message":"1194","line":62,"column":32,"nodeType":"1195","messageId":"1196","endLine":62,"endColumn":34},{"ruleId":"1193","severity":1,"message":"1194","line":65,"column":48,"nodeType":"1195","messageId":"1196","endLine":65,"endColumn":50},{"ruleId":"1193","severity":1,"message":"1198","line":67,"column":21,"nodeType":"1195","messageId":"1196","endLine":67,"endColumn":23},{"ruleId":"1193","severity":1,"message":"1194","line":68,"column":35,"nodeType":"1195","messageId":"1196","endLine":68,"endColumn":37},{"ruleId":"1193","severity":1,"message":"1198","line":76,"column":28,"nodeType":"1195","messageId":"1196","endLine":76,"endColumn":30},{"ruleId":"1182","severity":1,"message":"1309","line":8,"column":10,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1310","line":9,"column":8,"nodeType":"1184","messageId":"1185","endLine":9,"endColumn":20},{"ruleId":"1182","severity":1,"message":"1311","line":14,"column":8,"nodeType":"1184","messageId":"1185","endLine":14,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1188","line":16,"column":10,"nodeType":"1184","messageId":"1185","endLine":16,"endColumn":20},{"ruleId":"1182","severity":1,"message":"1302","line":20,"column":7,"nodeType":"1184","messageId":"1185","endLine":20,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1303","line":25,"column":7,"nodeType":"1184","messageId":"1185","endLine":25,"endColumn":30},{"ruleId":"1182","severity":1,"message":"1197","line":32,"column":19,"nodeType":"1184","messageId":"1185","endLine":32,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1194","line":56,"column":23,"nodeType":"1195","messageId":"1196","endLine":56,"endColumn":25},{"ruleId":"1193","severity":1,"message":"1194","line":58,"column":23,"nodeType":"1195","messageId":"1196","endLine":58,"endColumn":25},{"ruleId":"1193","severity":1,"message":"1194","line":66,"column":22,"nodeType":"1195","messageId":"1196","endLine":66,"endColumn":24},{"ruleId":"1193","severity":1,"message":"1194","line":67,"column":23,"nodeType":"1195","messageId":"1196","endLine":67,"endColumn":25},{"ruleId":"1193","severity":1,"message":"1194","line":68,"column":21,"nodeType":"1195","messageId":"1196","endLine":68,"endColumn":23},{"ruleId":"1193","severity":1,"message":"1198","line":88,"column":36,"nodeType":"1195","messageId":"1196","endLine":88,"endColumn":38},{"ruleId":"1193","severity":1,"message":"1194","line":92,"column":23,"nodeType":"1195","messageId":"1196","endLine":92,"endColumn":25},{"ruleId":"1193","severity":1,"message":"1194","line":94,"column":23,"nodeType":"1195","messageId":"1196","endLine":94,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1312","line":12,"column":10,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":18},{"ruleId":"1295","severity":1,"message":"1313","line":24,"column":5,"nodeType":"1184","endLine":24,"endColumn":14,"suggestions":"1314"},{"ruleId":"1182","severity":1,"message":"1197","line":32,"column":19,"nodeType":"1184","messageId":"1185","endLine":32,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1299","line":8,"column":17,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1300","line":12,"column":5,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":15},{"ruleId":"1182","severity":1,"message":"1301","line":13,"column":5,"nodeType":"1184","messageId":"1185","endLine":13,"endColumn":19},{"ruleId":"1182","severity":1,"message":"1197","line":35,"column":19,"nodeType":"1184","messageId":"1185","endLine":35,"endColumn":22},{"ruleId":"1295","severity":1,"message":"1315","line":45,"column":5,"nodeType":"1184","endLine":45,"endColumn":14,"suggestions":"1316"},{"ruleId":"1193","severity":1,"message":"1194","line":48,"column":20,"nodeType":"1195","messageId":"1196","endLine":48,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1194","line":51,"column":28,"nodeType":"1195","messageId":"1196","endLine":51,"endColumn":30},{"ruleId":"1193","severity":1,"message":"1194","line":54,"column":26,"nodeType":"1195","messageId":"1196","endLine":54,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1194","line":57,"column":26,"nodeType":"1195","messageId":"1196","endLine":57,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1198","line":60,"column":20,"nodeType":"1195","messageId":"1196","endLine":60,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1197","line":84,"column":19,"nodeType":"1184","messageId":"1185","endLine":84,"endColumn":22},{"ruleId":"1234","severity":1,"message":"1235","line":96,"column":44,"nodeType":"1236","endLine":99,"endColumn":14},{"ruleId":"1193","severity":1,"message":"1194","line":97,"column":39,"nodeType":"1195","messageId":"1196","endLine":97,"endColumn":41},{"ruleId":"1193","severity":1,"message":"1194","line":98,"column":28,"nodeType":"1195","messageId":"1196","endLine":98,"endColumn":30},{"ruleId":"1193","severity":1,"message":"1198","line":107,"column":46,"nodeType":"1195","messageId":"1196","endLine":107,"endColumn":48},{"ruleId":"1193","severity":1,"message":"1194","line":117,"column":41,"nodeType":"1195","messageId":"1196","endLine":117,"endColumn":43},{"ruleId":"1193","severity":1,"message":"1194","line":117,"column":66,"nodeType":"1195","messageId":"1196","endLine":117,"endColumn":68},{"ruleId":"1193","severity":1,"message":"1194","line":118,"column":45,"nodeType":"1195","messageId":"1196","endLine":118,"endColumn":47},{"ruleId":"1193","severity":1,"message":"1194","line":118,"column":92,"nodeType":"1195","messageId":"1196","endLine":118,"endColumn":94},{"ruleId":"1193","severity":1,"message":"1194","line":124,"column":44,"nodeType":"1195","messageId":"1196","endLine":124,"endColumn":46},{"ruleId":"1182","severity":1,"message":"1317","line":4,"column":8,"nodeType":"1184","messageId":"1185","endLine":4,"endColumn":19},{"ruleId":"1182","severity":1,"message":"1318","line":6,"column":8,"nodeType":"1184","messageId":"1185","endLine":6,"endColumn":14},{"ruleId":"1182","severity":1,"message":"1319","line":8,"column":8,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":23},{"ruleId":"1234","severity":1,"message":"1235","line":36,"column":44,"nodeType":"1236","endLine":37,"endColumn":87},{"ruleId":"1193","severity":1,"message":"1194","line":37,"column":38,"nodeType":"1195","messageId":"1196","endLine":37,"endColumn":40},{"ruleId":"1182","severity":1,"message":"1277","line":5,"column":8,"nodeType":"1184","messageId":"1185","endLine":5,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1320","line":17,"column":11,"nodeType":"1184","messageId":"1185","endLine":17,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":31,"column":30,"nodeType":"1195","messageId":"1196","endLine":31,"endColumn":32},{"ruleId":"1182","severity":1,"message":"1320","line":18,"column":11,"nodeType":"1184","messageId":"1185","endLine":18,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":85,"column":84,"nodeType":"1195","messageId":"1196","endLine":85,"endColumn":86},{"ruleId":"1182","severity":1,"message":"1189","line":6,"column":8,"nodeType":"1184","messageId":"1185","endLine":6,"endColumn":24},{"ruleId":"1182","severity":1,"message":"1278","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1279","line":8,"column":8,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1321","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1322","line":11,"column":8,"nodeType":"1184","messageId":"1185","endLine":11,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1323","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":14},{"ruleId":"1182","severity":1,"message":"1324","line":14,"column":8,"nodeType":"1184","messageId":"1185","endLine":14,"endColumn":19},{"ruleId":"1182","severity":1,"message":"1219","line":17,"column":10,"nodeType":"1184","messageId":"1185","endLine":17,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1325","line":21,"column":3,"nodeType":"1184","messageId":"1185","endLine":21,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1300","line":22,"column":3,"nodeType":"1184","messageId":"1185","endLine":22,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1301","line":23,"column":3,"nodeType":"1184","messageId":"1185","endLine":23,"endColumn":17},{"ruleId":"1182","severity":1,"message":"1223","line":41,"column":11,"nodeType":"1184","messageId":"1185","endLine":41,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1320","line":53,"column":11,"nodeType":"1184","messageId":"1185","endLine":53,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1197","line":73,"column":19,"nodeType":"1184","messageId":"1185","endLine":73,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1277","line":5,"column":8,"nodeType":"1184","messageId":"1185","endLine":5,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1326","line":6,"column":8,"nodeType":"1184","messageId":"1185","endLine":6,"endColumn":19},{"ruleId":"1182","severity":1,"message":"1189","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":24},{"ruleId":"1182","severity":1,"message":"1278","line":8,"column":8,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1279","line":9,"column":8,"nodeType":"1184","messageId":"1185","endLine":9,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1304","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":17},{"ruleId":"1182","severity":1,"message":"1249","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1320","line":17,"column":11,"nodeType":"1184","messageId":"1185","endLine":17,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1327","line":30,"column":21,"nodeType":"1201","endLine":32,"endColumn":23},{"ruleId":"1182","severity":1,"message":"1320","line":45,"column":11,"nodeType":"1184","messageId":"1185","endLine":45,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":72,"column":21,"nodeType":"1195","messageId":"1196","endLine":72,"endColumn":23},{"ruleId":"1182","severity":1,"message":"1197","line":80,"column":19,"nodeType":"1184","messageId":"1185","endLine":80,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1194","line":177,"column":41,"nodeType":"1195","messageId":"1196","endLine":177,"endColumn":43},{"ruleId":"1193","severity":1,"message":"1194","line":218,"column":104,"nodeType":"1195","messageId":"1196","endLine":218,"endColumn":106},{"ruleId":"1182","severity":1,"message":"1321","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1322","line":11,"column":8,"nodeType":"1184","messageId":"1185","endLine":11,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1323","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":14},{"ruleId":"1182","severity":1,"message":"1324","line":14,"column":8,"nodeType":"1184","messageId":"1185","endLine":14,"endColumn":19},{"ruleId":"1182","severity":1,"message":"1223","line":34,"column":11,"nodeType":"1184","messageId":"1185","endLine":34,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1320","line":46,"column":11,"nodeType":"1184","messageId":"1185","endLine":46,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":66,"column":39,"nodeType":"1195","messageId":"1196","endLine":66,"endColumn":41},{"ruleId":"1182","severity":1,"message":"1197","line":71,"column":19,"nodeType":"1184","messageId":"1185","endLine":71,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1328","line":82,"column":11,"nodeType":"1184","messageId":"1185","endLine":82,"endColumn":27},{"ruleId":"1193","severity":1,"message":"1194","line":84,"column":60,"nodeType":"1195","messageId":"1196","endLine":84,"endColumn":62},{"ruleId":"1193","severity":1,"message":"1194","line":146,"column":73,"nodeType":"1195","messageId":"1196","endLine":146,"endColumn":75},{"ruleId":"1193","severity":1,"message":"1194","line":159,"column":59,"nodeType":"1195","messageId":"1196","endLine":159,"endColumn":61},{"ruleId":"1193","severity":1,"message":"1194","line":163,"column":77,"nodeType":"1195","messageId":"1196","endLine":163,"endColumn":79},{"ruleId":"1182","severity":1,"message":"1321","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1322","line":8,"column":8,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1323","line":9,"column":8,"nodeType":"1184","messageId":"1185","endLine":9,"endColumn":14},{"ruleId":"1182","severity":1,"message":"1329","line":31,"column":11,"nodeType":"1184","messageId":"1185","endLine":31,"endColumn":23},{"ruleId":"1182","severity":1,"message":"1320","line":35,"column":11,"nodeType":"1184","messageId":"1185","endLine":35,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1197","line":54,"column":19,"nodeType":"1184","messageId":"1185","endLine":54,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1320","line":36,"column":11,"nodeType":"1184","messageId":"1185","endLine":36,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1197","line":54,"column":19,"nodeType":"1184","messageId":"1185","endLine":54,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1320","line":15,"column":11,"nodeType":"1184","messageId":"1185","endLine":15,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1197","line":30,"column":19,"nodeType":"1184","messageId":"1185","endLine":30,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1324","line":6,"column":8,"nodeType":"1184","messageId":"1185","endLine":6,"endColumn":19},{"ruleId":"1182","severity":1,"message":"1321","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1322","line":8,"column":8,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1323","line":9,"column":8,"nodeType":"1184","messageId":"1185","endLine":9,"endColumn":14},{"ruleId":"1182","severity":1,"message":"1223","line":28,"column":11,"nodeType":"1184","messageId":"1185","endLine":28,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1320","line":31,"column":11,"nodeType":"1184","messageId":"1185","endLine":31,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1197","line":51,"column":19,"nodeType":"1184","messageId":"1185","endLine":51,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1320","line":15,"column":11,"nodeType":"1184","messageId":"1185","endLine":15,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1197","line":32,"column":19,"nodeType":"1184","messageId":"1185","endLine":32,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1320","line":11,"column":11,"nodeType":"1184","messageId":"1185","endLine":11,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1197","line":26,"column":19,"nodeType":"1184","messageId":"1185","endLine":26,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1223","line":23,"column":11,"nodeType":"1184","messageId":"1185","endLine":23,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1329","line":26,"column":11,"nodeType":"1184","messageId":"1185","endLine":26,"endColumn":23},{"ruleId":"1182","severity":1,"message":"1320","line":30,"column":11,"nodeType":"1184","messageId":"1185","endLine":30,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1197","line":53,"column":19,"nodeType":"1184","messageId":"1185","endLine":53,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1269","line":9,"column":8,"nodeType":"1184","messageId":"1185","endLine":9,"endColumn":20},{"ruleId":"1182","severity":1,"message":"1320","line":12,"column":11,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1277","line":5,"column":8,"nodeType":"1184","messageId":"1185","endLine":5,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1189","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":24},{"ruleId":"1182","severity":1,"message":"1278","line":8,"column":8,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1279","line":9,"column":8,"nodeType":"1184","messageId":"1185","endLine":9,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1197","line":47,"column":19,"nodeType":"1184","messageId":"1185","endLine":47,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":51,"column":45,"nodeType":"1195","messageId":"1196","endLine":51,"endColumn":47},{"ruleId":"1193","severity":1,"message":"1194","line":53,"column":39,"nodeType":"1195","messageId":"1196","endLine":53,"endColumn":41},{"ruleId":"1193","severity":1,"message":"1194","line":87,"column":103,"nodeType":"1195","messageId":"1196","endLine":87,"endColumn":105},{"ruleId":"1193","severity":1,"message":"1194","line":89,"column":27,"nodeType":"1195","messageId":"1196","endLine":89,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":91,"column":27,"nodeType":"1195","messageId":"1196","endLine":91,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":93,"column":27,"nodeType":"1195","messageId":"1196","endLine":93,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":95,"column":27,"nodeType":"1195","messageId":"1196","endLine":95,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":97,"column":27,"nodeType":"1195","messageId":"1196","endLine":97,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":99,"column":27,"nodeType":"1195","messageId":"1196","endLine":99,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":101,"column":27,"nodeType":"1195","messageId":"1196","endLine":101,"endColumn":29},{"ruleId":"1193","severity":1,"message":"1194","line":105,"column":36,"nodeType":"1195","messageId":"1196","endLine":105,"endColumn":38},{"ruleId":"1193","severity":1,"message":"1198","line":85,"column":54,"nodeType":"1195","messageId":"1196","endLine":85,"endColumn":56},{"ruleId":"1193","severity":1,"message":"1194","line":97,"column":54,"nodeType":"1195","messageId":"1196","endLine":97,"endColumn":56},{"ruleId":"1193","severity":1,"message":"1194","line":110,"column":54,"nodeType":"1195","messageId":"1196","endLine":110,"endColumn":56},{"ruleId":"1182","severity":1,"message":"1277","line":5,"column":8,"nodeType":"1184","messageId":"1185","endLine":5,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1189","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":24},{"ruleId":"1182","severity":1,"message":"1278","line":8,"column":8,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":13},{"ruleId":"1182","severity":1,"message":"1279","line":9,"column":8,"nodeType":"1184","messageId":"1185","endLine":9,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1197","line":36,"column":19,"nodeType":"1184","messageId":"1185","endLine":36,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1198","line":40,"column":47,"nodeType":"1195","messageId":"1196","endLine":40,"endColumn":49},{"ruleId":"1193","severity":1,"message":"1194","line":42,"column":39,"nodeType":"1195","messageId":"1196","endLine":42,"endColumn":41},{"ruleId":"1182","severity":1,"message":"1189","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":24},{"ruleId":"1182","severity":1,"message":"1330","line":3,"column":8,"nodeType":"1184","messageId":"1185","endLine":3,"endColumn":17},{"ruleId":"1182","severity":1,"message":"1331","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":14},{"ruleId":"1193","severity":1,"message":"1194","line":78,"column":56,"nodeType":"1195","messageId":"1196","endLine":78,"endColumn":58},{"ruleId":"1199","severity":1,"message":"1276","line":80,"column":22,"nodeType":"1201","endLine":91,"endColumn":11},{"ruleId":"1182","severity":1,"message":"1189","line":2,"column":8,"nodeType":"1184","messageId":"1185","endLine":2,"endColumn":24},{"ruleId":"1182","severity":1,"message":"1330","line":3,"column":8,"nodeType":"1184","messageId":"1185","endLine":3,"endColumn":17},{"ruleId":"1182","severity":1,"message":"1331","line":7,"column":8,"nodeType":"1184","messageId":"1185","endLine":7,"endColumn":14},{"ruleId":"1182","severity":1,"message":"1249","line":18,"column":8,"nodeType":"1184","messageId":"1185","endLine":18,"endColumn":13},{"ruleId":"1199","severity":1,"message":"1276","line":83,"column":22,"nodeType":"1201","endLine":92,"endColumn":11},{"ruleId":"1182","severity":1,"message":"1293","line":77,"column":11,"nodeType":"1184","messageId":"1185","endLine":77,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1332","line":78,"column":12,"nodeType":"1184","messageId":"1185","endLine":78,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1333","line":80,"column":11,"nodeType":"1184","messageId":"1185","endLine":80,"endColumn":27},{"ruleId":"1182","severity":1,"message":"1334","line":84,"column":11,"nodeType":"1184","messageId":"1185","endLine":84,"endColumn":28},{"ruleId":"1182","severity":1,"message":"1292","line":19,"column":8,"nodeType":"1184","messageId":"1185","endLine":19,"endColumn":30},{"ruleId":"1182","severity":1,"message":"1293","line":91,"column":9,"nodeType":"1184","messageId":"1185","endLine":91,"endColumn":14},{"ruleId":"1182","severity":1,"message":"1332","line":92,"column":10,"nodeType":"1184","messageId":"1185","endLine":92,"endColumn":14},{"ruleId":"1182","severity":1,"message":"1333","line":94,"column":9,"nodeType":"1184","messageId":"1185","endLine":94,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1334","line":98,"column":9,"nodeType":"1184","messageId":"1185","endLine":98,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1294","line":227,"column":9,"nodeType":"1201","endLine":227,"endColumn":79},{"ruleId":"1182","severity":1,"message":"1293","line":74,"column":9,"nodeType":"1184","messageId":"1185","endLine":74,"endColumn":14},{"ruleId":"1199","severity":1,"message":"1335","line":97,"column":9,"nodeType":"1201","endLine":97,"endColumn":250},{"ruleId":"1199","severity":1,"message":"1294","line":98,"column":9,"nodeType":"1201","endLine":98,"endColumn":78},{"ruleId":"1336","severity":1,"message":"1337","line":28,"column":13,"nodeType":"1338","messageId":"1339","endLine":46,"endColumn":14},{"ruleId":"1182","severity":1,"message":"1197","line":40,"column":21,"nodeType":"1184","messageId":"1185","endLine":40,"endColumn":24},{"ruleId":"1182","severity":1,"message":"1293","line":78,"column":9,"nodeType":"1184","messageId":"1185","endLine":78,"endColumn":14},{"ruleId":"1182","severity":1,"message":"1332","line":79,"column":10,"nodeType":"1184","messageId":"1185","endLine":79,"endColumn":14},{"ruleId":"1182","severity":1,"message":"1333","line":81,"column":9,"nodeType":"1184","messageId":"1185","endLine":81,"endColumn":25},{"ruleId":"1182","severity":1,"message":"1334","line":85,"column":9,"nodeType":"1184","messageId":"1185","endLine":85,"endColumn":26},{"ruleId":"1199","severity":1,"message":"1294","line":123,"column":9,"nodeType":"1201","endLine":123,"endColumn":79},{"ruleId":"1182","severity":1,"message":"1340","line":12,"column":25,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":39},{"ruleId":"1182","severity":1,"message":"1341","line":21,"column":11,"nodeType":"1184","messageId":"1185","endLine":21,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1198","line":26,"column":25,"nodeType":"1195","messageId":"1196","endLine":26,"endColumn":27},{"ruleId":"1182","severity":1,"message":"1299","line":1,"column":17,"nodeType":"1184","messageId":"1185","endLine":1,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1319","line":8,"column":8,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":23},{"ruleId":"1182","severity":1,"message":"1219","line":9,"column":15,"nodeType":"1184","messageId":"1185","endLine":9,"endColumn":23},{"ruleId":"1182","severity":1,"message":"1342","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":17},{"ruleId":"1182","severity":1,"message":"1281","line":11,"column":8,"nodeType":"1184","messageId":"1185","endLine":11,"endColumn":17},{"ruleId":"1193","severity":1,"message":"1194","line":40,"column":57,"nodeType":"1195","messageId":"1196","endLine":40,"endColumn":59},{"ruleId":"1182","severity":1,"message":"1197","line":57,"column":15,"nodeType":"1184","messageId":"1185","endLine":57,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1343","line":63,"column":15,"nodeType":"1184","messageId":"1185","endLine":63,"endColumn":21},{"ruleId":"1193","severity":1,"message":"1194","line":69,"column":64,"nodeType":"1195","messageId":"1196","endLine":69,"endColumn":66},{"ruleId":"1182","severity":1,"message":"1304","line":14,"column":8,"nodeType":"1184","messageId":"1185","endLine":14,"endColumn":17},{"ruleId":"1182","severity":1,"message":"1320","line":35,"column":11,"nodeType":"1184","messageId":"1185","endLine":35,"endColumn":26},{"ruleId":"1182","severity":1,"message":"1219","line":8,"column":15,"nodeType":"1184","messageId":"1185","endLine":8,"endColumn":23},{"ruleId":"1193","severity":1,"message":"1194","line":38,"column":57,"nodeType":"1195","messageId":"1196","endLine":38,"endColumn":59},{"ruleId":"1295","severity":1,"message":"1344","line":47,"column":5,"nodeType":"1184","endLine":47,"endColumn":14,"suggestions":"1345"},{"ruleId":"1193","severity":1,"message":"1194","line":48,"column":28,"nodeType":"1195","messageId":"1196","endLine":48,"endColumn":30},{"ruleId":"1193","severity":1,"message":"1194","line":48,"column":62,"nodeType":"1195","messageId":"1196","endLine":48,"endColumn":64},{"ruleId":"1182","severity":1,"message":"1197","line":57,"column":19,"nodeType":"1184","messageId":"1185","endLine":57,"endColumn":22},{"ruleId":"1182","severity":1,"message":"1197","line":73,"column":19,"nodeType":"1184","messageId":"1185","endLine":73,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1194","line":87,"column":32,"nodeType":"1195","messageId":"1196","endLine":87,"endColumn":34},{"ruleId":"1193","severity":1,"message":"1194","line":88,"column":36,"nodeType":"1195","messageId":"1196","endLine":88,"endColumn":38},{"ruleId":"1193","severity":1,"message":"1194","line":89,"column":40,"nodeType":"1195","messageId":"1196","endLine":89,"endColumn":42},{"ruleId":"1234","severity":1,"message":"1235","line":91,"column":48,"nodeType":"1236","endLine":94,"endColumn":111},{"ruleId":"1193","severity":1,"message":"1194","line":92,"column":36,"nodeType":"1195","messageId":"1196","endLine":92,"endColumn":38},{"ruleId":"1193","severity":1,"message":"1194","line":93,"column":40,"nodeType":"1195","messageId":"1196","endLine":93,"endColumn":42},{"ruleId":"1193","severity":1,"message":"1194","line":94,"column":44,"nodeType":"1195","messageId":"1196","endLine":94,"endColumn":46},{"ruleId":"1193","severity":1,"message":"1194","line":102,"column":97,"nodeType":"1195","messageId":"1196","endLine":102,"endColumn":99},{"ruleId":"1193","severity":1,"message":"1194","line":110,"column":53,"nodeType":"1195","messageId":"1196","endLine":110,"endColumn":55},{"ruleId":"1193","severity":1,"message":"1194","line":110,"column":87,"nodeType":"1195","messageId":"1196","endLine":110,"endColumn":89},{"ruleId":"1182","severity":1,"message":"1322","line":9,"column":8,"nodeType":"1184","messageId":"1185","endLine":9,"endColumn":16},{"ruleId":"1182","severity":1,"message":"1323","line":10,"column":8,"nodeType":"1184","messageId":"1185","endLine":10,"endColumn":14},{"ruleId":"1182","severity":1,"message":"1324","line":12,"column":8,"nodeType":"1184","messageId":"1185","endLine":12,"endColumn":19},{"ruleId":"1182","severity":1,"message":"1321","line":13,"column":8,"nodeType":"1184","messageId":"1185","endLine":13,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1223","line":30,"column":11,"nodeType":"1184","messageId":"1185","endLine":30,"endColumn":18},{"ruleId":"1182","severity":1,"message":"1320","line":36,"column":11,"nodeType":"1184","messageId":"1185","endLine":36,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1194","line":106,"column":75,"nodeType":"1195","messageId":"1196","endLine":106,"endColumn":77},"no-native-reassign",["1346"],"no-negated-in-lhs",["1347"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Backdrop' is defined but never used.","'CircularProgress' is defined but never used.","'makeStyles' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'res' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react/jsx-pascal-case","Imported JSX component Location_Card must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Faculty_Card must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Department_Card must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Course_Card must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component StaffMember_Card must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Navigation_Bar must be in PascalCase or SCREAMING_SNAKE_CASE","'Alert' is defined but never used.","'AlertTitle' is defined but never used.","'CI' is defined but never used.","Imported JSX component Course_Schedule must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Change_Day_Off_Request must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Annual_Leave_Request must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Accidental_Leave_Request must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Maternity_Leave_Request must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Sick_Leave_Request must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Compensation_Leave_Request must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Slot_Card must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Schedule_Requests_Card must be in PascalCase or SCREAMING_SNAKE_CASE","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'SwapHorizIcon' is defined but never used.","'classes' is assigned a value but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'createSortHandler' is assigned a value but never used.","'setRows' is assigned a value but never used.","'allRows' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'labelId' is assigned a value but never used.","'useLocation' is defined but never used.","'withRouter' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Imported JSX component DropdownList_Notifications must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component DropdownList_NavBar must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component HR_SlideBar must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Hod_SlideBar must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component CI_SlideBar must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component CC_SlideBar must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component AC_SlideBar must be in PascalCase or SCREAMING_SNAKE_CASE","'CardActionArea' is defined but never used.","'DeleteIcon' is defined but never used.","'EditIcon' is defined but never used.","'AddCircleIcon' is defined but never used.","'Divider' is defined but never used.","'axios' is defined but never used.","'AssignInstructorForm' is defined but never used.","'DeleteInstructorForm' is defined but never used.","'UpdateInstructorForm' is defined but never used.","'setShowInstructor' is assigned a value but never used.","'Box' is defined but never used.","'showInstructor' is assigned a value but never used.","'showCourse' is assigned a value but never used.","'setShowCourse' is assigned a value but never used.","'TableSortLabel' is defined but never used.","'FilterListIcon' is defined but never used.","Imported JSX component DropdownList_Attendance must be in PascalCase or SCREAMING_SNAKE_CASE","'DepartmentCoursesCard' is defined but never used.","'rows' is assigned a value but never used.","'openDeleteAcademicMemberForm' is assigned a value but never used.","'openDeleteCourseInstructor' is assigned a value but never used.","'setOpenDeleteCourseInstructor' is assigned a value but never used.","'openUpdateCourseInstructor' is assigned a value but never used.","'setOpenUpdateCourseInstructor' is assigned a value but never used.","'handleCloseDeleteMemberToSlot' is assigned a value but never used.","'AlertMessage' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'openEdit' is assigned a value but never used.","'setOpenEdit' is assigned a value but never used.","'handleOpenEdit' is assigned a value but never used.","'Badge' is defined but never used.","Imported JSX component Schedule_Slot_Card must be in PascalCase or SCREAMING_SNAKE_CASE","'DialogContentText' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","Imported JSX component Course_Schedule_Card must be in PascalCase or SCREAMING_SNAKE_CASE","'CheckIcon' is defined but never used.","'max_ID' is assigned a value but never used.","'setMax_ID' is assigned a value but never used.","'handleOpenForm' is assigned a value but never used.","Imported JSX component Annual_Leave_Request_Card must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Change_Day_Off_Request_Card must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Accidental_Leave_Request_Card must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Compensataion_Leave_Request_Card must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Maternity_Leave_Request_Card must be in PascalCase or SCREAMING_SNAKE_CASE","'departmentCourses' is assigned a value but never used.","Imported JSX component Sick_Leave_Request_Card must be in PascalCase or SCREAMING_SNAKE_CASE","'Course_Instructor_List' is defined but never used.","'theme' is assigned a value but never used.","Imported JSX component Academic_Member_List must be in PascalCase or SCREAMING_SNAKE_CASE","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRequestStatus'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.cardType, props.requestStatus, requestStatus] as a second argument to the useEffect Hook.",["1348"],"Imported JSX component Replacement_Request_Card must be in PascalCase or SCREAMING_SNAKE_CASE","'useEffect' is defined but never used.","'TimePicker' is defined but never used.","'DateTimePicker' is defined but never used.","'requestUserProfile' is assigned a value but never used.","'requestAttendanceRecods' is assigned a value but never used.","'TextField' is defined but never used.","React Hook useEffect contains a call to 'setAcademicMembers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [academicMembers.length, props.courseID] as a second argument to the useEffect Hook.",["1349"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Redirect' is defined but never used.","'setAuthToken' is defined but never used.","'Typography' is defined but never used.","'useState' is defined but never used.","React Hook useEffect contains a call to 'setDayOff'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [dayOff, props.dayOff] as a second argument to the useEffect Hook.",["1350"],"React Hook useEffect contains a call to 'setStatus'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props, hasBeenCancelled, status, instructorName, instructorID, locationName] as a second argument to the useEffect Hook.",["1351"],"'CardActions' is defined but never used.","'Button' is defined but never used.","'FindReplaceIcon' is defined but never used.","'handleClickOpen' is assigned a value but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'FormControl' is defined but never used.","'DatePicker' is defined but never used.","'DialogTitle' is defined but never used.","Imported JSX component Attendance_Card must be in PascalCase or SCREAMING_SNAKE_CASE","'getDefaultOffice' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'FormGroup' is defined but never used.","'Switch' is defined but never used.","'open' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","Imported JSX component Course_Instructor_List must be in PascalCase or SCREAMING_SNAKE_CASE","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setIsLoggedOut' is assigned a value but never used.","'periodic' is assigned a value but never used.","'CloseIcon' is defined but never used.","'slotID' is assigned a value but never used.","React Hook useEffect contains a call to 'setRequestStatus'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.cardType, props.request.status, requestStatus] as a second argument to the useEffect Hook.",["1352"],"no-global-assign","no-unsafe-negation",{"desc":"1353","fix":"1354"},{"desc":"1355","fix":"1356"},{"desc":"1357","fix":"1358"},{"desc":"1359","fix":"1360"},{"desc":"1361","fix":"1362"},"Add dependencies array: [props.cardType, props.requestStatus, requestStatus]",{"range":"1363","text":"1364"},"Add dependencies array: [academicMembers.length, props.courseID]",{"range":"1365","text":"1366"},"Add dependencies array: [dayOff, props.dayOff]",{"range":"1367","text":"1368"},"Add dependencies array: [props, hasBeenCancelled, status, instructorName, instructorID, locationName]",{"range":"1369","text":"1370"},"Add dependencies array: [props.cardType, props.request.status, requestStatus]",{"range":"1371","text":"1372"},[1466,1466],", [props.cardType, props.requestStatus, requestStatus]",[2394,2394],", [academicMembers.length, props.courseID]",[979,979],", [dayOff, props.dayOff]",[2231,2231],", [props, hasBeenCancelled, status, instructorName, instructorID, locationName]",[1474,1474],", [props.cardType, props.request.status, requestStatus]"]